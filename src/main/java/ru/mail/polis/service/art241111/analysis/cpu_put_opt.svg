<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="965"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="965"> </text>
<g id="frames">
<g>
<title>all (395 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="13.0" y="942.0">all</text>
</g>
<g>
<title>[unknown] (1 samples, 0.25%)</title><rect x="10.0" y="915.0" width="3.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.0 (1 samples, 0.25%)</title><rect x="10.0" y="899.0" width="3.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.25%)</title><rect x="10.0" y="883.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.25%)</title><rect x="10.0" y="867.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.25%)</title><rect x="10.0" y="851.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.25%)</title><rect x="10.0" y="835.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.25%)</title><rect x="10.0" y="819.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.25%)</title><rect x="10.0" y="803.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.25%)</title><rect x="10.0" y="787.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.25%)</title><rect x="10.0" y="771.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.25%)</title><rect x="10.0" y="755.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (356 samples, 90.13%)</title><rect x="13.0" y="915.0" width="1063.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="16.0" y="926.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1 samples, 0.25%)</title><rect x="13.0" y="899.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="16.0" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (126 samples, 31.90%)</title><rect x="16.0" y="899.0" width="376.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="19.0" y="910.0">one/nio/net/NativeSelector.select</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (121 samples, 30.63%)</title><rect x="30.9" y="883.0" width="361.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="33.9" y="894.0">one/nio/net/NativeSelector.epollWait</text>
</g>
<g>
<title>clock_gettime (2 samples, 0.51%)</title><rect x="39.9" y="867.0" width="5.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="42.9" y="878.0"></text>
</g>
<g>
<title>epoll_wait (116 samples, 29.37%)</title><rect x="45.8" y="867.0" width="346.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="48.8" y="878.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (107 samples, 27.09%)</title><rect x="72.7" y="851.0" width="319.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="75.7" y="862.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (107 samples, 27.09%)</title><rect x="72.7" y="835.0" width="319.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="75.7" y="846.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_epoll_wait (105 samples, 26.58%)</title><rect x="78.7" y="819.0" width="313.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="81.7" y="830.0">__x64_sys_epoll_wait</text>
</g>
<g>
<title>do_epoll_wait (104 samples, 26.33%)</title><rect x="78.7" y="803.0" width="310.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="81.7" y="814.0">do_epoll_wait</text>
</g>
<g>
<title>__fdget (1 samples, 0.25%)</title><rect x="78.7" y="787.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="81.7" y="798.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.25%)</title><rect x="78.7" y="771.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="81.7" y="782.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.25%)</title><rect x="78.7" y="755.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="81.7" y="766.0"></text>
</g>
<g>
<title>ep_poll (102 samples, 25.82%)</title><rect x="81.7" y="787.0" width="304.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="84.7" y="798.0">ep_poll</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (12 samples, 3.04%)</title><rect x="81.7" y="771.0" width="35.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="84.7" y="782.0">ep_..</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.25%)</title><rect x="90.7" y="755.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="93.7" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (7 samples, 1.77%)</title><rect x="93.6" y="755.0" width="21.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="96.6" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (4 samples, 1.01%)</title><rect x="102.6" y="739.0" width="12.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="105.6" y="750.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.76%)</title><rect x="105.6" y="723.0" width="9.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="108.6" y="734.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.51%)</title><rect x="108.6" y="707.0" width="6.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="111.6" y="718.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.25%)</title><rect x="114.6" y="755.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="117.6" y="766.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.25%)</title><rect x="114.6" y="739.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="117.6" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (90 samples, 22.78%)</title><rect x="117.5" y="771.0" width="268.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="120.5" y="782.0">schedule_hrtimeout_range</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (90 samples, 22.78%)</title><rect x="117.5" y="755.0" width="268.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="120.5" y="766.0">schedule_hrtimeout_range_clock</text>
</g>
<g>
<title>schedule (90 samples, 22.78%)</title><rect x="117.5" y="739.0" width="268.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="120.5" y="750.0">schedule</text>
</g>
<g>
<title>__sched_text_start (90 samples, 22.78%)</title><rect x="117.5" y="723.0" width="268.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="120.5" y="734.0">__sched_text_start</text>
</g>
<g>
<title>finish_task_switch (90 samples, 22.78%)</title><rect x="117.5" y="707.0" width="268.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="120.5" y="718.0">finish_task_switch</text>
</g>
<g>
<title>fput_many (1 samples, 0.25%)</title><rect x="386.4" y="787.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="389.4" y="798.0"></text>
</g>
<g>
<title>fput (1 samples, 0.25%)</title><rect x="389.4" y="803.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="392.4" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (229 samples, 57.97%)</title><rect x="392.4" y="899.0" width="684.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="395.4" y="910.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (229 samples, 57.97%)</title><rect x="392.4" y="883.0" width="684.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="395.4" y="894.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (189 samples, 47.85%)</title><rect x="392.4" y="867.0" width="564.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="395.4" y="878.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.25%)</title><rect x="392.4" y="851.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="395.4" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (173 samples, 43.80%)</title><rect x="395.4" y="851.0" width="516.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="398.4" y="862.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (173 samples, 43.80%)</title><rect x="395.4" y="835.0" width="516.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="398.4" y="846.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (171 samples, 43.29%)</title><rect x="395.4" y="819.0" width="510.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="398.4" y="830.0">RequestHandler0_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (146 samples, 36.96%)</title><rect x="395.4" y="803.0" width="436.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="398.4" y="814.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (146 samples, 36.96%)</title><rect x="395.4" y="787.0" width="436.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="398.4" y="798.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 1.27%)</title><rect x="395.4" y="771.0" width="14.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="398.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 1.01%)</title><rect x="398.4" y="755.0" width="11.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="401.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 1.01%)</title><rect x="398.4" y="739.0" width="11.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="401.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 1.01%)</title><rect x="398.4" y="723.0" width="11.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="401.4" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (141 samples, 35.70%)</title><rect x="410.3" y="771.0" width="421.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="413.3" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (141 samples, 35.70%)</title><rect x="410.3" y="755.0" width="421.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="413.3" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.25%)</title><rect x="410.3" y="739.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="413.3" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (140 samples, 35.44%)</title><rect x="413.3" y="739.0" width="418.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="416.3" y="750.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (140 samples, 35.44%)</title><rect x="413.3" y="723.0" width="418.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="416.3" y="734.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.51%)</title><rect x="413.3" y="707.0" width="6.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="416.3" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.25%)</title><rect x="416.3" y="691.0" width="3.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="419.3" y="702.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.25%)</title><rect x="416.3" y="675.0" width="3.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="419.3" y="686.0"></text>
</g>
<g>
<title>__send (138 samples, 34.94%)</title><rect x="419.3" y="707.0" width="412.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="422.3" y="718.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (138 samples, 34.94%)</title><rect x="419.3" y="691.0" width="412.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="422.3" y="702.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (138 samples, 34.94%)</title><rect x="419.3" y="675.0" width="412.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="422.3" y="686.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (131 samples, 33.16%)</title><rect x="422.3" y="659.0" width="391.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="425.3" y="670.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (130 samples, 32.91%)</title><rect x="422.3" y="643.0" width="388.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="425.3" y="654.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (129 samples, 32.66%)</title><rect x="425.2" y="627.0" width="385.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="428.2" y="638.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (125 samples, 31.65%)</title><rect x="428.2" y="611.0" width="373.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="431.2" y="622.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (125 samples, 31.65%)</title><rect x="428.2" y="595.0" width="373.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="431.2" y="606.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.25%)</title><rect x="428.2" y="579.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="431.2" y="590.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.25%)</title><rect x="431.2" y="579.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="434.2" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (123 samples, 31.14%)</title><rect x="434.2" y="579.0" width="367.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="437.2" y="590.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.25%)</title><rect x="434.2" y="563.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="437.2" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (8 samples, 2.03%)</title><rect x="437.2" y="563.0" width="23.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="440.2" y="574.0">s..</text>
</g>
<g>
<title>__alloc_skb (7 samples, 1.77%)</title><rect x="440.2" y="547.0" width="20.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="443.2" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.51%)</title><rect x="440.2" y="531.0" width="6.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="443.2" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.51%)</title><rect x="440.2" y="515.0" width="6.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="443.2" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.51%)</title><rect x="446.2" y="531.0" width="5.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="449.2" y="542.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.51%)</title><rect x="452.1" y="531.0" width="6.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="455.1" y="542.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.51%)</title><rect x="452.1" y="515.0" width="6.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="455.1" y="526.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.25%)</title><rect x="458.1" y="531.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="461.1" y="542.0"></text>
</g>
<g>
<title>tcp_push (113 samples, 28.61%)</title><rect x="461.1" y="563.0" width="337.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="464.1" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (113 samples, 28.61%)</title><rect x="461.1" y="547.0" width="337.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="464.1" y="558.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.25%)</title><rect x="461.1" y="531.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="464.1" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (112 samples, 28.35%)</title><rect x="464.1" y="531.0" width="334.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="467.1" y="542.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (110 samples, 27.85%)</title><rect x="464.1" y="515.0" width="328.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="467.1" y="526.0">__tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (109 samples, 27.59%)</title><rect x="467.1" y="499.0" width="325.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="470.1" y="510.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (108 samples, 27.34%)</title><rect x="467.1" y="483.0" width="322.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="470.1" y="494.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (107 samples, 27.09%)</title><rect x="467.1" y="467.0" width="319.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="470.1" y="478.0">ip_local_out</text>
</g>
<g>
<title>ip_output (107 samples, 27.09%)</title><rect x="467.1" y="451.0" width="319.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="470.1" y="462.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (107 samples, 27.09%)</title><rect x="467.1" y="435.0" width="319.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="470.1" y="446.0">ip_finish_output</text>
</g>
<g>
<title>__ip_finish_output (107 samples, 27.09%)</title><rect x="467.1" y="419.0" width="319.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="470.1" y="430.0">__ip_finish_output</text>
</g>
<g>
<title>ip_finish_output2 (106 samples, 26.84%)</title><rect x="470.1" y="403.0" width="316.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="473.1" y="414.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (99 samples, 25.06%)</title><rect x="476.0" y="387.0" width="295.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="479.0" y="398.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.0 (99 samples, 25.06%)</title><rect x="476.0" y="371.0" width="295.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="479.0" y="382.0">do_softirq.part.0</text>
</g>
<g>
<title>do_softirq_own_stack (99 samples, 25.06%)</title><rect x="476.0" y="355.0" width="295.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="479.0" y="366.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (99 samples, 25.06%)</title><rect x="476.0" y="339.0" width="295.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="479.0" y="350.0">__softirqentry_text_start</text>
</g>
<g>
<title>net_rx_action (98 samples, 24.81%)</title><rect x="479.0" y="323.0" width="292.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="482.0" y="334.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (97 samples, 24.56%)</title><rect x="482.0" y="307.0" width="289.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="485.0" y="318.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (93 samples, 23.54%)</title><rect x="493.9" y="291.0" width="277.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="496.9" y="302.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_one_core (93 samples, 23.54%)</title><rect x="493.9" y="275.0" width="277.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="496.9" y="286.0">__netif_receive_skb_one_core</text>
</g>
<g>
<title>ip_rcv (92 samples, 23.29%)</title><rect x="496.9" y="259.0" width="274.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="499.9" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (92 samples, 23.29%)</title><rect x="496.9" y="243.0" width="274.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="499.9" y="254.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (92 samples, 23.29%)</title><rect x="496.9" y="227.0" width="274.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="499.9" y="238.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (92 samples, 23.29%)</title><rect x="496.9" y="211.0" width="274.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="499.9" y="222.0">ip_local_deliver_finish</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (92 samples, 23.29%)</title><rect x="496.9" y="195.0" width="274.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="499.9" y="206.0">ip_protocol_deliver_rcu</text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.25%)</title><rect x="496.9" y="179.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="499.9" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (91 samples, 23.04%)</title><rect x="499.9" y="179.0" width="271.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="502.9" y="190.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.25%)</title><rect x="499.9" y="163.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="502.9" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (90 samples, 22.78%)</title><rect x="502.9" y="163.0" width="268.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="505.9" y="174.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.25%)</title><rect x="502.9" y="147.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="505.9" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (89 samples, 22.53%)</title><rect x="505.9" y="147.0" width="265.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="508.9" y="158.0">tcp_rcv_established</text>
</g>
<g>
<title>tcp_ack (3 samples, 0.76%)</title><rect x="505.9" y="131.0" width="9.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="508.9" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.76%)</title><rect x="505.9" y="115.0" width="9.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="508.9" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.51%)</title><rect x="508.9" y="99.0" width="6.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="511.9" y="110.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.51%)</title><rect x="508.9" y="83.0" width="6.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="511.9" y="94.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.25%)</title><rect x="508.9" y="67.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="511.9" y="78.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.25%)</title><rect x="508.9" y="51.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="511.9" y="62.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.25%)</title><rect x="508.9" y="35.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="511.9" y="46.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.25%)</title><rect x="511.9" y="67.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="514.9" y="78.0"></text>
</g>
<g>
<title>tcp_data_ready (83 samples, 21.01%)</title><rect x="514.9" y="131.0" width="247.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="517.9" y="142.0">tcp_data_ready</text>
</g>
<g>
<title>sock_def_readable (83 samples, 21.01%)</title><rect x="514.9" y="115.0" width="247.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="517.9" y="126.0">sock_def_readable</text>
</g>
<g>
<title>__wake_up_sync_key (83 samples, 21.01%)</title><rect x="514.9" y="99.0" width="247.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="517.9" y="110.0">__wake_up_sync_key</text>
</g>
<g>
<title>__wake_up_common_lock (83 samples, 21.01%)</title><rect x="514.9" y="83.0" width="247.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="517.9" y="94.0">__wake_up_common_lock</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (83 samples, 21.01%)</title><rect x="514.9" y="67.0" width="247.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="517.9" y="78.0">_raw_spin_unlock_irqrestore</text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.25%)</title><rect x="762.8" y="131.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="765.8" y="142.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.25%)</title><rect x="765.8" y="131.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="768.8" y="142.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.25%)</title><rect x="765.8" y="115.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="768.8" y="126.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.25%)</title><rect x="768.8" y="131.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="771.8" y="142.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 1.27%)</title><rect x="771.8" y="387.0" width="14.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="774.8" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 1.27%)</title><rect x="771.8" y="371.0" width="14.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="774.8" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.51%)</title><rect x="774.8" y="355.0" width="5.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="777.8" y="366.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.25%)</title><rect x="777.7" y="339.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="780.7" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.25%)</title><rect x="780.7" y="355.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="783.7" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.25%)</title><rect x="783.7" y="355.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="786.7" y="366.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.25%)</title><rect x="786.7" y="467.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="789.7" y="478.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.25%)</title><rect x="789.7" y="483.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="792.7" y="494.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.25%)</title><rect x="792.7" y="515.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="795.7" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.25%)</title><rect x="795.7" y="515.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="798.7" y="526.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.25%)</title><rect x="795.7" y="499.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="798.7" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.25%)</title><rect x="798.7" y="563.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="801.7" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.25%)</title><rect x="798.7" y="547.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="801.7" y="558.0"></text>
</g>
<g>
<title>inet_send_prepare (1 samples, 0.25%)</title><rect x="801.6" y="611.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="804.6" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.51%)</title><rect x="804.6" y="611.0" width="6.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="807.6" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.25%)</title><rect x="807.6" y="595.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="810.6" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.25%)</title><rect x="807.6" y="579.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="810.6" y="590.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (1 samples, 0.25%)</title><rect x="807.6" y="563.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="810.6" y="574.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.25%)</title><rect x="807.6" y="547.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="810.6" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.25%)</title><rect x="810.6" y="643.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="813.6" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (6 samples, 1.52%)</title><rect x="813.6" y="659.0" width="17.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="816.6" y="670.0"></text>
</g>
<g>
<title>schedule (6 samples, 1.52%)</title><rect x="813.6" y="643.0" width="17.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="816.6" y="654.0"></text>
</g>
<g>
<title>__sched_text_start (6 samples, 1.52%)</title><rect x="813.6" y="627.0" width="17.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="816.6" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 1.52%)</title><rect x="813.6" y="611.0" width="17.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="816.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.25%)</title><rect x="831.5" y="803.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="834.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.25%)</title><rect x="831.5" y="787.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="834.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.25%)</title><rect x="831.5" y="771.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="834.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.25%)</title><rect x="831.5" y="755.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="834.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/art241111/MyHttpServer.entity (24 samples, 6.08%)</title><rect x="834.5" y="803.0" width="71.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="837.5" y="814.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/art241111/handlers/EntityHandler.handleGetRequest (5 samples, 1.27%)</title><rect x="834.5" y="787.0" width="14.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="837.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (5 samples, 1.27%)</title><rect x="834.5" y="771.0" width="14.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="837.5" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (2 samples, 0.51%)</title><rect x="834.5" y="755.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="837.5" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2 samples, 0.51%)</title><rect x="834.5" y="739.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="837.5" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (2 samples, 0.51%)</title><rect x="834.5" y="723.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="837.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/TurboDAO.iterator (3 samples, 0.76%)</title><rect x="840.5" y="755.0" width="8.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="843.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/TurboDAO.cellIterator (3 samples, 0.76%)</title><rect x="840.5" y="739.0" width="8.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="843.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/MemTable.iterator (3 samples, 0.76%)</title><rect x="840.5" y="723.0" width="8.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="843.5" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (3 samples, 0.76%)</title><rect x="840.5" y="707.0" width="8.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="843.5" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (3 samples, 0.76%)</title><rect x="840.5" y="691.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="843.5" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.&lt;init&gt; (3 samples, 0.76%)</title><rect x="840.5" y="675.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="843.5" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.&lt;init&gt; (3 samples, 0.76%)</title><rect x="840.5" y="659.0" width="8.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="843.5" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (3 samples, 0.76%)</title><rect x="840.5" y="643.0" width="8.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="843.5" y="654.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.25%)</title><rect x="846.5" y="627.0" width="2.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="849.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/art241111/handlers/EntityHandler.handlePutRequest (19 samples, 4.81%)</title><rect x="849.4" y="787.0" width="56.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="852.4" y="798.0">ru/mai..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (2 samples, 0.51%)</title><rect x="849.4" y="771.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="852.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/TurboDAO.upsert (2 samples, 0.51%)</title><rect x="849.4" y="755.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="852.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/TurboDAO.upsert (17 samples, 4.30%)</title><rect x="855.4" y="771.0" width="50.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="858.4" y="782.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/MemTable.upsert (17 samples, 4.30%)</title><rect x="855.4" y="755.0" width="50.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="858.4" y="766.0">ru/ma..</text>
</g>
<g>
<title>java/util/TreeMap.put (16 samples, 4.05%)</title><rect x="858.4" y="739.0" width="47.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="861.4" y="750.0">java..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 2.03%)</title><rect x="876.3" y="723.0" width="23.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="879.3" y="734.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 1.77%)</title><rect x="879.3" y="707.0" width="20.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="882.3" y="718.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 1.77%)</title><rect x="879.3" y="691.0" width="20.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="882.3" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.51%)</title><rect x="891.3" y="675.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="894.3" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.51%)</title><rect x="891.3" y="659.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="894.3" y="670.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.25%)</title><rect x="897.2" y="675.0" width="3.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="900.2" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.25%)</title><rect x="900.2" y="723.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="903.2" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.25%)</title><rect x="903.2" y="723.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="906.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.51%)</title><rect x="906.2" y="819.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="909.2" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.51%)</title><rect x="906.2" y="803.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="909.2" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.51%)</title><rect x="906.2" y="787.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="909.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.51%)</title><rect x="906.2" y="771.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="909.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.51%)</title><rect x="906.2" y="755.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="909.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 1.52%)</title><rect x="912.2" y="851.0" width="17.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="915.2" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.25%)</title><rect x="912.2" y="835.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="915.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.25%)</title><rect x="912.2" y="819.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="915.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.25%)</title><rect x="912.2" y="803.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="915.2" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.25%)</title><rect x="912.2" y="787.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="915.2" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.76%)</title><rect x="915.2" y="835.0" width="8.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="918.2" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.76%)</title><rect x="915.2" y="819.0" width="8.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="918.2" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.51%)</title><rect x="924.1" y="835.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="927.1" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.76%)</title><rect x="930.1" y="851.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="933.1" y="862.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.76%)</title><rect x="930.1" y="835.0" width="9.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="933.1" y="846.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.25%)</title><rect x="936.1" y="819.0" width="3.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="939.1" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.76%)</title><rect x="939.1" y="851.0" width="8.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="942.1" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.76%)</title><rect x="939.1" y="835.0" width="8.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="942.1" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.76%)</title><rect x="939.1" y="819.0" width="8.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="942.1" y="830.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.25%)</title><rect x="945.0" y="803.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="948.0" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.25%)</title><rect x="945.0" y="787.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="948.0" y="798.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.25%)</title><rect x="945.0" y="771.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="948.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.76%)</title><rect x="948.0" y="851.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="951.0" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (40 samples, 10.13%)</title><rect x="957.0" y="867.0" width="119.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="960.0" y="878.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (40 samples, 10.13%)</title><rect x="957.0" y="851.0" width="119.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="960.0" y="862.0">one/nio/net/Nat..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (12 samples, 3.04%)</title><rect x="960.0" y="835.0" width="35.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="963.0" y="846.0">Jav..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.30.so (2 samples, 0.51%)</title><rect x="960.0" y="819.0" width="5.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="963.0" y="830.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.25%)</title><rect x="965.9" y="819.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="968.9" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.25%)</title><rect x="968.9" y="819.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="971.9" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (8 samples, 2.03%)</title><rect x="971.9" y="819.0" width="23.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="974.9" y="830.0">j..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.51%)</title><rect x="971.9" y="803.0" width="6.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="974.9" y="814.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.51%)</title><rect x="977.9" y="803.0" width="6.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="980.9" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.25%)</title><rect x="983.9" y="803.0" width="3.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="986.9" y="814.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.76%)</title><rect x="986.9" y="803.0" width="8.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="989.9" y="814.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.76%)</title><rect x="986.9" y="787.0" width="8.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="989.9" y="798.0"></text>
</g>
<g>
<title>__recv (26 samples, 6.58%)</title><rect x="995.8" y="835.0" width="77.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="998.8" y="846.0">__recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 5.32%)</title><rect x="1010.8" y="819.0" width="62.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1013.8" y="830.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (21 samples, 5.32%)</title><rect x="1010.8" y="803.0" width="62.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1013.8" y="814.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_recvfrom (18 samples, 4.56%)</title><rect x="1019.7" y="787.0" width="53.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1022.7" y="798.0">__x64..</text>
</g>
<g>
<title>__sys_recvfrom (18 samples, 4.56%)</title><rect x="1019.7" y="771.0" width="53.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1022.7" y="782.0">__sys..</text>
</g>
<g>
<title>fput_many (1 samples, 0.25%)</title><rect x="1019.7" y="755.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1022.7" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (17 samples, 4.30%)</title><rect x="1022.7" y="755.0" width="50.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1025.7" y="766.0">sock_..</text>
</g>
<g>
<title>inet6_recvmsg (13 samples, 3.29%)</title><rect x="1022.7" y="739.0" width="38.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1025.7" y="750.0">ine..</text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.25%)</title><rect x="1022.7" y="723.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1025.7" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (12 samples, 3.04%)</title><rect x="1025.7" y="723.0" width="35.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1028.7" y="734.0">tcp..</text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.25%)</title><rect x="1028.7" y="707.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1031.7" y="718.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.25%)</title><rect x="1028.7" y="691.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1031.7" y="702.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.25%)</title><rect x="1028.7" y="675.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1031.7" y="686.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.25%)</title><rect x="1028.7" y="659.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1031.7" y="670.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.25%)</title><rect x="1031.7" y="707.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1034.7" y="718.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.25%)</title><rect x="1034.7" y="707.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1037.7" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.25%)</title><rect x="1034.7" y="691.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1037.7" y="702.0"></text>
</g>
<g>
<title>__pv_queued_spin_lock_slowpath (1 samples, 0.25%)</title><rect x="1034.7" y="675.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1037.7" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (6 samples, 1.52%)</title><rect x="1037.6" y="707.0" width="18.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1040.6" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (6 samples, 1.52%)</title><rect x="1037.6" y="691.0" width="18.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1040.6" y="702.0"></text>
</g>
<g>
<title>simple_copy_to_iter (5 samples, 1.27%)</title><rect x="1040.6" y="675.0" width="15.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1043.6" y="686.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 1.01%)</title><rect x="1040.6" y="659.0" width="12.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1043.6" y="670.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.76%)</title><rect x="1043.6" y="643.0" width="9.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1046.6" y="654.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.25%)</title><rect x="1052.6" y="659.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1055.6" y="670.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.25%)</title><rect x="1052.6" y="643.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1055.6" y="654.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.25%)</title><rect x="1055.6" y="707.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1058.6" y="718.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.25%)</title><rect x="1058.6" y="707.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1061.6" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 1.01%)</title><rect x="1061.5" y="739.0" width="12.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1064.5" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.76%)</title><rect x="1064.5" y="723.0" width="9.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1067.5" y="734.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.76%)</title><rect x="1064.5" y="707.0" width="9.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1067.5" y="718.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (1 samples, 0.25%)</title><rect x="1070.5" y="691.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1073.5" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.25%)</title><rect x="1073.5" y="835.0" width="3.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1076.5" y="846.0"></text>
</g>
<g>
<title>start_thread (38 samples, 9.62%)</title><rect x="1076.5" y="915.0" width="113.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1079.5" y="926.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (38 samples, 9.62%)</title><rect x="1076.5" y="899.0" width="113.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1079.5" y="910.0">thread_native_..</text>
</g>
<g>
<title>Thread::call_run() (38 samples, 9.62%)</title><rect x="1076.5" y="883.0" width="113.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1079.5" y="894.0">Thread::call_r..</text>
</g>
<g>
<title>ConcurrentGCThread::run() (1 samples, 0.25%)</title><rect x="1076.5" y="867.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1079.5" y="878.0"></text>
</g>
<g>
<title>G1ConcurrentRefineThread::run_service() (1 samples, 0.25%)</title><rect x="1076.5" y="851.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1079.5" y="862.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long) (1 samples, 0.25%)</title><rect x="1076.5" y="835.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1079.5" y="846.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_concurrently(signed char*, unsigned int) (1 samples, 0.25%)</title><rect x="1076.5" y="819.0" width="3.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1079.5" y="830.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;false, G1ConcurrentRefineOopClosure&gt;(MemRegion, G1ConcurrentRefineOopClosure*) (1 samples, 0.25%)</title><rect x="1076.5" y="803.0" width="3.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1079.5" y="814.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.25%)</title><rect x="1076.5" y="787.0" width="3.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1079.5" y="798.0"></text>
</g>
<g>
<title>GangWorker::loop() (36 samples, 9.11%)</title><rect x="1079.5" y="867.0" width="107.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1082.5" y="878.0">GangWorker::l..</text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (36 samples, 9.11%)</title><rect x="1079.5" y="851.0" width="107.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1082.5" y="862.0">G1ParTask::wo..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.25%)</title><rect x="1079.5" y="835.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1082.5" y="846.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.25%)</title><rect x="1079.5" y="819.0" width="3.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1082.5" y="830.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (13 samples, 3.29%)</title><rect x="1082.5" y="835.0" width="38.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1085.5" y="846.0">G1R..</text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (13 samples, 3.29%)</title><rect x="1082.5" y="819.0" width="38.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1085.5" y="830.0">G1R..</text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (13 samples, 3.29%)</title><rect x="1082.5" y="803.0" width="38.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1085.5" y="814.0">G1C..</text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (13 samples, 3.29%)</title><rect x="1082.5" y="787.0" width="38.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1085.5" y="798.0">Dir..</text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (13 samples, 3.29%)</title><rect x="1082.5" y="771.0" width="38.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1085.5" y="782.0">G1R..</text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.25%)</title><rect x="1082.5" y="755.0" width="2.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1085.5" y="766.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (12 samples, 3.04%)</title><rect x="1085.4" y="755.0" width="35.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1088.4" y="766.0">G1P..</text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (5 samples, 1.27%)</title><rect x="1100.4" y="739.0" width="14.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1103.4" y="750.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (1 samples, 0.25%)</title><rect x="1112.3" y="723.0" width="3.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1115.3" y="734.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.51%)</title><rect x="1115.3" y="739.0" width="6.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1118.3" y="750.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (22 samples, 5.57%)</title><rect x="1121.3" y="835.0" width="65.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1124.3" y="846.0">G1RemSe..</text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (22 samples, 5.57%)</title><rect x="1121.3" y="819.0" width="65.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1124.3" y="830.0">G1Colle..</text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (22 samples, 5.57%)</title><rect x="1121.3" y="803.0" width="65.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1124.3" y="814.0">G1ScanR..</text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (22 samples, 5.57%)</title><rect x="1121.3" y="787.0" width="65.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1124.3" y="798.0">G1ScanR..</text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (21 samples, 5.32%)</title><rect x="1121.3" y="771.0" width="62.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1124.3" y="782.0">G1ParS..</text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (12 samples, 3.04%)</title><rect x="1148.2" y="755.0" width="35.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1151.2" y="766.0">G1P..</text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.51%)</title><rect x="1178.1" y="739.0" width="5.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.1" y="750.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringScanRSClosure&gt;::Table::oop_oop_iterate&lt;TypeArrayKlass, unsigned int&gt;(G1ScanObjsDuringScanRSClosure*, oopDesc*, Klass*) (1 samples, 0.25%)</title><rect x="1184.0" y="771.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.0" y="782.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.25%)</title><rect x="1187.0" y="867.0" width="3.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.0" y="878.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.25%)</title><rect x="1187.0" y="851.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.0" y="862.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.25%)</title><rect x="1187.0" y="835.0" width="3.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.0" y="846.0"></text>
</g>
</g>
</svg>
