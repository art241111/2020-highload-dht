<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2070" onload="init(evt)" viewBox="0 0 1200 2070" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="2053"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="2053"> </text>
<g id="frames">
<g>
<title>all (1,631 samples, 100.00%)</title><rect x="10.0" y="2019.0" width="1180.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="13.0" y="2030.0">all</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.30.so (1 samples, 0.06%)</title><rect x="10.0" y="2003.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="13.0" y="2014.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="10.7" y="2003.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.7" y="2014.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="10.7" y="1987.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.7" y="1998.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="10.7" y="1971.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.7" y="1982.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.06%)</title><rect x="10.7" y="1955.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.7" y="1966.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.37%)</title><rect x="11.4" y="2003.0" width="4.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="14.4" y="2014.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.30.so (6 samples, 0.37%)</title><rect x="11.4" y="1987.0" width="4.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="14.4" y="1998.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,531 samples, 93.87%)</title><rect x="15.8" y="2003.0" width="1107.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="18.8" y="2014.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3 samples, 0.18%)</title><rect x="16.5" y="1987.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="19.5" y="1998.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (172 samples, 10.55%)</title><rect x="18.7" y="1987.0" width="124.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="21.7" y="1998.0">one/nio/net/Nat..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (172 samples, 10.55%)</title><rect x="18.7" y="1971.0" width="124.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="21.7" y="1982.0">one/nio/net/Nat..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.30.so (2 samples, 0.12%)</title><rect x="22.3" y="1955.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="25.3" y="1966.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.06%)</title><rect x="23.7" y="1955.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="26.7" y="1966.0"></text>
</g>
<g>
<title>clock_gettime (8 samples, 0.49%)</title><rect x="24.5" y="1955.0" width="5.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="27.5" y="1966.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="28.8" y="1939.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="31.8" y="1950.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.06%)</title><rect x="29.5" y="1939.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="32.5" y="1950.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="29.5" y="1923.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="32.5" y="1934.0"></text>
</g>
<g>
<title>epoll_wait (156 samples, 9.56%)</title><rect x="30.3" y="1955.0" width="112.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="33.3" y="1966.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (135 samples, 8.28%)</title><rect x="45.5" y="1939.0" width="97.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="48.5" y="1950.0">entry_SYSCA..</text>
</g>
<g>
<title>do_syscall_64 (135 samples, 8.28%)</title><rect x="45.5" y="1923.0" width="97.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="48.5" y="1934.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_epoll_wait (133 samples, 8.15%)</title><rect x="46.9" y="1907.0" width="96.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="49.9" y="1918.0">__x64_sys_e..</text>
</g>
<g>
<title>do_epoll_wait (133 samples, 8.15%)</title><rect x="46.9" y="1891.0" width="96.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="49.9" y="1902.0">do_epoll_wait</text>
</g>
<g>
<title>__fdget (1 samples, 0.06%)</title><rect x="46.9" y="1875.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="49.9" y="1886.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="46.9" y="1859.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="49.9" y="1870.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="46.9" y="1843.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="49.9" y="1854.0"></text>
</g>
<g>
<title>ep_poll (131 samples, 8.03%)</title><rect x="47.6" y="1875.0" width="94.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="50.6" y="1886.0">ep_poll</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (6 samples, 0.37%)</title><rect x="48.3" y="1859.0" width="4.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="51.3" y="1870.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.31%)</title><rect x="49.1" y="1843.0" width="3.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="52.1" y="1854.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (3 samples, 0.18%)</title><rect x="49.8" y="1827.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="52.8" y="1838.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.12%)</title><rect x="49.8" y="1811.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="52.8" y="1822.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.06%)</title><rect x="51.2" y="1811.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="54.2" y="1822.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.06%)</title><rect x="52.0" y="1827.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="55.0" y="1838.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.06%)</title><rect x="52.7" y="1859.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="55.7" y="1870.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.12%)</title><rect x="53.4" y="1859.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="56.4" y="1870.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (121 samples, 7.42%)</title><rect x="54.9" y="1859.0" width="87.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="57.9" y="1870.0">schedule_h..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (121 samples, 7.42%)</title><rect x="54.9" y="1843.0" width="87.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="57.9" y="1854.0">schedule_h..</text>
</g>
<g>
<title>schedule (120 samples, 7.36%)</title><rect x="55.6" y="1827.0" width="86.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="58.6" y="1838.0">schedule</text>
</g>
<g>
<title>__sched_text_start (120 samples, 7.36%)</title><rect x="55.6" y="1811.0" width="86.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="58.6" y="1822.0">__sched_te..</text>
</g>
<g>
<title>finish_task_switch (120 samples, 7.36%)</title><rect x="55.6" y="1795.0" width="86.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="58.6" y="1806.0">finish_tas..</text>
</g>
<g>
<title>fput_many (1 samples, 0.06%)</title><rect x="142.4" y="1875.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="145.4" y="1886.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,355 samples, 83.08%)</title><rect x="143.1" y="1987.0" width="980.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="146.1" y="1998.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,343 samples, 82.34%)</title><rect x="151.8" y="1971.0" width="971.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="154.8" y="1982.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,252 samples, 76.76%)</title><rect x="152.5" y="1955.0" width="905.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="155.5" y="1966.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,243 samples, 76.21%)</title><rect x="152.5" y="1939.0" width="899.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="155.5" y="1950.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,243 samples, 76.21%)</title><rect x="152.5" y="1923.0" width="899.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="155.5" y="1934.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (1,233 samples, 75.60%)</title><rect x="157.6" y="1907.0" width="892.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="160.6" y="1918.0">RequestHandler0_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (528 samples, 32.37%)</title><rect x="157.6" y="1891.0" width="382.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="160.6" y="1902.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (528 samples, 32.37%)</title><rect x="157.6" y="1875.0" width="382.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="160.6" y="1886.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.18%)</title><rect x="157.6" y="1859.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="160.6" y="1870.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.12%)</title><rect x="158.3" y="1843.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="161.3" y="1854.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.12%)</title><rect x="158.3" y="1827.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="161.3" y="1838.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.12%)</title><rect x="158.3" y="1811.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="161.3" y="1822.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (525 samples, 32.19%)</title><rect x="159.8" y="1859.0" width="379.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="162.8" y="1870.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (525 samples, 32.19%)</title><rect x="159.8" y="1843.0" width="379.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="162.8" y="1854.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (525 samples, 32.19%)</title><rect x="159.8" y="1827.0" width="379.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="162.8" y="1838.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.12%)</title><rect x="159.8" y="1811.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="162.8" y="1822.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (523 samples, 32.07%)</title><rect x="161.2" y="1811.0" width="378.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="164.2" y="1822.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.25%)</title><rect x="161.2" y="1795.0" width="2.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="164.2" y="1806.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.30.so (1 samples, 0.06%)</title><rect x="161.2" y="1779.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="164.2" y="1790.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="161.2" y="1763.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="164.2" y="1774.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="161.2" y="1747.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="164.2" y="1758.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="161.2" y="1731.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="164.2" y="1742.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="161.9" y="1779.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="164.9" y="1790.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.06%)</title><rect x="162.7" y="1779.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="165.7" y="1790.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.06%)</title><rect x="163.4" y="1779.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="166.4" y="1790.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.06%)</title><rect x="163.4" y="1763.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="166.4" y="1774.0"></text>
</g>
<g>
<title>__send (519 samples, 31.82%)</title><rect x="164.1" y="1795.0" width="375.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="167.1" y="1806.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (513 samples, 31.45%)</title><rect x="168.4" y="1779.0" width="371.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="171.4" y="1790.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (513 samples, 31.45%)</title><rect x="168.4" y="1763.0" width="371.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="171.4" y="1774.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (479 samples, 29.37%)</title><rect x="168.4" y="1747.0" width="346.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="171.4" y="1758.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (479 samples, 29.37%)</title><rect x="168.4" y="1731.0" width="346.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="171.4" y="1742.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (477 samples, 29.25%)</title><rect x="169.9" y="1715.0" width="345.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="172.9" y="1726.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (476 samples, 29.18%)</title><rect x="169.9" y="1699.0" width="344.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="172.9" y="1710.0">inet6_sendmsg</text>
</g>
<g>
<title>release_sock (1 samples, 0.06%)</title><rect x="169.9" y="1683.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="172.9" y="1694.0"></text>
</g>
<g>
<title>tcp_sendmsg (475 samples, 29.12%)</title><rect x="170.6" y="1683.0" width="343.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="173.6" y="1694.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.06%)</title><rect x="171.3" y="1667.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="174.3" y="1678.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (473 samples, 29.00%)</title><rect x="172.1" y="1667.0" width="342.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="175.1" y="1678.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.12%)</title><rect x="172.1" y="1651.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="175.1" y="1662.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.06%)</title><rect x="172.1" y="1635.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="175.1" y="1646.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.06%)</title><rect x="172.1" y="1619.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="175.1" y="1630.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.06%)</title><rect x="172.1" y="1603.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="175.1" y="1614.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.06%)</title><rect x="172.8" y="1635.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="175.8" y="1646.0"></text>
</g>
<g>
<title>tcp_push (470 samples, 28.82%)</title><rect x="173.5" y="1651.0" width="340.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="176.5" y="1662.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (470 samples, 28.82%)</title><rect x="173.5" y="1635.0" width="340.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="176.5" y="1646.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (470 samples, 28.82%)</title><rect x="173.5" y="1619.0" width="340.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="176.5" y="1630.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (467 samples, 28.63%)</title><rect x="174.2" y="1603.0" width="337.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="177.2" y="1614.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.06%)</title><rect x="175.0" y="1587.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="178.0" y="1598.0"></text>
</g>
<g>
<title>ip_queue_xmit (464 samples, 28.45%)</title><rect x="175.7" y="1587.0" width="335.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="178.7" y="1598.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (464 samples, 28.45%)</title><rect x="175.7" y="1571.0" width="335.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="178.7" y="1582.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.06%)</title><rect x="175.7" y="1555.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="178.7" y="1566.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.06%)</title><rect x="175.7" y="1539.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="178.7" y="1550.0"></text>
</g>
<g>
<title>ip_local_out (463 samples, 28.39%)</title><rect x="176.4" y="1555.0" width="335.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="179.4" y="1566.0">ip_local_out</text>
</g>
<g>
<title>ip_output (462 samples, 28.33%)</title><rect x="177.1" y="1539.0" width="334.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="180.1" y="1550.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (462 samples, 28.33%)</title><rect x="177.1" y="1523.0" width="334.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="180.1" y="1534.0">ip_finish_output</text>
</g>
<g>
<title>__ip_finish_output (462 samples, 28.33%)</title><rect x="177.1" y="1507.0" width="334.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="180.1" y="1518.0">__ip_finish_output</text>
</g>
<g>
<title>ip_finish_output2 (461 samples, 28.26%)</title><rect x="177.8" y="1491.0" width="333.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="180.8" y="1502.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (455 samples, 27.90%)</title><rect x="180.0" y="1475.0" width="329.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="183.0" y="1486.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.0 (455 samples, 27.90%)</title><rect x="180.0" y="1459.0" width="329.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="183.0" y="1470.0">do_softirq.part.0</text>
</g>
<g>
<title>do_softirq_own_stack (453 samples, 27.77%)</title><rect x="181.5" y="1443.0" width="327.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="184.5" y="1454.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (453 samples, 27.77%)</title><rect x="181.5" y="1427.0" width="327.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="184.5" y="1438.0">__softirqentry_text_start</text>
</g>
<g>
<title>net_rx_action (453 samples, 27.77%)</title><rect x="181.5" y="1411.0" width="327.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="184.5" y="1422.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (453 samples, 27.77%)</title><rect x="181.5" y="1395.0" width="327.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="184.5" y="1406.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (453 samples, 27.77%)</title><rect x="181.5" y="1379.0" width="327.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="184.5" y="1390.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_one_core (453 samples, 27.77%)</title><rect x="181.5" y="1363.0" width="327.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="184.5" y="1374.0">__netif_receive_skb_one_core</text>
</g>
<g>
<title>ip_rcv (453 samples, 27.77%)</title><rect x="181.5" y="1347.0" width="327.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="184.5" y="1358.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (453 samples, 27.77%)</title><rect x="181.5" y="1331.0" width="327.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="184.5" y="1342.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (453 samples, 27.77%)</title><rect x="181.5" y="1315.0" width="327.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="184.5" y="1326.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (453 samples, 27.77%)</title><rect x="181.5" y="1299.0" width="327.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="184.5" y="1310.0">ip_local_deliver_finish</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (453 samples, 27.77%)</title><rect x="181.5" y="1283.0" width="327.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="184.5" y="1294.0">ip_protocol_deliver_rcu</text>
</g>
<g>
<title>tcp_v4_rcv (453 samples, 27.77%)</title><rect x="181.5" y="1267.0" width="327.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="184.5" y="1278.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.18%)</title><rect x="182.2" y="1251.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="185.2" y="1262.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.06%)</title><rect x="183.6" y="1235.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="186.6" y="1246.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.06%)</title><rect x="184.4" y="1251.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="187.4" y="1262.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (448 samples, 27.47%)</title><rect x="185.1" y="1251.0" width="324.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="188.1" y="1262.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.06%)</title><rect x="185.1" y="1235.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="188.1" y="1246.0"></text>
</g>
<g>
<title>tcp_rcv_established (447 samples, 27.41%)</title><rect x="185.8" y="1235.0" width="323.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="188.8" y="1246.0">tcp_rcv_established</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.06%)</title><rect x="185.8" y="1219.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="188.8" y="1230.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.06%)</title><rect x="185.8" y="1203.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="188.8" y="1214.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.06%)</title><rect x="185.8" y="1187.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="188.8" y="1198.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.06%)</title><rect x="185.8" y="1171.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="188.8" y="1182.0"></text>
</g>
<g>
<title>tcp_ack (5 samples, 0.31%)</title><rect x="186.5" y="1219.0" width="3.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="189.5" y="1230.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (5 samples, 0.31%)</title><rect x="186.5" y="1203.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="189.5" y="1214.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.18%)</title><rect x="187.3" y="1187.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="190.3" y="1198.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.18%)</title><rect x="187.3" y="1171.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="190.3" y="1182.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.12%)</title><rect x="187.3" y="1155.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="190.3" y="1166.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.12%)</title><rect x="187.3" y="1139.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="190.3" y="1150.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.06%)</title><rect x="188.7" y="1155.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="191.7" y="1166.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.06%)</title><rect x="189.4" y="1187.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="192.4" y="1198.0"></text>
</g>
<g>
<title>tcp_data_ready (440 samples, 26.98%)</title><rect x="190.1" y="1219.0" width="318.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="193.1" y="1230.0">tcp_data_ready</text>
</g>
<g>
<title>sock_def_readable (440 samples, 26.98%)</title><rect x="190.1" y="1203.0" width="318.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="193.1" y="1214.0">sock_def_readable</text>
</g>
<g>
<title>__wake_up_sync_key (440 samples, 26.98%)</title><rect x="190.1" y="1187.0" width="318.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="193.1" y="1198.0">__wake_up_sync_key</text>
</g>
<g>
<title>__wake_up_common_lock (438 samples, 26.85%)</title><rect x="190.1" y="1171.0" width="316.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="193.1" y="1182.0">__wake_up_common_lock</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (438 samples, 26.85%)</title><rect x="190.1" y="1155.0" width="316.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="193.1" y="1166.0">_raw_spin_unlock_irqrestore</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.12%)</title><rect x="507.0" y="1171.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="510.0" y="1182.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.06%)</title><rect x="508.5" y="1219.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="511.5" y="1230.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.06%)</title><rect x="508.5" y="1203.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="511.5" y="1214.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.18%)</title><rect x="509.2" y="1475.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="512.2" y="1486.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.18%)</title><rect x="509.2" y="1459.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="512.2" y="1470.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.18%)</title><rect x="509.2" y="1443.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="512.2" y="1454.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.12%)</title><rect x="509.9" y="1427.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="512.9" y="1438.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.06%)</title><rect x="511.4" y="1587.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="514.4" y="1598.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.06%)</title><rect x="511.4" y="1571.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="514.4" y="1582.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.06%)</title><rect x="511.4" y="1555.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="514.4" y="1566.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.06%)</title><rect x="512.1" y="1603.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="515.1" y="1614.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.06%)</title><rect x="512.8" y="1603.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="515.8" y="1614.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.06%)</title><rect x="512.8" y="1587.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="515.8" y="1598.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.06%)</title><rect x="512.8" y="1571.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="515.8" y="1582.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.06%)</title><rect x="512.8" y="1555.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="515.8" y="1566.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="512.8" y="1539.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="515.8" y="1550.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.06%)</title><rect x="513.5" y="1651.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="516.5" y="1662.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.06%)</title><rect x="513.5" y="1635.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="516.5" y="1646.0"></text>
</g>
<g>
<title>inet_send_prepare (1 samples, 0.06%)</title><rect x="514.3" y="1699.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="517.3" y="1710.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (34 samples, 2.08%)</title><rect x="515.0" y="1747.0" width="24.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="518.0" y="1758.0">e..</text>
</g>
<g>
<title>schedule (34 samples, 2.08%)</title><rect x="515.0" y="1731.0" width="24.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="518.0" y="1742.0">s..</text>
</g>
<g>
<title>__sched_text_start (34 samples, 2.08%)</title><rect x="515.0" y="1715.0" width="24.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="518.0" y="1726.0">_..</text>
</g>
<g>
<title>finish_task_switch (34 samples, 2.08%)</title><rect x="515.0" y="1699.0" width="24.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="518.0" y="1710.0">f..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (12 samples, 0.74%)</title><rect x="539.6" y="1891.0" width="8.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="542.6" y="1902.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (12 samples, 0.74%)</title><rect x="539.6" y="1875.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="542.6" y="1886.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.12%)</title><rect x="543.9" y="1859.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="546.9" y="1870.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.12%)</title><rect x="543.9" y="1843.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="546.9" y="1854.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="545.4" y="1859.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="548.4" y="1870.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="545.4" y="1843.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="548.4" y="1854.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.06%)</title><rect x="545.4" y="1827.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="548.4" y="1838.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.06%)</title><rect x="546.1" y="1859.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="549.1" y="1870.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.12%)</title><rect x="546.8" y="1859.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="549.8" y="1870.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="547.5" y="1843.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="550.5" y="1854.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="547.5" y="1827.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="550.5" y="1838.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.06%)</title><rect x="547.5" y="1811.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="550.5" y="1822.0"></text>
</g>
<g>
<title>ru/mail/polis/service/art241111/MyHttpServer.entity (693 samples, 42.49%)</title><rect x="548.3" y="1891.0" width="501.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="551.3" y="1902.0">ru/mail/polis/service/art241111/MyHttpServer.entity</text>
</g>
<g>
<title>ru/mail/polis/service/art241111/handlers/EntityHandler.handleGetRequest (693 samples, 42.49%)</title><rect x="548.3" y="1875.0" width="501.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="551.3" y="1886.0">ru/mail/polis/service/art241111/handlers/EntityHandler.handleGetRequest</text>
</g>
<g>
<title>one/nio/http/Response.ok (1 samples, 0.06%)</title><rect x="548.3" y="1859.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="551.3" y="1870.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (692 samples, 42.43%)</title><rect x="549.0" y="1859.0" width="500.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="552.0" y="1870.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (39 samples, 2.39%)</title><rect x="549.0" y="1843.0" width="28.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="552.0" y="1854.0">co..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (38 samples, 2.33%)</title><rect x="549.7" y="1827.0" width="27.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="552.7" y="1838.0">c..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (38 samples, 2.33%)</title><rect x="549.7" y="1811.0" width="27.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="552.7" y="1822.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (38 samples, 2.33%)</title><rect x="549.7" y="1795.0" width="27.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="552.7" y="1806.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (37 samples, 2.27%)</title><rect x="549.7" y="1779.0" width="26.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="552.7" y="1790.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (37 samples, 2.27%)</title><rect x="549.7" y="1763.0" width="26.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="552.7" y="1774.0">c..</text>
</g>
<g>
<title>InlineCacheBuffer (1 samples, 0.06%)</title><rect x="549.7" y="1747.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="552.7" y="1758.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (21 samples, 1.29%)</title><rect x="550.4" y="1747.0" width="15.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="553.4" y="1758.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable$1.next (21 samples, 1.29%)</title><rect x="550.4" y="1731.0" width="15.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="553.4" y="1742.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable$1.next (21 samples, 1.29%)</title><rect x="550.4" y="1715.0" width="15.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="553.4" y="1726.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getCell (21 samples, 1.29%)</title><rect x="550.4" y="1699.0" width="15.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="553.4" y="1710.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getOffset (7 samples, 0.43%)</title><rect x="551.2" y="1683.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="554.2" y="1694.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.readOffset (7 samples, 0.43%)</title><rect x="551.2" y="1667.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="554.2" y="1678.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (7 samples, 0.43%)</title><rect x="551.2" y="1651.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="554.2" y="1662.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (7 samples, 0.43%)</title><rect x="551.2" y="1635.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="554.2" y="1646.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.43%)</title><rect x="551.2" y="1619.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="554.2" y="1630.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.37%)</title><rect x="551.9" y="1603.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="554.9" y="1614.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.37%)</title><rect x="551.9" y="1587.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="554.9" y="1598.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.37%)</title><rect x="551.9" y="1571.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="554.9" y="1582.0"></text>
</g>
<g>
<title>__pread (5 samples, 0.31%)</title><rect x="552.6" y="1555.0" width="3.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="555.6" y="1566.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.25%)</title><rect x="553.3" y="1539.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="556.3" y="1550.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.25%)</title><rect x="553.3" y="1523.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="556.3" y="1534.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (3 samples, 0.18%)</title><rect x="554.1" y="1507.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="557.1" y="1518.0"></text>
</g>
<g>
<title>ksys_pread64 (3 samples, 0.18%)</title><rect x="554.1" y="1491.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="557.1" y="1502.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.18%)</title><rect x="554.1" y="1475.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="557.1" y="1486.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.12%)</title><rect x="554.1" y="1459.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="557.1" y="1470.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.12%)</title><rect x="554.1" y="1443.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="557.1" y="1454.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.12%)</title><rect x="554.1" y="1427.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="557.1" y="1438.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.12%)</title><rect x="554.1" y="1411.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="557.1" y="1422.0"></text>
</g>
<g>
<title>generic_file_buffered_read (2 samples, 0.12%)</title><rect x="554.1" y="1395.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="557.1" y="1406.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.06%)</title><rect x="554.1" y="1379.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="557.1" y="1390.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.06%)</title><rect x="554.1" y="1363.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="557.1" y="1374.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.06%)</title><rect x="554.8" y="1379.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="557.8" y="1390.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.06%)</title><rect x="554.8" y="1363.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="557.8" y="1374.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.06%)</title><rect x="554.8" y="1347.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="557.8" y="1358.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.06%)</title><rect x="555.5" y="1459.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="558.5" y="1470.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.06%)</title><rect x="555.5" y="1443.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="558.5" y="1454.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.06%)</title><rect x="555.5" y="1427.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="558.5" y="1438.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.06%)</title><rect x="555.5" y="1411.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="558.5" y="1422.0"></text>
</g>
<g>
<title>aa_label_is_subset (1 samples, 0.06%)</title><rect x="555.5" y="1395.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="558.5" y="1406.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.readOffset (13 samples, 0.80%)</title><rect x="556.2" y="1683.0" width="9.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="559.2" y="1694.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (13 samples, 0.80%)</title><rect x="556.2" y="1667.0" width="9.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="559.2" y="1678.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (13 samples, 0.80%)</title><rect x="556.2" y="1651.0" width="9.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="559.2" y="1662.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.06%)</title><rect x="556.2" y="1635.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="559.2" y="1646.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.06%)</title><rect x="556.2" y="1619.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="559.2" y="1630.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (12 samples, 0.74%)</title><rect x="557.0" y="1635.0" width="8.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="560.0" y="1646.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (11 samples, 0.67%)</title><rect x="557.0" y="1619.0" width="7.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="560.0" y="1630.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (11 samples, 0.67%)</title><rect x="557.0" y="1603.0" width="7.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="560.0" y="1614.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (11 samples, 0.67%)</title><rect x="557.0" y="1587.0" width="7.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="560.0" y="1598.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.06%)</title><rect x="557.7" y="1571.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="560.7" y="1582.0"></text>
</g>
<g>
<title>__pread (9 samples, 0.55%)</title><rect x="558.4" y="1571.0" width="6.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="561.4" y="1582.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.43%)</title><rect x="559.8" y="1555.0" width="5.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="562.8" y="1566.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.43%)</title><rect x="559.8" y="1539.0" width="5.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="562.8" y="1550.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (7 samples, 0.43%)</title><rect x="559.8" y="1523.0" width="5.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="562.8" y="1534.0"></text>
</g>
<g>
<title>ksys_pread64 (7 samples, 0.43%)</title><rect x="559.8" y="1507.0" width="5.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="562.8" y="1518.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.06%)</title><rect x="559.8" y="1491.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="562.8" y="1502.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="559.8" y="1475.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="562.8" y="1486.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="559.8" y="1459.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="562.8" y="1470.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.06%)</title><rect x="560.6" y="1491.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="563.6" y="1502.0"></text>
</g>
<g>
<title>vfs_read (5 samples, 0.31%)</title><rect x="561.3" y="1491.0" width="3.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="564.3" y="1502.0"></text>
</g>
<g>
<title>__vfs_read (4 samples, 0.25%)</title><rect x="562.0" y="1475.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="565.0" y="1486.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.06%)</title><rect x="562.0" y="1459.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="565.0" y="1470.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.18%)</title><rect x="562.7" y="1459.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="565.7" y="1470.0"></text>
</g>
<g>
<title>ext4_file_read_iter (3 samples, 0.18%)</title><rect x="562.7" y="1443.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="565.7" y="1454.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.12%)</title><rect x="563.5" y="1427.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="566.5" y="1438.0"></text>
</g>
<g>
<title>generic_file_buffered_read (2 samples, 0.12%)</title><rect x="563.5" y="1411.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="566.5" y="1422.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.06%)</title><rect x="564.9" y="1619.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="567.9" y="1630.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.06%)</title><rect x="564.9" y="1603.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="567.9" y="1614.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (1 samples, 0.06%)</title><rect x="564.9" y="1587.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="567.9" y="1598.0"></text>
</g>
<g>
<title>jshort_arraycopy (1 samples, 0.06%)</title><rect x="564.9" y="1571.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="567.9" y="1582.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (15 samples, 0.92%)</title><rect x="565.6" y="1747.0" width="10.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="568.6" y="1758.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (15 samples, 0.92%)</title><rect x="565.6" y="1731.0" width="10.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="568.6" y="1742.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (15 samples, 0.92%)</title><rect x="565.6" y="1715.0" width="10.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="568.6" y="1726.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (15 samples, 0.92%)</title><rect x="565.6" y="1699.0" width="10.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="568.6" y="1710.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (15 samples, 0.92%)</title><rect x="565.6" y="1683.0" width="10.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="568.6" y="1694.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (15 samples, 0.92%)</title><rect x="565.6" y="1667.0" width="10.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="568.6" y="1678.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (15 samples, 0.92%)</title><rect x="565.6" y="1651.0" width="10.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="568.6" y="1662.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable$1.next (15 samples, 0.92%)</title><rect x="565.6" y="1635.0" width="10.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="568.6" y="1646.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable$1.next (15 samples, 0.92%)</title><rect x="565.6" y="1619.0" width="10.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="568.6" y="1630.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getCell (15 samples, 0.92%)</title><rect x="565.6" y="1603.0" width="10.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="568.6" y="1614.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getOffset (4 samples, 0.25%)</title><rect x="565.6" y="1587.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="568.6" y="1598.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.readOffset (4 samples, 0.25%)</title><rect x="565.6" y="1571.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.6" y="1582.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.25%)</title><rect x="565.6" y="1555.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="568.6" y="1566.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.25%)</title><rect x="565.6" y="1539.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="568.6" y="1550.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.25%)</title><rect x="565.6" y="1523.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="568.6" y="1534.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.18%)</title><rect x="565.6" y="1507.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="568.6" y="1518.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.18%)</title><rect x="565.6" y="1491.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="568.6" y="1502.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.18%)</title><rect x="565.6" y="1475.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="568.6" y="1486.0"></text>
</g>
<g>
<title>__pread (3 samples, 0.18%)</title><rect x="565.6" y="1459.0" width="2.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="568.6" y="1470.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="567.1" y="1443.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="570.1" y="1454.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (1 samples, 0.06%)</title><rect x="567.1" y="1427.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="570.1" y="1438.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.06%)</title><rect x="567.8" y="1507.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="570.8" y="1518.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.06%)</title><rect x="567.8" y="1491.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="570.8" y="1502.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.06%)</title><rect x="567.8" y="1475.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="570.8" y="1486.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.readOffset (11 samples, 0.67%)</title><rect x="568.5" y="1587.0" width="8.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="571.5" y="1598.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (11 samples, 0.67%)</title><rect x="568.5" y="1571.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="571.5" y="1582.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (11 samples, 0.67%)</title><rect x="568.5" y="1555.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="571.5" y="1566.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.06%)</title><rect x="568.5" y="1539.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="571.5" y="1550.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.06%)</title><rect x="568.5" y="1523.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="571.5" y="1534.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.06%)</title><rect x="568.5" y="1507.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="571.5" y="1518.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (1 samples, 0.06%)</title><rect x="569.3" y="1539.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="572.3" y="1550.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (1 samples, 0.06%)</title><rect x="569.3" y="1523.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="572.3" y="1534.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (9 samples, 0.55%)</title><rect x="570.0" y="1539.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="573.0" y="1550.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (9 samples, 0.55%)</title><rect x="570.0" y="1523.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="573.0" y="1534.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (9 samples, 0.55%)</title><rect x="570.0" y="1507.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="573.0" y="1518.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (9 samples, 0.55%)</title><rect x="570.0" y="1491.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="573.0" y="1502.0"></text>
</g>
<g>
<title>__pread (8 samples, 0.49%)</title><rect x="570.7" y="1475.0" width="5.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="573.7" y="1486.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.12%)</title><rect x="575.0" y="1459.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="578.0" y="1470.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.12%)</title><rect x="575.0" y="1443.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="578.0" y="1454.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.12%)</title><rect x="575.0" y="1427.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="578.0" y="1438.0"></text>
</g>
<g>
<title>ksys_pread64 (2 samples, 0.12%)</title><rect x="575.0" y="1411.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="578.0" y="1422.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.12%)</title><rect x="575.0" y="1395.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="578.0" y="1406.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.06%)</title><rect x="575.0" y="1379.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="578.0" y="1390.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.06%)</title><rect x="575.0" y="1363.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="578.0" y="1374.0"></text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.06%)</title><rect x="575.0" y="1347.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="578.0" y="1358.0"></text>
</g>
<g>
<title>generic_file_read_iter (1 samples, 0.06%)</title><rect x="575.0" y="1331.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="578.0" y="1342.0"></text>
</g>
<g>
<title>generic_file_buffered_read (1 samples, 0.06%)</title><rect x="575.0" y="1315.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="578.0" y="1326.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.06%)</title><rect x="575.0" y="1299.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="578.0" y="1310.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.06%)</title><rect x="575.0" y="1283.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="578.0" y="1294.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.06%)</title><rect x="575.0" y="1267.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="578.0" y="1278.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.06%)</title><rect x="575.8" y="1379.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="578.8" y="1390.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/TurboDAO$$Lambda$69/296152741.apply (1 samples, 0.06%)</title><rect x="576.5" y="1779.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="579.5" y="1790.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.06%)</title><rect x="577.2" y="1843.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="580.2" y="1854.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (1 samples, 0.06%)</title><rect x="577.2" y="1827.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="580.2" y="1838.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.06%)</title><rect x="577.2" y="1811.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="580.2" y="1822.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.06%)</title><rect x="577.9" y="1843.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="580.9" y="1854.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.06%)</title><rect x="577.9" y="1827.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="580.9" y="1838.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/TurboDAO.iterator (651 samples, 39.91%)</title><rect x="578.7" y="1843.0" width="470.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="581.7" y="1854.0">ru/mail/polis/dao/art241111/TurboDAO.iterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (1 samples, 0.06%)</title><rect x="596.7" y="1827.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="599.7" y="1838.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.06%)</title><rect x="597.5" y="1827.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="600.5" y="1838.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.06%)</title><rect x="598.2" y="1827.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="601.2" y="1838.0"></text>
</g>
<g>
<title>java/util/TreeMap$Entry.getValue (1 samples, 0.06%)</title><rect x="598.9" y="1827.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="601.9" y="1838.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (2 samples, 0.12%)</title><rect x="599.6" y="1827.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="602.6" y="1838.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/TurboDAO.cellIterator (620 samples, 38.01%)</title><rect x="601.1" y="1827.0" width="448.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="604.1" y="1838.0">ru/mail/polis/dao/art241111/TurboDAO.cellIterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (22 samples, 1.35%)</title><rect x="601.1" y="1811.0" width="15.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="604.1" y="1822.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (22 samples, 1.35%)</title><rect x="601.1" y="1795.0" width="15.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="604.1" y="1806.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.06%)</title><rect x="601.1" y="1779.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="604.1" y="1790.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="601.1" y="1763.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="604.1" y="1774.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="601.1" y="1747.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="604.1" y="1758.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="601.1" y="1731.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="604.1" y="1742.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="601.1" y="1715.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="604.1" y="1726.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.06%)</title><rect x="601.1" y="1699.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="604.1" y="1710.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (21 samples, 1.29%)</title><rect x="601.8" y="1779.0" width="15.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="604.8" y="1790.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (21 samples, 1.29%)</title><rect x="601.8" y="1763.0" width="15.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="604.8" y="1774.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (19 samples, 1.16%)</title><rect x="601.8" y="1747.0" width="13.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="604.8" y="1758.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (19 samples, 1.16%)</title><rect x="601.8" y="1731.0" width="13.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="604.8" y="1742.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (19 samples, 1.16%)</title><rect x="601.8" y="1715.0" width="13.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="604.8" y="1726.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (19 samples, 1.16%)</title><rect x="601.8" y="1699.0" width="13.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="604.8" y="1710.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (19 samples, 1.16%)</title><rect x="601.8" y="1683.0" width="13.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="604.8" y="1694.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.06%)</title><rect x="601.8" y="1667.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="604.8" y="1678.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (1 samples, 0.06%)</title><rect x="601.8" y="1651.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="604.8" y="1662.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.06%)</title><rect x="601.8" y="1635.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="604.8" y="1646.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.06%)</title><rect x="601.8" y="1619.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="604.8" y="1630.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.06%)</title><rect x="601.8" y="1603.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="604.8" y="1614.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.06%)</title><rect x="601.8" y="1587.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="604.8" y="1598.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/TurboDAO$$Lambda$68/1201052067.apply (1 samples, 0.06%)</title><rect x="601.8" y="1571.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="604.8" y="1582.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/Cell.getKey (1 samples, 0.06%)</title><rect x="601.8" y="1555.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="604.8" y="1566.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.06%)</title><rect x="601.8" y="1539.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="604.8" y="1550.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable$1.next (18 samples, 1.10%)</title><rect x="602.5" y="1667.0" width="13.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="605.5" y="1678.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable$1.next (18 samples, 1.10%)</title><rect x="602.5" y="1651.0" width="13.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="605.5" y="1662.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getCell (18 samples, 1.10%)</title><rect x="602.5" y="1635.0" width="13.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="605.5" y="1646.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getOffset (7 samples, 0.43%)</title><rect x="602.5" y="1619.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="605.5" y="1630.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.readOffset (7 samples, 0.43%)</title><rect x="602.5" y="1603.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="605.5" y="1614.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (7 samples, 0.43%)</title><rect x="602.5" y="1587.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="605.5" y="1598.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (7 samples, 0.43%)</title><rect x="602.5" y="1571.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="605.5" y="1582.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.06%)</title><rect x="602.5" y="1555.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="605.5" y="1566.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.06%)</title><rect x="602.5" y="1539.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="605.5" y="1550.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.37%)</title><rect x="603.3" y="1555.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="606.3" y="1566.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.37%)</title><rect x="603.3" y="1539.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="606.3" y="1550.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.37%)</title><rect x="603.3" y="1523.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="606.3" y="1534.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.37%)</title><rect x="603.3" y="1507.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="606.3" y="1518.0"></text>
</g>
<g>
<title>__pread (5 samples, 0.31%)</title><rect x="603.3" y="1491.0" width="3.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="606.3" y="1502.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.18%)</title><rect x="604.7" y="1475.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="607.7" y="1486.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.18%)</title><rect x="604.7" y="1459.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="607.7" y="1470.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (3 samples, 0.18%)</title><rect x="604.7" y="1443.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="607.7" y="1454.0"></text>
</g>
<g>
<title>ksys_pread64 (3 samples, 0.18%)</title><rect x="604.7" y="1427.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="607.7" y="1438.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="604.7" y="1411.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="607.7" y="1422.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.06%)</title><rect x="605.4" y="1411.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="608.4" y="1422.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.06%)</title><rect x="606.1" y="1411.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="609.1" y="1422.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.06%)</title><rect x="606.1" y="1395.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="609.1" y="1406.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.06%)</title><rect x="606.1" y="1379.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="609.1" y="1390.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.06%)</title><rect x="606.1" y="1363.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="609.1" y="1374.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.06%)</title><rect x="606.9" y="1491.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="609.9" y="1502.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.readOffset (11 samples, 0.67%)</title><rect x="607.6" y="1619.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="610.6" y="1630.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.06%)</title><rect x="607.6" y="1603.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="610.6" y="1614.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="607.6" y="1587.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="610.6" y="1598.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="607.6" y="1571.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="610.6" y="1582.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="607.6" y="1555.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="610.6" y="1566.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="607.6" y="1539.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="610.6" y="1550.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (10 samples, 0.61%)</title><rect x="608.3" y="1603.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="611.3" y="1614.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (10 samples, 0.61%)</title><rect x="608.3" y="1587.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="611.3" y="1598.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.61%)</title><rect x="608.3" y="1571.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="611.3" y="1582.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (10 samples, 0.61%)</title><rect x="608.3" y="1555.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="611.3" y="1566.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (10 samples, 0.61%)</title><rect x="608.3" y="1539.0" width="7.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="611.3" y="1550.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (10 samples, 0.61%)</title><rect x="608.3" y="1523.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="611.3" y="1534.0"></text>
</g>
<g>
<title>__pread (10 samples, 0.61%)</title><rect x="608.3" y="1507.0" width="7.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="611.3" y="1518.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.49%)</title><rect x="609.8" y="1491.0" width="5.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="612.8" y="1502.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.49%)</title><rect x="609.8" y="1475.0" width="5.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="612.8" y="1486.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (7 samples, 0.43%)</title><rect x="610.5" y="1459.0" width="5.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="613.5" y="1470.0"></text>
</g>
<g>
<title>ksys_pread64 (7 samples, 0.43%)</title><rect x="610.5" y="1443.0" width="5.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="613.5" y="1454.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.06%)</title><rect x="610.5" y="1427.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="613.5" y="1438.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.06%)</title><rect x="611.2" y="1427.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="614.2" y="1438.0"></text>
</g>
<g>
<title>vfs_read (5 samples, 0.31%)</title><rect x="611.9" y="1427.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="614.9" y="1438.0"></text>
</g>
<g>
<title>__vfs_read (4 samples, 0.25%)</title><rect x="611.9" y="1411.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="614.9" y="1422.0"></text>
</g>
<g>
<title>new_sync_read (4 samples, 0.25%)</title><rect x="611.9" y="1395.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="614.9" y="1406.0"></text>
</g>
<g>
<title>ext4_file_read_iter (4 samples, 0.25%)</title><rect x="611.9" y="1379.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="614.9" y="1390.0"></text>
</g>
<g>
<title>generic_file_read_iter (4 samples, 0.25%)</title><rect x="611.9" y="1363.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="614.9" y="1374.0"></text>
</g>
<g>
<title>generic_file_buffered_read (3 samples, 0.18%)</title><rect x="611.9" y="1347.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="614.9" y="1358.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.06%)</title><rect x="611.9" y="1331.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="614.9" y="1342.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.06%)</title><rect x="612.7" y="1331.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="615.7" y="1342.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.06%)</title><rect x="612.7" y="1315.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="615.7" y="1326.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.06%)</title><rect x="612.7" y="1299.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="615.7" y="1310.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.06%)</title><rect x="613.4" y="1331.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="616.4" y="1342.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.06%)</title><rect x="613.4" y="1315.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="616.4" y="1326.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.06%)</title><rect x="613.4" y="1299.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="616.4" y="1310.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.06%)</title><rect x="613.4" y="1283.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="616.4" y="1294.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.06%)</title><rect x="614.1" y="1347.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="617.1" y="1358.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.06%)</title><rect x="614.8" y="1411.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="617.8" y="1422.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2 samples, 0.12%)</title><rect x="615.6" y="1747.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="618.6" y="1758.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (526 samples, 32.25%)</title><rect x="617.0" y="1811.0" width="380.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.0" y="1822.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/TurboDAO$$Lambda$67/867270723.accept (526 samples, 32.25%)</title><rect x="617.0" y="1795.0" width="380.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="620.0" y="1806.0">ru/mail/polis/dao/art241111/TurboDAO$$Lambda$67/8672..</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/TurboDAO.lambda$cellIterator$5 (526 samples, 32.25%)</title><rect x="617.0" y="1779.0" width="380.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="620.0" y="1790.0">ru/mail/polis/dao/art241111/TurboDAO.lambda$cellIter..</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.iterator (526 samples, 32.25%)</title><rect x="617.0" y="1763.0" width="380.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="620.0" y="1774.0">ru/mail/polis/dao/art241111/SSTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable$1.&lt;init&gt; (524 samples, 32.13%)</title><rect x="618.4" y="1747.0" width="379.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="621.4" y="1758.0">ru/mail/polis/dao/art241111/SSTable$1.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getKeyPosition (524 samples, 32.13%)</title><rect x="618.4" y="1731.0" width="379.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="621.4" y="1742.0">ru/mail/polis/dao/art241111/SSTable.getKeyPosition</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.55%)</title><rect x="619.9" y="1715.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="622.9" y="1726.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.06%)</title><rect x="623.5" y="1699.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.5" y="1710.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.06%)</title><rect x="623.5" y="1683.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="626.5" y="1694.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.06%)</title><rect x="624.2" y="1699.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="627.2" y="1710.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.12%)</title><rect x="625.0" y="1699.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="628.0" y="1710.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.06%)</title><rect x="625.7" y="1683.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="628.7" y="1694.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getKey (513 samples, 31.45%)</title><rect x="626.4" y="1715.0" width="371.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="629.4" y="1726.0">ru/mail/polis/dao/art241111/SSTable.getKey</text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (1 samples, 0.06%)</title><rect x="626.4" y="1699.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="629.4" y="1710.0"></text>
</g>
<g>
<title>java/nio/Buffer.rewind (1 samples, 0.06%)</title><rect x="626.4" y="1683.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="629.4" y="1694.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.06%)</title><rect x="626.4" y="1667.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="629.4" y="1678.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getOffset (187 samples, 11.47%)</title><rect x="627.1" y="1699.0" width="135.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="630.1" y="1710.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (2 samples, 0.12%)</title><rect x="627.1" y="1683.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="630.1" y="1694.0"></text>
</g>
<g>
<title>java/nio/Buffer.rewind (2 samples, 0.12%)</title><rect x="627.1" y="1667.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="630.1" y="1678.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.12%)</title><rect x="627.1" y="1651.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="630.1" y="1662.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.readOffset (185 samples, 11.34%)</title><rect x="628.6" y="1683.0" width="133.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="631.6" y="1694.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (185 samples, 11.34%)</title><rect x="628.6" y="1667.0" width="133.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="631.6" y="1678.0">sun/nio/ch/FileCh..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (184 samples, 11.28%)</title><rect x="629.3" y="1651.0" width="133.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="632.3" y="1662.0">sun/nio/ch/FileCh..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (4 samples, 0.25%)</title><rect x="630.0" y="1635.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="633.0" y="1646.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.25%)</title><rect x="630.0" y="1619.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="633.0" y="1630.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.06%)</title><rect x="632.2" y="1603.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="635.2" y="1614.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.06%)</title><rect x="632.2" y="1587.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="635.2" y="1598.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.06%)</title><rect x="632.2" y="1571.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="635.2" y="1582.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (168 samples, 10.30%)</title><rect x="632.9" y="1635.0" width="121.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="635.9" y="1646.0">sun/nio/ch/IOUt..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.18%)</title><rect x="634.4" y="1619.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="637.4" y="1630.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.06%)</title><rect x="634.4" y="1603.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="637.4" y="1614.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.12%)</title><rect x="635.1" y="1603.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="638.1" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.06%)</title><rect x="635.8" y="1587.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="638.8" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.06%)</title><rect x="635.8" y="1571.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="638.8" y="1582.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (151 samples, 9.26%)</title><rect x="636.5" y="1619.0" width="109.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="639.5" y="1630.0">sun/nio/ch/IO..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (151 samples, 9.26%)</title><rect x="636.5" y="1603.0" width="109.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="639.5" y="1614.0">sun/nio/ch/Fi..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (151 samples, 9.26%)</title><rect x="636.5" y="1587.0" width="109.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="639.5" y="1598.0">sun/nio/ch/Fi..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.06%)</title><rect x="643.8" y="1571.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="646.8" y="1582.0"></text>
</g>
<g>
<title>__pread (130 samples, 7.97%)</title><rect x="644.5" y="1571.0" width="94.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="647.5" y="1582.0">__pread</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (97 samples, 5.95%)</title><rect x="667.6" y="1555.0" width="70.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="670.6" y="1566.0">entry_SY..</text>
</g>
<g>
<title>__x64_sys_pread64 (1 samples, 0.06%)</title><rect x="667.6" y="1539.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="670.6" y="1550.0"></text>
</g>
<g>
<title>do_syscall_64 (96 samples, 5.89%)</title><rect x="668.4" y="1539.0" width="69.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="671.4" y="1550.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_pread64 (87 samples, 5.33%)</title><rect x="674.9" y="1523.0" width="62.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="677.9" y="1534.0">__x64_..</text>
</g>
<g>
<title>fput (1 samples, 0.06%)</title><rect x="674.9" y="1507.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="677.9" y="1518.0"></text>
</g>
<g>
<title>ksys_pread64 (86 samples, 5.27%)</title><rect x="675.6" y="1507.0" width="62.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="678.6" y="1518.0">ksys_p..</text>
</g>
<g>
<title>__fdget (2 samples, 0.12%)</title><rect x="676.3" y="1491.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="679.3" y="1502.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.12%)</title><rect x="676.3" y="1475.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="679.3" y="1486.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.12%)</title><rect x="676.3" y="1459.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="679.3" y="1470.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.06%)</title><rect x="677.8" y="1491.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="680.8" y="1502.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.06%)</title><rect x="678.5" y="1491.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="681.5" y="1502.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.06%)</title><rect x="679.2" y="1491.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="682.2" y="1502.0"></text>
</g>
<g>
<title>vfs_read (80 samples, 4.90%)</title><rect x="679.9" y="1491.0" width="57.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="682.9" y="1502.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.12%)</title><rect x="685.0" y="1475.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="688.0" y="1486.0"></text>
</g>
<g>
<title>__vfs_read (56 samples, 3.43%)</title><rect x="686.5" y="1475.0" width="40.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="689.5" y="1486.0">__v..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.12%)</title><rect x="686.5" y="1459.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="689.5" y="1470.0"></text>
</g>
<g>
<title>ext4_file_read_iter (4 samples, 0.25%)</title><rect x="687.9" y="1459.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="690.9" y="1470.0"></text>
</g>
<g>
<title>new_sync_read (50 samples, 3.07%)</title><rect x="690.8" y="1459.0" width="36.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="693.8" y="1470.0">new..</text>
</g>
<g>
<title>ext4_file_read_iter (49 samples, 3.00%)</title><rect x="691.5" y="1443.0" width="35.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="694.5" y="1454.0">ext..</text>
</g>
<g>
<title>generic_file_buffered_read (1 samples, 0.06%)</title><rect x="692.2" y="1427.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="695.2" y="1438.0"></text>
</g>
<g>
<title>generic_file_read_iter (47 samples, 2.88%)</title><rect x="693.0" y="1427.0" width="34.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="696.0" y="1438.0">ge..</text>
</g>
<g>
<title>_cond_resched (2 samples, 0.12%)</title><rect x="694.4" y="1411.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="697.4" y="1422.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.18%)</title><rect x="695.9" y="1411.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="698.9" y="1422.0"></text>
</g>
<g>
<title>generic_file_buffered_read (37 samples, 2.27%)</title><rect x="698.0" y="1411.0" width="26.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="701.0" y="1422.0">g..</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="700.9" y="1395.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="703.9" y="1406.0"></text>
</g>
<g>
<title>copy_page_to_iter (4 samples, 0.25%)</title><rect x="701.6" y="1395.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="704.6" y="1406.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.12%)</title><rect x="703.1" y="1379.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="706.1" y="1390.0"></text>
</g>
<g>
<title>pagecache_get_page (20 samples, 1.23%)</title><rect x="704.5" y="1395.0" width="14.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="707.5" y="1406.0"></text>
</g>
<g>
<title>find_get_entry (17 samples, 1.04%)</title><rect x="704.5" y="1379.0" width="12.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="707.5" y="1390.0"></text>
</g>
<g>
<title>xas_load (8 samples, 0.49%)</title><rect x="707.4" y="1363.0" width="5.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="710.4" y="1374.0"></text>
</g>
<g>
<title>xas_start (5 samples, 0.31%)</title><rect x="713.2" y="1363.0" width="3.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="716.2" y="1374.0"></text>
</g>
<g>
<title>xas_load (3 samples, 0.18%)</title><rect x="716.8" y="1379.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="719.8" y="1390.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.06%)</title><rect x="719.0" y="1395.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="722.0" y="1406.0"></text>
</g>
<g>
<title>touch_atime (7 samples, 0.43%)</title><rect x="719.7" y="1395.0" width="5.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="722.7" y="1406.0"></text>
</g>
<g>
<title>atime_needs_update (7 samples, 0.43%)</title><rect x="719.7" y="1379.0" width="5.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="722.7" y="1390.0"></text>
</g>
<g>
<title>current_time (3 samples, 0.18%)</title><rect x="721.2" y="1363.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="724.2" y="1374.0"></text>
</g>
<g>
<title>timespec64_trunc (1 samples, 0.06%)</title><rect x="722.6" y="1347.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="725.6" y="1358.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.12%)</title><rect x="723.4" y="1363.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="726.4" y="1374.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.06%)</title><rect x="724.8" y="1411.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="727.8" y="1422.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.12%)</title><rect x="725.5" y="1411.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="728.5" y="1422.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.06%)</title><rect x="727.0" y="1475.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="730.0" y="1486.0"></text>
</g>
<g>
<title>rw_verify_area (14 samples, 0.86%)</title><rect x="727.7" y="1475.0" width="10.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="730.7" y="1486.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.25%)</title><rect x="727.7" y="1459.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="730.7" y="1470.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.06%)</title><rect x="730.6" y="1459.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="733.6" y="1470.0"></text>
</g>
<g>
<title>security_file_permission (9 samples, 0.55%)</title><rect x="731.3" y="1459.0" width="6.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="734.3" y="1470.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.06%)</title><rect x="732.0" y="1443.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="735.0" y="1454.0"></text>
</g>
<g>
<title>apparmor_file_permission (6 samples, 0.37%)</title><rect x="732.8" y="1443.0" width="4.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="735.8" y="1454.0"></text>
</g>
<g>
<title>common_file_perm (5 samples, 0.31%)</title><rect x="733.5" y="1427.0" width="3.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="736.5" y="1438.0"></text>
</g>
<g>
<title>aa_file_perm (3 samples, 0.18%)</title><rect x="734.9" y="1411.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="737.9" y="1422.0"></text>
</g>
<g>
<title>aa_label_is_subset (1 samples, 0.06%)</title><rect x="736.4" y="1395.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="739.4" y="1406.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.06%)</title><rect x="737.1" y="1443.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="740.1" y="1454.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="737.8" y="1555.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="740.8" y="1566.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="737.8" y="1539.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="740.8" y="1550.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="737.8" y="1523.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="740.8" y="1534.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.25%)</title><rect x="738.5" y="1571.0" width="2.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="741.5" y="1582.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.06%)</title><rect x="741.4" y="1571.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="744.4" y="1582.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.06%)</title><rect x="742.2" y="1571.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="745.2" y="1582.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="742.2" y="1555.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="745.2" y="1566.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="742.2" y="1539.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="745.2" y="1550.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="742.2" y="1523.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="745.2" y="1534.0"></text>
</g>
<g>
<title>fdval (4 samples, 0.25%)</title><rect x="742.9" y="1571.0" width="2.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="745.9" y="1582.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (12 samples, 0.74%)</title><rect x="745.8" y="1619.0" width="8.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="748.8" y="1630.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.12%)</title><rect x="747.2" y="1603.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="750.2" y="1614.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.12%)</title><rect x="747.2" y="1587.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="750.2" y="1598.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (8 samples, 0.49%)</title><rect x="748.7" y="1603.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="751.7" y="1614.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="753.7" y="1587.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="756.7" y="1598.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="753.7" y="1571.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="756.7" y="1582.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="753.7" y="1555.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="756.7" y="1566.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (8 samples, 0.49%)</title><rect x="754.5" y="1635.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="757.5" y="1646.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (5 samples, 0.31%)</title><rect x="756.6" y="1619.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="759.6" y="1630.0"></text>
</g>
<g>
<title>pthread_self@GLIBC_2.2.5 (5 samples, 0.31%)</title><rect x="756.6" y="1603.0" width="3.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="759.6" y="1614.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (3 samples, 0.18%)</title><rect x="760.3" y="1635.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="763.3" y="1646.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.readOffset (325 samples, 19.93%)</title><rect x="762.4" y="1699.0" width="235.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="765.4" y="1710.0">ru/mail/polis/dao/art241111/SST..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.06%)</title><rect x="762.4" y="1683.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="765.4" y="1694.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="762.4" y="1667.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="765.4" y="1678.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (324 samples, 19.87%)</title><rect x="763.1" y="1683.0" width="234.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="766.1" y="1694.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (324 samples, 19.87%)</title><rect x="763.1" y="1667.0" width="234.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="766.1" y="1678.0">sun/nio/ch/FileChannelImpl.read..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (1 samples, 0.06%)</title><rect x="763.9" y="1651.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="766.9" y="1662.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (10 samples, 0.61%)</title><rect x="764.6" y="1651.0" width="7.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="767.6" y="1662.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (10 samples, 0.61%)</title><rect x="764.6" y="1635.0" width="7.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="767.6" y="1646.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.12%)</title><rect x="770.4" y="1619.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="773.4" y="1630.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.12%)</title><rect x="770.4" y="1603.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="773.4" y="1614.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.12%)</title><rect x="770.4" y="1587.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="773.4" y="1598.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (299 samples, 18.33%)</title><rect x="771.8" y="1651.0" width="216.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="774.8" y="1662.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (271 samples, 16.62%)</title><rect x="772.6" y="1635.0" width="196.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="775.6" y="1646.0">sun/nio/ch/IOUtil.readInto..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (271 samples, 16.62%)</title><rect x="772.6" y="1619.0" width="196.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="775.6" y="1630.0">sun/nio/ch/FileDispatcherI..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (271 samples, 16.62%)</title><rect x="772.6" y="1603.0" width="196.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="775.6" y="1614.0">sun/nio/ch/FileDispatcherI..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (7 samples, 0.43%)</title><rect x="779.1" y="1587.0" width="5.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="782.1" y="1598.0"></text>
</g>
<g>
<title>__pread (251 samples, 15.39%)</title><rect x="784.1" y="1587.0" width="181.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="787.1" y="1598.0">__pread</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (192 samples, 11.77%)</title><rect x="826.8" y="1571.0" width="138.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="829.8" y="1582.0">entry_SYSCALL_64_..</text>
</g>
<g>
<title>__x64_sys_pread64 (1 samples, 0.06%)</title><rect x="826.8" y="1555.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="829.8" y="1566.0"></text>
</g>
<g>
<title>do_syscall_64 (191 samples, 11.71%)</title><rect x="827.5" y="1555.0" width="138.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="830.5" y="1566.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (169 samples, 10.36%)</title><rect x="842.7" y="1539.0" width="122.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="845.7" y="1550.0">__x64_sys_pread64</text>
</g>
<g>
<title>__fdget (3 samples, 0.18%)</title><rect x="842.7" y="1523.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="845.7" y="1534.0"></text>
</g>
<g>
<title>fput (3 samples, 0.18%)</title><rect x="844.9" y="1523.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="847.9" y="1534.0"></text>
</g>
<g>
<title>ksys_pread64 (163 samples, 9.99%)</title><rect x="847.1" y="1523.0" width="117.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="850.1" y="1534.0">ksys_pread64</text>
</g>
<g>
<title>__fdget (6 samples, 0.37%)</title><rect x="847.8" y="1507.0" width="4.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="850.8" y="1518.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.37%)</title><rect x="847.8" y="1491.0" width="4.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="850.8" y="1502.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.37%)</title><rect x="847.8" y="1475.0" width="4.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="850.8" y="1486.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.37%)</title><rect x="852.1" y="1507.0" width="4.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="855.1" y="1518.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.18%)</title><rect x="856.5" y="1507.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="859.5" y="1518.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.18%)</title><rect x="858.6" y="1507.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="861.6" y="1518.0"></text>
</g>
<g>
<title>vfs_read (144 samples, 8.83%)</title><rect x="860.8" y="1507.0" width="104.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="863.8" y="1518.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.06%)</title><rect x="868.1" y="1491.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="871.1" y="1502.0"></text>
</g>
<g>
<title>__vfs_read (95 samples, 5.82%)</title><rect x="868.8" y="1491.0" width="68.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="871.8" y="1502.0">__vfs_r..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.06%)</title><rect x="869.5" y="1475.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="872.5" y="1486.0"></text>
</g>
<g>
<title>ext4_file_read_iter (5 samples, 0.31%)</title><rect x="870.2" y="1475.0" width="3.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="873.2" y="1486.0"></text>
</g>
<g>
<title>new_sync_read (88 samples, 5.40%)</title><rect x="873.8" y="1475.0" width="63.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="876.8" y="1486.0">new_syn..</text>
</g>
<g>
<title>ext4_file_read_iter (80 samples, 4.90%)</title><rect x="878.9" y="1459.0" width="57.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="881.9" y="1470.0">ext4_f..</text>
</g>
<g>
<title>generic_file_buffered_read (3 samples, 0.18%)</title><rect x="880.3" y="1443.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="883.3" y="1454.0"></text>
</g>
<g>
<title>generic_file_read_iter (75 samples, 4.60%)</title><rect x="882.5" y="1443.0" width="54.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="885.5" y="1454.0">gener..</text>
</g>
<g>
<title>_cond_resched (2 samples, 0.12%)</title><rect x="882.5" y="1427.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="885.5" y="1438.0"></text>
</g>
<g>
<title>generic_file_buffered_read (67 samples, 4.11%)</title><rect x="884.0" y="1427.0" width="48.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="887.0" y="1438.0">gene..</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="894.8" y="1411.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="897.8" y="1422.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.12%)</title><rect x="895.5" y="1411.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="898.5" y="1422.0"></text>
</g>
<g>
<title>copy_page_to_iter (9 samples, 0.55%)</title><rect x="897.0" y="1411.0" width="6.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="900.0" y="1422.0"></text>
</g>
<g>
<title>copy_user_generic_string (6 samples, 0.37%)</title><rect x="899.2" y="1395.0" width="4.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="902.2" y="1406.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.06%)</title><rect x="903.5" y="1411.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="906.5" y="1422.0"></text>
</g>
<g>
<title>pagecache_get_page (31 samples, 1.90%)</title><rect x="904.2" y="1411.0" width="22.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="907.2" y="1422.0">p..</text>
</g>
<g>
<title>find_get_entry (25 samples, 1.53%)</title><rect x="905.7" y="1395.0" width="18.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="908.7" y="1406.0"></text>
</g>
<g>
<title>xas_load (8 samples, 0.49%)</title><rect x="916.5" y="1379.0" width="5.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="919.5" y="1390.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.12%)</title><rect x="922.3" y="1379.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="925.3" y="1390.0"></text>
</g>
<g>
<title>xas_load (4 samples, 0.25%)</title><rect x="923.8" y="1395.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="926.8" y="1406.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.12%)</title><rect x="926.7" y="1411.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="929.7" y="1422.0"></text>
</g>
<g>
<title>touch_atime (6 samples, 0.37%)</title><rect x="928.1" y="1411.0" width="4.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="931.1" y="1422.0"></text>
</g>
<g>
<title>atime_needs_update (6 samples, 0.37%)</title><rect x="928.1" y="1395.0" width="4.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="931.1" y="1406.0"></text>
</g>
<g>
<title>current_time (3 samples, 0.18%)</title><rect x="930.3" y="1379.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="933.3" y="1390.0"></text>
</g>
<g>
<title>timespec64_trunc (2 samples, 0.12%)</title><rect x="931.0" y="1363.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="934.0" y="1374.0"></text>
</g>
<g>
<title>mark_page_accessed (3 samples, 0.18%)</title><rect x="932.4" y="1427.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="935.4" y="1438.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.12%)</title><rect x="934.6" y="1427.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="937.6" y="1438.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.06%)</title><rect x="936.1" y="1427.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="939.1" y="1438.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.06%)</title><rect x="936.8" y="1459.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="939.8" y="1470.0"></text>
</g>
<g>
<title>fsnotify (4 samples, 0.25%)</title><rect x="937.5" y="1491.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="940.5" y="1502.0"></text>
</g>
<g>
<title>rw_verify_area (34 samples, 2.08%)</title><rect x="940.4" y="1491.0" width="24.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="943.4" y="1502.0">r..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.18%)</title><rect x="945.5" y="1475.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="948.5" y="1486.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.06%)</title><rect x="947.6" y="1475.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="950.6" y="1486.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.12%)</title><rect x="948.4" y="1475.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="951.4" y="1486.0"></text>
</g>
<g>
<title>security_file_permission (21 samples, 1.29%)</title><rect x="949.8" y="1475.0" width="15.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="952.8" y="1486.0"></text>
</g>
<g>
<title>apparmor_file_permission (6 samples, 0.37%)</title><rect x="958.5" y="1459.0" width="4.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="961.5" y="1470.0"></text>
</g>
<g>
<title>common_file_perm (6 samples, 0.37%)</title><rect x="958.5" y="1443.0" width="4.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="961.5" y="1454.0"></text>
</g>
<g>
<title>aa_file_perm (3 samples, 0.18%)</title><rect x="960.7" y="1427.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="963.7" y="1438.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.06%)</title><rect x="962.8" y="1459.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="965.8" y="1470.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.12%)</title><rect x="963.5" y="1459.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="966.5" y="1470.0"></text>
</g>
<g>
<title>ksys_pread64 (1 samples, 0.06%)</title><rect x="965.0" y="1539.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="968.0" y="1550.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.12%)</title><rect x="965.7" y="1587.0" width="1.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="968.7" y="1598.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.06%)</title><rect x="967.2" y="1587.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="970.2" y="1598.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="967.9" y="1587.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="970.9" y="1598.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="967.9" y="1571.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="970.9" y="1582.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="967.9" y="1555.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="970.9" y="1566.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (27 samples, 1.66%)</title><rect x="968.6" y="1635.0" width="19.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="971.6" y="1646.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (9 samples, 0.55%)</title><rect x="971.5" y="1619.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="974.5" y="1630.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (6 samples, 0.37%)</title><rect x="972.2" y="1603.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="975.2" y="1614.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (2 samples, 0.12%)</title><rect x="976.6" y="1603.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="979.6" y="1614.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (14 samples, 0.86%)</title><rect x="978.0" y="1619.0" width="10.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="981.0" y="1630.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.06%)</title><rect x="982.4" y="1603.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="985.4" y="1614.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (7 samples, 0.43%)</title><rect x="983.1" y="1603.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="986.1" y="1614.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.06%)</title><rect x="984.5" y="1587.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="987.5" y="1598.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.18%)</title><rect x="985.3" y="1587.0" width="2.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="988.3" y="1598.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="987.4" y="1587.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="990.4" y="1598.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (10 samples, 0.61%)</title><rect x="988.1" y="1651.0" width="7.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="991.1" y="1662.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (8 samples, 0.49%)</title><rect x="989.6" y="1635.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="992.6" y="1646.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (1 samples, 0.06%)</title><rect x="992.5" y="1619.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="995.5" y="1630.0"></text>
</g>
<g>
<title>pthread_self@GLIBC_2.2.5 (3 samples, 0.18%)</title><rect x="993.2" y="1619.0" width="2.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="996.2" y="1630.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (3 samples, 0.18%)</title><rect x="995.4" y="1651.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="998.4" y="1662.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (42 samples, 2.58%)</title><rect x="997.6" y="1811.0" width="30.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1000.6" y="1822.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (42 samples, 2.58%)</title><rect x="997.6" y="1795.0" width="30.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1000.6" y="1806.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.hasNext (1 samples, 0.06%)</title><rect x="997.6" y="1779.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1000.6" y="1790.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (41 samples, 2.51%)</title><rect x="998.3" y="1779.0" width="29.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1001.3" y="1790.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (24 samples, 1.47%)</title><rect x="998.3" y="1763.0" width="17.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1001.3" y="1774.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable$1.next (24 samples, 1.47%)</title><rect x="998.3" y="1747.0" width="17.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1001.3" y="1758.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable$1.next (24 samples, 1.47%)</title><rect x="998.3" y="1731.0" width="17.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1001.3" y="1742.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getCell (24 samples, 1.47%)</title><rect x="998.3" y="1715.0" width="17.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1001.3" y="1726.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getOffset (5 samples, 0.31%)</title><rect x="998.3" y="1699.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1001.3" y="1710.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.readOffset (5 samples, 0.31%)</title><rect x="998.3" y="1683.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1001.3" y="1694.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (5 samples, 0.31%)</title><rect x="998.3" y="1667.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1001.3" y="1678.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (5 samples, 0.31%)</title><rect x="998.3" y="1651.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1001.3" y="1662.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.31%)</title><rect x="998.3" y="1635.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1001.3" y="1646.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.31%)</title><rect x="998.3" y="1619.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1001.3" y="1630.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5 samples, 0.31%)</title><rect x="998.3" y="1603.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1001.3" y="1614.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.31%)</title><rect x="998.3" y="1587.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1001.3" y="1598.0"></text>
</g>
<g>
<title>__pread (5 samples, 0.31%)</title><rect x="998.3" y="1571.0" width="3.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1001.3" y="1582.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.25%)</title><rect x="999.0" y="1555.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1002.0" y="1566.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.25%)</title><rect x="999.0" y="1539.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1002.0" y="1550.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.25%)</title><rect x="999.0" y="1523.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1002.0" y="1534.0"></text>
</g>
<g>
<title>ksys_pread64 (4 samples, 0.25%)</title><rect x="999.0" y="1507.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1002.0" y="1518.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.25%)</title><rect x="999.0" y="1491.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1002.0" y="1502.0"></text>
</g>
<g>
<title>__vfs_read (4 samples, 0.25%)</title><rect x="999.0" y="1475.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1002.0" y="1486.0"></text>
</g>
<g>
<title>new_sync_read (4 samples, 0.25%)</title><rect x="999.0" y="1459.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1002.0" y="1470.0"></text>
</g>
<g>
<title>ext4_file_read_iter (4 samples, 0.25%)</title><rect x="999.0" y="1443.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1002.0" y="1454.0"></text>
</g>
<g>
<title>generic_file_buffered_read (1 samples, 0.06%)</title><rect x="999.7" y="1427.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1002.7" y="1438.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.12%)</title><rect x="1000.4" y="1427.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1003.4" y="1438.0"></text>
</g>
<g>
<title>generic_file_buffered_read (1 samples, 0.06%)</title><rect x="1001.2" y="1411.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1004.2" y="1422.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.readOffset (19 samples, 1.16%)</title><rect x="1001.9" y="1699.0" width="13.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1004.9" y="1710.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (19 samples, 1.16%)</title><rect x="1001.9" y="1683.0" width="13.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1004.9" y="1694.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (19 samples, 1.16%)</title><rect x="1001.9" y="1667.0" width="13.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1004.9" y="1678.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (19 samples, 1.16%)</title><rect x="1001.9" y="1651.0" width="13.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1004.9" y="1662.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (19 samples, 1.16%)</title><rect x="1001.9" y="1635.0" width="13.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1004.9" y="1646.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (19 samples, 1.16%)</title><rect x="1001.9" y="1619.0" width="13.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1004.9" y="1630.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (19 samples, 1.16%)</title><rect x="1001.9" y="1603.0" width="13.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1004.9" y="1614.0"></text>
</g>
<g>
<title>__pread (16 samples, 0.98%)</title><rect x="1003.3" y="1587.0" width="11.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1006.3" y="1598.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.67%)</title><rect x="1007.0" y="1571.0" width="7.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1010.0" y="1582.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.67%)</title><rect x="1007.0" y="1555.0" width="7.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1010.0" y="1566.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (10 samples, 0.61%)</title><rect x="1007.7" y="1539.0" width="7.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1010.7" y="1550.0"></text>
</g>
<g>
<title>ksys_pread64 (10 samples, 0.61%)</title><rect x="1007.7" y="1523.0" width="7.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1010.7" y="1534.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.12%)</title><rect x="1007.7" y="1507.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1010.7" y="1518.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.12%)</title><rect x="1007.7" y="1491.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1010.7" y="1502.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="1008.4" y="1475.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1011.4" y="1486.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.06%)</title><rect x="1009.1" y="1507.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1012.1" y="1518.0"></text>
</g>
<g>
<title>vfs_read (7 samples, 0.43%)</title><rect x="1009.9" y="1507.0" width="5.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1012.9" y="1518.0"></text>
</g>
<g>
<title>__vfs_read (4 samples, 0.25%)</title><rect x="1009.9" y="1491.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1012.9" y="1502.0"></text>
</g>
<g>
<title>new_sync_read (4 samples, 0.25%)</title><rect x="1009.9" y="1475.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1012.9" y="1486.0"></text>
</g>
<g>
<title>ext4_file_read_iter (3 samples, 0.18%)</title><rect x="1010.6" y="1459.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1013.6" y="1470.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.12%)</title><rect x="1011.3" y="1443.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1014.3" y="1454.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.06%)</title><rect x="1011.3" y="1427.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1014.3" y="1438.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.06%)</title><rect x="1012.0" y="1427.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1015.0" y="1438.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.18%)</title><rect x="1012.7" y="1491.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1015.7" y="1502.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.06%)</title><rect x="1013.5" y="1475.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1016.5" y="1486.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.06%)</title><rect x="1014.2" y="1475.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1017.2" y="1486.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.06%)</title><rect x="1014.9" y="1587.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1017.9" y="1598.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (17 samples, 1.04%)</title><rect x="1015.6" y="1763.0" width="12.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1018.6" y="1774.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (17 samples, 1.04%)</title><rect x="1015.6" y="1747.0" width="12.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1018.6" y="1758.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (17 samples, 1.04%)</title><rect x="1015.6" y="1731.0" width="12.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1018.6" y="1742.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (17 samples, 1.04%)</title><rect x="1015.6" y="1715.0" width="12.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1018.6" y="1726.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (17 samples, 1.04%)</title><rect x="1015.6" y="1699.0" width="12.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1018.6" y="1710.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (17 samples, 1.04%)</title><rect x="1015.6" y="1683.0" width="12.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1018.6" y="1694.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (16 samples, 0.98%)</title><rect x="1015.6" y="1667.0" width="11.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1018.6" y="1678.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.06%)</title><rect x="1015.6" y="1651.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1018.6" y="1662.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (1 samples, 0.06%)</title><rect x="1015.6" y="1635.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1018.6" y="1646.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.06%)</title><rect x="1015.6" y="1619.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1018.6" y="1630.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.06%)</title><rect x="1015.6" y="1603.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1018.6" y="1614.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.06%)</title><rect x="1015.6" y="1587.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1018.6" y="1598.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.06%)</title><rect x="1015.6" y="1571.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1018.6" y="1582.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.06%)</title><rect x="1015.6" y="1555.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1018.6" y="1566.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.06%)</title><rect x="1015.6" y="1539.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1018.6" y="1550.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable$1.next (1 samples, 0.06%)</title><rect x="1015.6" y="1523.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1018.6" y="1534.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable$1.next (1 samples, 0.06%)</title><rect x="1015.6" y="1507.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1018.6" y="1518.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getCell (1 samples, 0.06%)</title><rect x="1015.6" y="1491.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1018.6" y="1502.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.readOffset (1 samples, 0.06%)</title><rect x="1015.6" y="1475.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1018.6" y="1486.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.06%)</title><rect x="1015.6" y="1459.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1018.6" y="1470.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable$1.next (15 samples, 0.92%)</title><rect x="1016.4" y="1651.0" width="10.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1019.4" y="1662.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable$1.next (15 samples, 0.92%)</title><rect x="1016.4" y="1635.0" width="10.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1019.4" y="1646.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getCell (15 samples, 0.92%)</title><rect x="1016.4" y="1619.0" width="10.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1019.4" y="1630.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getOffset (6 samples, 0.37%)</title><rect x="1016.4" y="1603.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1019.4" y="1614.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.readOffset (6 samples, 0.37%)</title><rect x="1016.4" y="1587.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1019.4" y="1598.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.37%)</title><rect x="1016.4" y="1571.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1019.4" y="1582.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.37%)</title><rect x="1016.4" y="1555.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1019.4" y="1566.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.37%)</title><rect x="1016.4" y="1539.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1019.4" y="1550.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.31%)</title><rect x="1016.4" y="1523.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1019.4" y="1534.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5 samples, 0.31%)</title><rect x="1016.4" y="1507.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1019.4" y="1518.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.31%)</title><rect x="1016.4" y="1491.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1019.4" y="1502.0"></text>
</g>
<g>
<title>__pread (4 samples, 0.25%)</title><rect x="1016.4" y="1475.0" width="2.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1019.4" y="1486.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.06%)</title><rect x="1019.3" y="1475.0" width="0.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1022.3" y="1486.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.06%)</title><rect x="1020.0" y="1523.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1023.0" y="1534.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.06%)</title><rect x="1020.0" y="1507.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1023.0" y="1518.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.readOffset (9 samples, 0.55%)</title><rect x="1020.7" y="1603.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1023.7" y="1614.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (9 samples, 0.55%)</title><rect x="1020.7" y="1587.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1023.7" y="1598.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (9 samples, 0.55%)</title><rect x="1020.7" y="1571.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1023.7" y="1582.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (1 samples, 0.06%)</title><rect x="1020.7" y="1555.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1023.7" y="1566.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (1 samples, 0.06%)</title><rect x="1020.7" y="1539.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1023.7" y="1550.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (8 samples, 0.49%)</title><rect x="1021.4" y="1555.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1024.4" y="1566.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 0.43%)</title><rect x="1021.4" y="1539.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1024.4" y="1550.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (7 samples, 0.43%)</title><rect x="1021.4" y="1523.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1024.4" y="1534.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (7 samples, 0.43%)</title><rect x="1021.4" y="1507.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1024.4" y="1518.0"></text>
</g>
<g>
<title>__pread (6 samples, 0.37%)</title><rect x="1022.2" y="1491.0" width="4.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1025.2" y="1502.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.25%)</title><rect x="1023.6" y="1475.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1026.6" y="1486.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.25%)</title><rect x="1023.6" y="1459.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1026.6" y="1470.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.25%)</title><rect x="1023.6" y="1443.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1026.6" y="1454.0"></text>
</g>
<g>
<title>ksys_pread64 (4 samples, 0.25%)</title><rect x="1023.6" y="1427.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1026.6" y="1438.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.25%)</title><rect x="1023.6" y="1411.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1026.6" y="1422.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.18%)</title><rect x="1023.6" y="1395.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1026.6" y="1406.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.18%)</title><rect x="1023.6" y="1379.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1026.6" y="1390.0"></text>
</g>
<g>
<title>ext4_file_read_iter (3 samples, 0.18%)</title><rect x="1023.6" y="1363.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1026.6" y="1374.0"></text>
</g>
<g>
<title>generic_file_read_iter (3 samples, 0.18%)</title><rect x="1023.6" y="1347.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1026.6" y="1358.0"></text>
</g>
<g>
<title>generic_file_buffered_read (3 samples, 0.18%)</title><rect x="1023.6" y="1331.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1026.6" y="1342.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.12%)</title><rect x="1023.6" y="1315.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1026.6" y="1326.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.06%)</title><rect x="1023.6" y="1299.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1026.6" y="1310.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.06%)</title><rect x="1024.3" y="1299.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1027.3" y="1310.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.06%)</title><rect x="1025.0" y="1315.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1028.0" y="1326.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.06%)</title><rect x="1025.0" y="1299.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1028.0" y="1310.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.06%)</title><rect x="1025.8" y="1395.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1028.8" y="1406.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.06%)</title><rect x="1025.8" y="1379.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1028.8" y="1390.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.06%)</title><rect x="1025.8" y="1363.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1028.8" y="1374.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.06%)</title><rect x="1025.8" y="1347.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1028.8" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.06%)</title><rect x="1026.5" y="1539.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1029.5" y="1550.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.06%)</title><rect x="1027.2" y="1667.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1030.2" y="1678.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.06%)</title><rect x="1027.2" y="1651.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1030.2" y="1662.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/Cell.compareTo (1 samples, 0.06%)</title><rect x="1027.2" y="1635.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1030.2" y="1646.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/Cell.compareTo (1 samples, 0.06%)</title><rect x="1027.2" y="1619.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1030.2" y="1630.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.06%)</title><rect x="1027.2" y="1603.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1030.2" y="1614.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.06%)</title><rect x="1027.2" y="1587.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1030.2" y="1598.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/MemTable.iterator (30 samples, 1.84%)</title><rect x="1027.9" y="1811.0" width="21.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1030.9" y="1822.0">r..</text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (28 samples, 1.72%)</title><rect x="1027.9" y="1795.0" width="20.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1030.9" y="1806.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (28 samples, 1.72%)</title><rect x="1027.9" y="1779.0" width="20.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1030.9" y="1790.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (28 samples, 1.72%)</title><rect x="1027.9" y="1763.0" width="20.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1030.9" y="1774.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (25 samples, 1.53%)</title><rect x="1030.1" y="1747.0" width="18.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1033.1" y="1758.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.12%)</title><rect x="1035.9" y="1731.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1038.9" y="1742.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.12%)</title><rect x="1035.9" y="1715.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1038.9" y="1726.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.12%)</title><rect x="1035.9" y="1699.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1038.9" y="1710.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1036.6" y="1683.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1039.6" y="1694.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1036.6" y="1667.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1039.6" y="1678.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1036.6" y="1651.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1039.6" y="1662.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (15 samples, 0.92%)</title><rect x="1037.3" y="1731.0" width="10.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1040.3" y="1742.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (15 samples, 0.92%)</title><rect x="1037.3" y="1715.0" width="10.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1040.3" y="1726.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (15 samples, 0.92%)</title><rect x="1037.3" y="1699.0" width="10.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1040.3" y="1710.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.06%)</title><rect x="1043.1" y="1683.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1046.1" y="1694.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.06%)</title><rect x="1043.1" y="1667.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1046.1" y="1678.0"></text>
</g>
<g>
<title>vectorizedMismatch (6 samples, 0.37%)</title><rect x="1043.9" y="1683.0" width="4.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1046.9" y="1694.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (2 samples, 0.12%)</title><rect x="1048.2" y="1795.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1051.2" y="1806.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (2 samples, 0.12%)</title><rect x="1048.2" y="1779.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1051.2" y="1790.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1048.2" y="1763.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1051.2" y="1774.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1048.2" y="1747.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1051.2" y="1758.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.12%)</title><rect x="1048.2" y="1731.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1051.2" y="1742.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.12%)</title><rect x="1048.2" y="1715.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1051.2" y="1726.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.12%)</title><rect x="1048.2" y="1699.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1051.2" y="1710.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.12%)</title><rect x="1048.2" y="1683.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1051.2" y="1694.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.12%)</title><rect x="1048.2" y="1667.0" width="1.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1051.2" y="1678.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="1049.6" y="1907.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1052.6" y="1918.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.06%)</title><rect x="1050.4" y="1907.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1053.4" y="1918.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="1050.4" y="1891.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1053.4" y="1902.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.06%)</title><rect x="1050.4" y="1875.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1053.4" y="1886.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="1050.4" y="1859.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1053.4" y="1870.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.06%)</title><rect x="1050.4" y="1843.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1053.4" y="1854.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.06%)</title><rect x="1051.1" y="1907.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1054.1" y="1918.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="1051.1" y="1891.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1054.1" y="1902.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="1051.1" y="1875.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1054.1" y="1886.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1051.1" y="1859.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1054.1" y="1870.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1051.1" y="1843.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1054.1" y="1854.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.06%)</title><rect x="1051.8" y="1939.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1054.8" y="1950.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="1051.8" y="1923.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1054.8" y="1934.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="1051.8" y="1907.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1054.8" y="1918.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.12%)</title><rect x="1052.5" y="1939.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1055.5" y="1950.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.12%)</title><rect x="1052.5" y="1923.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1055.5" y="1934.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.12%)</title><rect x="1052.5" y="1907.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1055.5" y="1918.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.12%)</title><rect x="1052.5" y="1891.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1055.5" y="1902.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.37%)</title><rect x="1054.0" y="1939.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1057.0" y="1950.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.37%)</title><rect x="1054.0" y="1923.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1057.0" y="1934.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (90 samples, 5.52%)</title><rect x="1058.3" y="1955.0" width="65.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1061.3" y="1966.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (89 samples, 5.46%)</title><rect x="1059.0" y="1939.0" width="64.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1062.0" y="1950.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (24 samples, 1.47%)</title><rect x="1067.7" y="1923.0" width="17.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1070.7" y="1934.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.30.so (5 samples, 0.31%)</title><rect x="1068.5" y="1907.0" width="3.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1071.5" y="1918.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (5 samples, 0.31%)</title><rect x="1072.1" y="1907.0" width="3.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1075.1" y="1918.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.12%)</title><rect x="1075.7" y="1907.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1078.7" y="1918.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.12%)</title><rect x="1077.1" y="1907.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1080.1" y="1918.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.06%)</title><rect x="1078.6" y="1907.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1081.6" y="1918.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.37%)</title><rect x="1079.3" y="1907.0" width="4.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1082.3" y="1918.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.06%)</title><rect x="1081.5" y="1891.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1084.5" y="1902.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.12%)</title><rect x="1082.2" y="1891.0" width="1.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1085.2" y="1902.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.06%)</title><rect x="1082.9" y="1875.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1085.9" y="1886.0"></text>
</g>
<g>
<title>memmove@plt (1 samples, 0.06%)</title><rect x="1083.6" y="1907.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1086.6" y="1918.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.06%)</title><rect x="1084.4" y="1907.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1087.4" y="1918.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.06%)</title><rect x="1085.1" y="1923.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1088.1" y="1934.0"></text>
</g>
<g>
<title>__recv (49 samples, 3.00%)</title><rect x="1085.8" y="1923.0" width="35.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1088.8" y="1934.0">__r..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 2.15%)</title><rect x="1095.9" y="1907.0" width="25.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1098.9" y="1918.0">e..</text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.12%)</title><rect x="1095.9" y="1891.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1098.9" y="1902.0"></text>
</g>
<g>
<title>do_syscall_64 (33 samples, 2.02%)</title><rect x="1097.4" y="1891.0" width="23.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1100.4" y="1902.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (31 samples, 1.90%)</title><rect x="1098.8" y="1875.0" width="22.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1101.8" y="1886.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (30 samples, 1.84%)</title><rect x="1098.8" y="1859.0" width="21.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1101.8" y="1870.0">_..</text>
</g>
<g>
<title>__fdget (1 samples, 0.06%)</title><rect x="1099.6" y="1843.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1102.6" y="1854.0"></text>
</g>
<g>
<title>sock_recvmsg (22 samples, 1.35%)</title><rect x="1100.3" y="1843.0" width="15.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1103.3" y="1854.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.12%)</title><rect x="1100.3" y="1827.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1103.3" y="1838.0"></text>
</g>
<g>
<title>inet6_recvmsg (14 samples, 0.86%)</title><rect x="1101.7" y="1827.0" width="10.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1104.7" y="1838.0"></text>
</g>
<g>
<title>tcp_recvmsg (14 samples, 0.86%)</title><rect x="1101.7" y="1811.0" width="10.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1104.7" y="1822.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.06%)</title><rect x="1103.9" y="1795.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1106.9" y="1806.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.06%)</title><rect x="1103.9" y="1779.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1106.9" y="1790.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.06%)</title><rect x="1103.9" y="1763.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1106.9" y="1774.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.06%)</title><rect x="1103.9" y="1747.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1106.9" y="1758.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.06%)</title><rect x="1104.6" y="1795.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1107.6" y="1806.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.06%)</title><rect x="1105.4" y="1795.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1108.4" y="1806.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.06%)</title><rect x="1106.1" y="1795.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1109.1" y="1806.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.06%)</title><rect x="1106.1" y="1779.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1109.1" y="1790.0"></text>
</g>
<g>
<title>__pv_queued_spin_lock_slowpath (1 samples, 0.06%)</title><rect x="1106.1" y="1763.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1109.1" y="1774.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (5 samples, 0.31%)</title><rect x="1106.8" y="1795.0" width="3.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1109.8" y="1806.0"></text>
</g>
<g>
<title>__skb_datagram_iter (5 samples, 0.31%)</title><rect x="1106.8" y="1779.0" width="3.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1109.8" y="1790.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.25%)</title><rect x="1107.5" y="1763.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1110.5" y="1774.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.18%)</title><rect x="1107.5" y="1747.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1110.5" y="1758.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.12%)</title><rect x="1108.2" y="1731.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1111.2" y="1742.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.06%)</title><rect x="1109.7" y="1747.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1112.7" y="1758.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.06%)</title><rect x="1109.7" y="1731.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1112.7" y="1742.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.06%)</title><rect x="1110.4" y="1795.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1113.4" y="1806.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.06%)</title><rect x="1111.1" y="1795.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1114.1" y="1806.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.06%)</title><rect x="1111.1" y="1779.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1114.1" y="1790.0"></text>
</g>
<g>
<title>security_socket_recvmsg (6 samples, 0.37%)</title><rect x="1111.9" y="1827.0" width="4.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1114.9" y="1838.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (6 samples, 0.37%)</title><rect x="1111.9" y="1811.0" width="4.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1114.9" y="1822.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.37%)</title><rect x="1111.9" y="1795.0" width="4.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1114.9" y="1806.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (3 samples, 0.18%)</title><rect x="1114.0" y="1779.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1117.0" y="1790.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.06%)</title><rect x="1115.5" y="1763.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1118.5" y="1774.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.37%)</title><rect x="1116.2" y="1843.0" width="4.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1119.2" y="1854.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.25%)</title><rect x="1116.2" y="1827.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1119.2" y="1838.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.25%)</title><rect x="1116.2" y="1811.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1119.2" y="1822.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.25%)</title><rect x="1116.2" y="1795.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1119.2" y="1806.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.12%)</title><rect x="1119.1" y="1827.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1122.1" y="1838.0"></text>
</g>
<g>
<title>fput (1 samples, 0.06%)</title><rect x="1120.5" y="1859.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1123.5" y="1870.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.18%)</title><rect x="1121.3" y="1923.0" width="2.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1124.3" y="1934.0"></text>
</g>
<g>
<title>start_thread (92 samples, 5.64%)</title><rect x="1123.4" y="2003.0" width="66.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1126.4" y="2014.0">start_t..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (92 samples, 5.64%)</title><rect x="1123.4" y="1987.0" width="66.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1126.4" y="1998.0">thread_..</text>
</g>
<g>
<title>Thread::call_run() (92 samples, 5.64%)</title><rect x="1123.4" y="1971.0" width="66.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1126.4" y="1982.0">Thread:..</text>
</g>
<g>
<title>JavaThread::run() (91 samples, 5.58%)</title><rect x="1123.4" y="1955.0" width="65.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1126.4" y="1966.0">JavaThr..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (90 samples, 5.52%)</title><rect x="1123.4" y="1939.0" width="65.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1126.4" y="1950.0">Compile..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (90 samples, 5.52%)</title><rect x="1123.4" y="1923.0" width="65.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1126.4" y="1934.0">Compile..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (90 samples, 5.52%)</title><rect x="1123.4" y="1907.0" width="65.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1126.4" y="1918.0">C2Compi..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (90 samples, 5.52%)</title><rect x="1123.4" y="1891.0" width="65.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1126.4" y="1902.0">Compile..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (1 samples, 0.06%)</title><rect x="1123.4" y="1875.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1126.4" y="1886.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (1 samples, 0.06%)</title><rect x="1123.4" y="1859.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1126.4" y="1870.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="1123.4" y="1843.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1126.4" y="1854.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="1123.4" y="1827.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1126.4" y="1838.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="1123.4" y="1811.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1126.4" y="1822.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1123.4" y="1795.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1126.4" y="1806.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1123.4" y="1779.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1126.4" y="1790.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="1123.4" y="1763.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1126.4" y="1774.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.06%)</title><rect x="1123.4" y="1747.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1126.4" y="1758.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="1123.4" y="1731.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1126.4" y="1742.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1123.4" y="1715.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1126.4" y="1726.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1123.4" y="1699.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1126.4" y="1710.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1123.4" y="1683.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1126.4" y="1694.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (67 samples, 4.11%)</title><rect x="1124.2" y="1875.0" width="48.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1127.2" y="1886.0">Comp..</text>
</g>
<g>
<title>Compile::Output() (3 samples, 0.18%)</title><rect x="1124.2" y="1859.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1127.2" y="1870.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (2 samples, 0.12%)</title><rect x="1124.2" y="1843.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1127.2" y="1854.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (2 samples, 0.12%)</title><rect x="1124.2" y="1827.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1127.2" y="1838.0"></text>
</g>
<g>
<title>OopFlow::build_oop_map(Node*, int, PhaseRegAlloc*, int*) (2 samples, 0.12%)</title><rect x="1124.2" y="1811.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1127.2" y="1822.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (1 samples, 0.06%)</title><rect x="1125.6" y="1843.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1128.6" y="1854.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (1 samples, 0.06%)</title><rect x="1125.6" y="1827.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1128.6" y="1838.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (2 samples, 0.12%)</title><rect x="1126.3" y="1859.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1129.3" y="1870.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (1 samples, 0.06%)</title><rect x="1126.3" y="1843.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1129.3" y="1854.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.06%)</title><rect x="1126.3" y="1827.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1129.3" y="1838.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (1 samples, 0.06%)</title><rect x="1127.1" y="1843.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1130.1" y="1854.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.06%)</title><rect x="1127.1" y="1827.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1130.1" y="1838.0"></text>
</g>
<g>
<title>Matcher::match() (6 samples, 0.37%)</title><rect x="1127.8" y="1859.0" width="4.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1130.8" y="1870.0"></text>
</g>
<g>
<title>ConNode::Opcode() const (1 samples, 0.06%)</title><rect x="1127.8" y="1843.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1130.8" y="1854.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (5 samples, 0.31%)</title><rect x="1128.5" y="1843.0" width="3.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1131.5" y="1854.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (1 samples, 0.06%)</title><rect x="1128.5" y="1827.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1131.5" y="1838.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.06%)</title><rect x="1129.2" y="1827.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1132.2" y="1838.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.06%)</title><rect x="1129.2" y="1811.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1132.2" y="1822.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.06%)</title><rect x="1129.2" y="1795.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1132.2" y="1806.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1129.2" y="1779.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1132.2" y="1790.0"></text>
</g>
<g>
<title>Node::clone() const (3 samples, 0.18%)</title><rect x="1130.0" y="1827.0" width="2.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1133.0" y="1838.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (6 samples, 0.37%)</title><rect x="1132.1" y="1859.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1135.1" y="1870.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (6 samples, 0.37%)</title><rect x="1132.1" y="1843.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1135.1" y="1854.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (3 samples, 0.18%)</title><rect x="1132.1" y="1827.0" width="2.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1135.1" y="1838.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (1 samples, 0.06%)</title><rect x="1132.1" y="1811.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1135.1" y="1822.0"></text>
</g>
<g>
<title>PhaseCFG::hoist_to_cheaper_block(Block*, Block*, Node*) (1 samples, 0.06%)</title><rect x="1132.8" y="1811.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1135.8" y="1822.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_node_into_block(Node*, Block*) (1 samples, 0.06%)</title><rect x="1133.6" y="1811.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1136.6" y="1822.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (1 samples, 0.06%)</title><rect x="1134.3" y="1827.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1137.3" y="1838.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (1 samples, 0.06%)</title><rect x="1134.3" y="1811.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1137.3" y="1822.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (1 samples, 0.06%)</title><rect x="1135.0" y="1827.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1138.0" y="1838.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.06%)</title><rect x="1135.0" y="1811.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1138.0" y="1822.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.06%)</title><rect x="1135.7" y="1827.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1138.7" y="1838.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.06%)</title><rect x="1135.7" y="1811.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1138.7" y="1822.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (49 samples, 3.00%)</title><rect x="1136.5" y="1859.0" width="35.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1139.5" y="1870.0">Pha..</text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.06%)</title><rect x="1136.5" y="1843.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1139.5" y="1854.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (2 samples, 0.12%)</title><rect x="1137.2" y="1843.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1140.2" y="1854.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (3 samples, 0.18%)</title><rect x="1138.6" y="1843.0" width="2.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1141.6" y="1854.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.06%)</title><rect x="1138.6" y="1827.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1141.6" y="1838.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (1 samples, 0.06%)</title><rect x="1139.4" y="1827.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1142.4" y="1838.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.06%)</title><rect x="1140.1" y="1827.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1143.1" y="1838.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (2 samples, 0.12%)</title><rect x="1140.8" y="1843.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1143.8" y="1854.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.06%)</title><rect x="1140.8" y="1827.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1143.8" y="1838.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (1 samples, 0.06%)</title><rect x="1141.5" y="1827.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1144.5" y="1838.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.06%)</title><rect x="1141.5" y="1811.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1144.5" y="1822.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (7 samples, 0.43%)</title><rect x="1142.3" y="1843.0" width="5.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1145.3" y="1854.0"></text>
</g>
<g>
<title>MachNode::oper_input_base() const (1 samples, 0.06%)</title><rect x="1145.9" y="1827.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1148.9" y="1838.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (1 samples, 0.06%)</title><rect x="1146.6" y="1827.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1149.6" y="1838.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (9 samples, 0.55%)</title><rect x="1147.3" y="1843.0" width="6.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1150.3" y="1854.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.06%)</title><rect x="1148.8" y="1827.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1151.8" y="1838.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.06%)</title><rect x="1148.8" y="1811.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1151.8" y="1822.0"></text>
</g>
<g>
<title>MachSpillCopyNode::ideal_reg() const (1 samples, 0.06%)</title><rect x="1148.8" y="1795.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1151.8" y="1806.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (3 samples, 0.18%)</title><rect x="1149.5" y="1827.0" width="2.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1152.5" y="1838.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.12%)</title><rect x="1150.2" y="1811.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1153.2" y="1822.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (3 samples, 0.18%)</title><rect x="1151.7" y="1827.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1154.7" y="1838.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.06%)</title><rect x="1152.4" y="1811.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1155.4" y="1822.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (1 samples, 0.06%)</title><rect x="1153.1" y="1811.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1156.1" y="1822.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (4 samples, 0.25%)</title><rect x="1153.8" y="1843.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1156.8" y="1854.0"></text>
</g>
<g>
<title>RegMask::Size() const (3 samples, 0.18%)</title><rect x="1153.8" y="1827.0" width="2.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1156.8" y="1838.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1156.0" y="1827.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1159.0" y="1838.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.87] (3 samples, 0.18%)</title><rect x="1156.7" y="1843.0" width="2.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1159.7" y="1854.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.06%)</title><rect x="1156.7" y="1827.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1159.7" y="1838.0"></text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (1 samples, 0.06%)</title><rect x="1157.4" y="1827.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1160.4" y="1838.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1158.2" y="1827.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1161.2" y="1838.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (13 samples, 0.80%)</title><rect x="1158.9" y="1843.0" width="9.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1161.9" y="1854.0"></text>
</g>
<g>
<title>Node::replace_by(Node*) (1 samples, 0.06%)</title><rect x="1161.8" y="1827.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1164.8" y="1838.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (8 samples, 0.49%)</title><rect x="1162.5" y="1827.0" width="5.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1165.5" y="1838.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.06%)</title><rect x="1168.3" y="1843.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1171.3" y="1854.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (1 samples, 0.06%)</title><rect x="1168.3" y="1827.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1171.3" y="1838.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.06%)</title><rect x="1169.0" y="1843.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1172.0" y="1854.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.06%)</title><rect x="1169.0" y="1827.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1172.0" y="1838.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (1 samples, 0.06%)</title><rect x="1169.7" y="1843.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1172.7" y="1854.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.06%)</title><rect x="1169.7" y="1827.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1172.7" y="1838.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.12%)</title><rect x="1170.5" y="1843.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1173.5" y="1854.0"></text>
</g>
<g>
<title>PhasePeephole::do_transform() (1 samples, 0.06%)</title><rect x="1171.9" y="1859.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1174.9" y="1870.0"></text>
</g>
<g>
<title>Compile::Optimize() (14 samples, 0.86%)</title><rect x="1172.6" y="1875.0" width="10.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.6" y="1886.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (1 samples, 0.06%)</title><rect x="1172.6" y="1859.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.6" y="1870.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (1 samples, 0.06%)</title><rect x="1172.6" y="1843.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1175.6" y="1854.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (1 samples, 0.06%)</title><rect x="1172.6" y="1827.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1175.6" y="1838.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (1 samples, 0.06%)</title><rect x="1173.4" y="1859.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1176.4" y="1870.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="1173.4" y="1843.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1176.4" y="1854.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.06%)</title><rect x="1173.4" y="1827.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1176.4" y="1838.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (1 samples, 0.06%)</title><rect x="1174.1" y="1859.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1177.1" y="1870.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (1 samples, 0.06%)</title><rect x="1174.1" y="1843.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1177.1" y="1854.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (6 samples, 0.37%)</title><rect x="1174.8" y="1859.0" width="4.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1177.8" y="1870.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.06%)</title><rect x="1174.8" y="1843.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1177.8" y="1854.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (1 samples, 0.06%)</title><rect x="1174.8" y="1827.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1177.8" y="1838.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.12%)</title><rect x="1175.5" y="1843.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1178.5" y="1854.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.06%)</title><rect x="1176.3" y="1827.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1179.3" y="1838.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (1 samples, 0.06%)</title><rect x="1176.3" y="1811.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1179.3" y="1822.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.06%)</title><rect x="1177.0" y="1843.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1180.0" y="1854.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.12%)</title><rect x="1177.7" y="1843.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1180.7" y="1854.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.12%)</title><rect x="1177.7" y="1827.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1180.7" y="1838.0"></text>
</g>
<g>
<title>CallNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1177.7" y="1811.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.7" y="1822.0"></text>
</g>
<g>
<title>Node::set_req(unsigned int, Node*) (1 samples, 0.06%)</title><rect x="1177.7" y="1795.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1180.7" y="1806.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1178.4" y="1811.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1181.4" y="1822.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.157] (1 samples, 0.06%)</title><rect x="1178.4" y="1795.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1181.4" y="1806.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1178.4" y="1779.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1181.4" y="1790.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1178.4" y="1763.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1181.4" y="1774.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1178.4" y="1747.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1181.4" y="1758.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1178.4" y="1731.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1181.4" y="1742.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1178.4" y="1715.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1181.4" y="1726.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1178.4" y="1699.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1181.4" y="1710.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1178.4" y="1683.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.4" y="1694.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1178.4" y="1667.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.4" y="1678.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1178.4" y="1651.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1181.4" y="1662.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1178.4" y="1635.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1181.4" y="1646.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1178.4" y="1619.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1181.4" y="1630.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1178.4" y="1603.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1181.4" y="1614.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1178.4" y="1587.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1181.4" y="1598.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1178.4" y="1571.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1181.4" y="1582.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1178.4" y="1555.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1181.4" y="1566.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1178.4" y="1539.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1181.4" y="1550.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1178.4" y="1523.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1181.4" y="1534.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1178.4" y="1507.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1181.4" y="1518.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1178.4" y="1491.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1181.4" y="1502.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1178.4" y="1475.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1181.4" y="1486.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (1 samples, 0.06%)</title><rect x="1178.4" y="1459.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1181.4" y="1470.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1178.4" y="1443.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.4" y="1454.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.18%)</title><rect x="1179.1" y="1859.0" width="2.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1182.1" y="1870.0"></text>
</g>
<g>
<title>Node::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1179.1" y="1843.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1182.1" y="1854.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.12%)</title><rect x="1179.9" y="1843.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1182.9" y="1854.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1179.9" y="1827.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1182.9" y="1838.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.06%)</title><rect x="1179.9" y="1811.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1182.9" y="1822.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.06%)</title><rect x="1179.9" y="1795.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1182.9" y="1806.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.06%)</title><rect x="1179.9" y="1779.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1182.9" y="1790.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1180.6" y="1827.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1183.6" y="1838.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.157] (1 samples, 0.06%)</title><rect x="1180.6" y="1811.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.6" y="1822.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1180.6" y="1795.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1183.6" y="1806.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1180.6" y="1779.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1183.6" y="1790.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1180.6" y="1763.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1183.6" y="1774.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (1 samples, 0.06%)</title><rect x="1180.6" y="1747.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.6" y="1758.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1180.6" y="1731.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1183.6" y="1742.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.12%)</title><rect x="1181.3" y="1859.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.3" y="1870.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.06%)</title><rect x="1181.3" y="1843.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.3" y="1854.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.06%)</title><rect x="1182.0" y="1843.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.0" y="1854.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.06%)</title><rect x="1182.0" y="1827.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1185.0" y="1838.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.43%)</title><rect x="1182.8" y="1875.0" width="5.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.8" y="1886.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.43%)</title><rect x="1182.8" y="1859.0" width="5.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.8" y="1870.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.43%)</title><rect x="1182.8" y="1843.0" width="5.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.8" y="1854.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.43%)</title><rect x="1182.8" y="1827.0" width="5.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.8" y="1838.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.43%)</title><rect x="1182.8" y="1811.0" width="5.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1185.8" y="1822.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.43%)</title><rect x="1182.8" y="1795.0" width="5.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.8" y="1806.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.43%)</title><rect x="1182.8" y="1779.0" width="5.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.8" y="1790.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.43%)</title><rect x="1182.8" y="1763.0" width="5.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.8" y="1774.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.43%)</title><rect x="1182.8" y="1747.0" width="5.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.8" y="1758.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.43%)</title><rect x="1182.8" y="1731.0" width="5.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1185.8" y="1742.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.43%)</title><rect x="1182.8" y="1715.0" width="5.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.8" y="1726.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.43%)</title><rect x="1182.8" y="1699.0" width="5.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.8" y="1710.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.18%)</title><rect x="1182.8" y="1683.0" width="2.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.8" y="1694.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.18%)</title><rect x="1182.8" y="1667.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.8" y="1678.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.18%)</title><rect x="1182.8" y="1651.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1185.8" y="1662.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.18%)</title><rect x="1182.8" y="1635.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.8" y="1646.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.18%)</title><rect x="1182.8" y="1619.0" width="2.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1185.8" y="1630.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.18%)</title><rect x="1182.8" y="1603.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.8" y="1614.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="1182.8" y="1587.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.8" y="1598.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="1182.8" y="1571.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.8" y="1582.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.12%)</title><rect x="1182.8" y="1555.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1185.8" y="1566.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.12%)</title><rect x="1182.8" y="1539.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.8" y="1550.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.12%)</title><rect x="1182.8" y="1523.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.8" y="1534.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.12%)</title><rect x="1182.8" y="1507.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1185.8" y="1518.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.12%)</title><rect x="1182.8" y="1491.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.8" y="1502.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1182.8" y="1475.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1185.8" y="1486.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1182.8" y="1459.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.8" y="1470.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1182.8" y="1443.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.8" y="1454.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1182.8" y="1427.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.8" y="1438.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1182.8" y="1411.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.8" y="1422.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1182.8" y="1395.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1185.8" y="1406.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1182.8" y="1379.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.8" y="1390.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1182.8" y="1363.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.8" y="1374.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1182.8" y="1347.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.8" y="1358.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1182.8" y="1331.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.8" y="1342.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1182.8" y="1315.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.8" y="1326.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="1182.8" y="1299.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.8" y="1310.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="1182.8" y="1283.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.8" y="1294.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="1182.8" y="1267.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.8" y="1278.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.06%)</title><rect x="1182.8" y="1251.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1185.8" y="1262.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.06%)</title><rect x="1182.8" y="1235.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1185.8" y="1246.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.06%)</title><rect x="1182.8" y="1219.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.8" y="1230.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool, bool) (1 samples, 0.06%)</title><rect x="1182.8" y="1203.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.8" y="1214.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1182.8" y="1187.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.8" y="1198.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1183.5" y="1475.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1186.5" y="1486.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1183.5" y="1459.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1186.5" y="1470.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1183.5" y="1443.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.5" y="1454.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1183.5" y="1427.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.5" y="1438.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1183.5" y="1411.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.5" y="1422.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1183.5" y="1395.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.5" y="1406.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1183.5" y="1379.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.5" y="1390.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1183.5" y="1363.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1186.5" y="1374.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1183.5" y="1347.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.5" y="1358.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1183.5" y="1331.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1186.5" y="1342.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1183.5" y="1315.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.5" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1183.5" y="1299.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.5" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1183.5" y="1283.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.5" y="1294.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1183.5" y="1267.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.5" y="1278.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1183.5" y="1251.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.5" y="1262.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1183.5" y="1235.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.5" y="1246.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1183.5" y="1219.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.5" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1183.5" y="1203.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1186.5" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1183.5" y="1187.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.5" y="1198.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1183.5" y="1171.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1186.5" y="1182.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_declared_method_holder() (1 samples, 0.06%)</title><rect x="1183.5" y="1155.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.5" y="1166.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1183.5" y="1139.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.5" y="1150.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.06%)</title><rect x="1183.5" y="1123.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1186.5" y="1134.0"></text>
</g>
<g>
<title>ciBytecodeStream::has_appendix() (1 samples, 0.06%)</title><rect x="1184.2" y="1587.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.2" y="1598.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.25%)</title><rect x="1184.9" y="1683.0" width="2.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.9" y="1694.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1184.9" y="1667.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.9" y="1678.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1184.9" y="1651.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.9" y="1662.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1184.9" y="1635.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.9" y="1646.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1184.9" y="1619.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.9" y="1630.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1184.9" y="1603.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.9" y="1614.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1184.9" y="1587.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.9" y="1598.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1184.9" y="1571.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.9" y="1582.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1184.9" y="1555.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.9" y="1566.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1184.9" y="1539.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.9" y="1550.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1184.9" y="1523.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.9" y="1534.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1184.9" y="1507.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.9" y="1518.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1184.9" y="1491.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.9" y="1502.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1184.9" y="1475.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.9" y="1486.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1184.9" y="1459.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.9" y="1470.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1184.9" y="1443.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.9" y="1454.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1184.9" y="1427.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.9" y="1438.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1184.9" y="1411.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.9" y="1422.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1184.9" y="1395.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.9" y="1406.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1184.9" y="1379.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.9" y="1390.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1184.9" y="1363.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.9" y="1374.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1184.9" y="1347.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.9" y="1358.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1184.9" y="1331.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.9" y="1342.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1184.9" y="1315.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.9" y="1326.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1184.9" y="1299.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.9" y="1310.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1184.9" y="1283.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.9" y="1294.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1184.9" y="1267.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.9" y="1278.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1184.9" y="1251.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.9" y="1262.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1184.9" y="1235.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.9" y="1246.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1184.9" y="1219.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.9" y="1230.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1184.9" y="1203.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.9" y="1214.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1184.9" y="1187.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.9" y="1198.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1184.9" y="1171.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.9" y="1182.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1184.9" y="1155.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.9" y="1166.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1184.9" y="1139.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.9" y="1150.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1184.9" y="1123.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.9" y="1134.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1184.9" y="1107.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.9" y="1118.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1184.9" y="1091.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.9" y="1102.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1184.9" y="1075.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.9" y="1086.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1184.9" y="1059.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.9" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1184.9" y="1043.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.9" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1184.9" y="1027.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.9" y="1038.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1184.9" y="1011.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.9" y="1022.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1184.9" y="995.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.9" y="1006.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1184.9" y="979.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.9" y="990.0"></text>
</g>
<g>
<title>GraphKit::set_map_clone(SafePointNode*) (1 samples, 0.06%)</title><rect x="1184.9" y="963.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.9" y="974.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.06%)</title><rect x="1184.9" y="947.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.9" y="958.0"></text>
</g>
<g>
<title>MergeMemNode::make(Node*) (1 samples, 0.06%)</title><rect x="1184.9" y="931.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.9" y="942.0"></text>
</g>
<g>
<title>MergeMemNode::MergeMemNode(Node*) (1 samples, 0.06%)</title><rect x="1184.9" y="915.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.9" y="926.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.06%)</title><rect x="1184.9" y="899.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.9" y="910.0"></text>
</g>
<g>
<title>Node::grow(unsigned int) (1 samples, 0.06%)</title><rect x="1184.9" y="883.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.9" y="894.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.18%)</title><rect x="1185.7" y="1667.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.7" y="1678.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.18%)</title><rect x="1185.7" y="1651.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.7" y="1662.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.18%)</title><rect x="1185.7" y="1635.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.7" y="1646.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.18%)</title><rect x="1185.7" y="1619.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.7" y="1630.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.18%)</title><rect x="1185.7" y="1603.0" width="2.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.7" y="1614.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.18%)</title><rect x="1185.7" y="1587.0" width="2.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.7" y="1598.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.18%)</title><rect x="1185.7" y="1571.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.7" y="1582.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.18%)</title><rect x="1185.7" y="1555.0" width="2.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.7" y="1566.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.18%)</title><rect x="1185.7" y="1539.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.7" y="1550.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.18%)</title><rect x="1185.7" y="1523.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.7" y="1534.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.18%)</title><rect x="1185.7" y="1507.0" width="2.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.7" y="1518.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.18%)</title><rect x="1185.7" y="1491.0" width="2.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.7" y="1502.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.18%)</title><rect x="1185.7" y="1475.0" width="2.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.7" y="1486.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.18%)</title><rect x="1185.7" y="1459.0" width="2.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.7" y="1470.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.18%)</title><rect x="1185.7" y="1443.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.7" y="1454.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.18%)</title><rect x="1185.7" y="1427.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.7" y="1438.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.18%)</title><rect x="1185.7" y="1411.0" width="2.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.7" y="1422.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.18%)</title><rect x="1185.7" y="1395.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.7" y="1406.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.18%)</title><rect x="1185.7" y="1379.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.7" y="1390.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.18%)</title><rect x="1185.7" y="1363.0" width="2.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.7" y="1374.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.12%)</title><rect x="1185.7" y="1347.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.7" y="1358.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="1185.7" y="1331.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.7" y="1342.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.12%)</title><rect x="1185.7" y="1315.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.7" y="1326.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.12%)</title><rect x="1185.7" y="1299.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.7" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.12%)</title><rect x="1185.7" y="1283.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.7" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.12%)</title><rect x="1185.7" y="1267.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.7" y="1278.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.12%)</title><rect x="1185.7" y="1251.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.7" y="1262.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="1185.7" y="1235.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.7" y="1246.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="1185.7" y="1219.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.7" y="1230.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.12%)</title><rect x="1185.7" y="1203.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.7" y="1214.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.12%)</title><rect x="1185.7" y="1187.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.7" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.12%)</title><rect x="1185.7" y="1171.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.7" y="1182.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.12%)</title><rect x="1185.7" y="1155.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.7" y="1166.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.12%)</title><rect x="1185.7" y="1139.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.7" y="1150.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="1185.7" y="1123.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.7" y="1134.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="1185.7" y="1107.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.7" y="1118.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.12%)</title><rect x="1185.7" y="1091.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.7" y="1102.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.12%)</title><rect x="1185.7" y="1075.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.7" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.12%)</title><rect x="1185.7" y="1059.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.7" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.12%)</title><rect x="1185.7" y="1043.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.7" y="1054.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.12%)</title><rect x="1185.7" y="1027.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.7" y="1038.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="1185.7" y="1011.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.7" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.12%)</title><rect x="1185.7" y="995.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.7" y="1006.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.12%)</title><rect x="1185.7" y="979.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.7" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.12%)</title><rect x="1185.7" y="963.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.7" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.12%)</title><rect x="1185.7" y="947.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.7" y="958.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.12%)</title><rect x="1185.7" y="931.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.7" y="942.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="1185.7" y="915.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.7" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1185.7" y="899.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.7" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1185.7" y="883.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.7" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1185.7" y="867.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.7" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1185.7" y="851.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.7" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1185.7" y="835.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.7" y="846.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1185.7" y="819.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.7" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1185.7" y="803.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.7" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1185.7" y="787.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.7" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1185.7" y="771.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.7" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1185.7" y="755.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.7" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1185.7" y="739.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.7" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1185.7" y="723.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.7" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1185.7" y="707.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.7" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1185.7" y="691.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.7" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1185.7" y="675.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.7" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1185.7" y="659.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.7" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1185.7" y="643.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.7" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1185.7" y="627.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.7" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1185.7" y="611.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.7" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1185.7" y="595.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.7" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1185.7" y="579.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.7" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1185.7" y="563.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.7" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1185.7" y="547.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.7" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1185.7" y="531.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.7" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1185.7" y="515.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.7" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1185.7" y="499.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.7" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1185.7" y="483.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.7" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1185.7" y="467.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.7" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1185.7" y="451.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.7" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1185.7" y="435.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.7" y="446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1185.7" y="419.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.7" y="430.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1185.7" y="403.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.7" y="414.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1185.7" y="387.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.7" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1185.7" y="371.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.7" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1185.7" y="355.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.7" y="366.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1185.7" y="339.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.7" y="350.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1185.7" y="323.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.7" y="334.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1185.7" y="307.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.7" y="318.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1185.7" y="291.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.7" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1185.7" y="275.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.7" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1185.7" y="259.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.7" y="270.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1185.7" y="243.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.7" y="254.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1185.7" y="227.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.7" y="238.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1185.7" y="211.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.7" y="222.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1185.7" y="195.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.7" y="206.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1185.7" y="179.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.7" y="190.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1185.7" y="163.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.7" y="174.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="1185.7" y="147.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.7" y="158.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="1185.7" y="131.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.7" y="142.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="1185.7" y="115.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.7" y="126.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1185.7" y="99.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.7" y="110.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1185.7" y="83.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.7" y="94.0"></text>
</g>
<g>
<title>G1BarrierSetC2::pre_barrier(GraphKit*, bool, Node*, Node*, Node*, unsigned int, Node*, TypeOopPtr const*, Node*, BasicType) const (1 samples, 0.06%)</title><rect x="1185.7" y="67.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.7" y="78.0"></text>
</g>
<g>
<title>IdealKit::store(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool) (1 samples, 0.06%)</title><rect x="1185.7" y="51.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.7" y="62.0"></text>
</g>
<g>
<title>IdealKit::delay_transform(Node*) (1 samples, 0.06%)</title><rect x="1185.7" y="35.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.7" y="46.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1186.4" y="899.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.4" y="910.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1186.4" y="883.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.4" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1186.4" y="867.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.4" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1186.4" y="851.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.4" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1186.4" y="835.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.4" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1186.4" y="819.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.4" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1186.4" y="803.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.4" y="814.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1186.4" y="787.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.4" y="798.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1186.4" y="771.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.4" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1186.4" y="755.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.4" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1186.4" y="739.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.4" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1186.4" y="723.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.4" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1186.4" y="707.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.4" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1186.4" y="691.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.4" y="702.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1186.4" y="675.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.4" y="686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1186.4" y="659.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.4" y="670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1186.4" y="643.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.4" y="654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1186.4" y="627.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.4" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1186.4" y="611.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.4" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1186.4" y="595.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.4" y="606.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1186.4" y="579.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.4" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1186.4" y="563.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.4" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1186.4" y="547.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.4" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1186.4" y="531.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.4" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1186.4" y="515.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.4" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1186.4" y="499.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.4" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1186.4" y="483.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.4" y="494.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1186.4" y="467.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.4" y="478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1186.4" y="451.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.4" y="462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1186.4" y="435.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.4" y="446.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1186.4" y="419.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.4" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1186.4" y="403.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.4" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1186.4" y="387.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.4" y="398.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1186.4" y="371.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.4" y="382.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1186.4" y="355.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.4" y="366.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1186.4" y="339.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.4" y="350.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1186.4" y="323.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.4" y="334.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1186.4" y="307.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.4" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1186.4" y="291.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.4" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1186.4" y="275.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.4" y="286.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1186.4" y="259.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.4" y="270.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1186.4" y="243.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.4" y="254.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1186.4" y="227.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.4" y="238.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1186.4" y="211.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.4" y="222.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1186.4" y="195.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.4" y="206.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1186.4" y="179.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.4" y="190.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1186.4" y="163.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.4" y="174.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1186.4" y="147.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.4" y="158.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1186.4" y="131.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.4" y="142.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="1186.4" y="115.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.4" y="126.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="1186.4" y="99.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.4" y="110.0"></text>
</g>
<g>
<title>ciKlass::is_subclass_of(ciKlass*) (1 samples, 0.06%)</title><rect x="1186.4" y="83.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.4" y="94.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="1187.1" y="1347.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.1" y="1358.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="1187.1" y="1331.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.1" y="1342.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="1187.1" y="1315.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.1" y="1326.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1187.1" y="1299.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.1" y="1310.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1187.1" y="1283.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.1" y="1294.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.06%)</title><rect x="1187.1" y="1267.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.1" y="1278.0"></text>
</g>
<g>
<title>GraphKit::insert_mem_bar(int, Node*) (1 samples, 0.06%)</title><rect x="1187.1" y="1251.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.1" y="1262.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="1187.1" y="1235.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.1" y="1246.0"></text>
</g>
<g>
<title>MergeMemNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1187.1" y="1219.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.1" y="1230.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.06%)</title><rect x="1187.8" y="1875.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.8" y="1886.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (1 samples, 0.06%)</title><rect x="1188.6" y="1939.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.6" y="1950.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (1 samples, 0.06%)</title><rect x="1188.6" y="1923.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.6" y="1934.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (1 samples, 0.06%)</title><rect x="1188.6" y="1907.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.6" y="1918.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (1 samples, 0.06%)</title><rect x="1188.6" y="1891.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.6" y="1902.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (1 samples, 0.06%)</title><rect x="1188.6" y="1875.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.6" y="1886.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.06%)</title><rect x="1189.3" y="1955.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.3" y="1966.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.06%)</title><rect x="1189.3" y="1939.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.3" y="1950.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.06%)</title><rect x="1189.3" y="1923.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.3" y="1934.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.06%)</title><rect x="1189.3" y="1907.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.3" y="1918.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.06%)</title><rect x="1189.3" y="1891.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1192.3" y="1902.0"></text>
</g>
</g>
</svg>
