<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="965"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="965"> </text>
<g id="frames">
<g>
<title>all (924 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="13.0" y="942.0">all</text>
</g>
<g>
<title>[unknown] (1 samples, 0.11%)</title><rect x="10.0" y="915.0" width="1.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.11%)</title><rect x="10.0" y="899.0" width="1.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.11%)</title><rect x="10.0" y="883.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.11%)</title><rect x="10.0" y="867.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.11%)</title><rect x="10.0" y="851.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (902 samples, 97.62%)</title><rect x="11.3" y="915.0" width="1151.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="14.3" y="926.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2 samples, 0.22%)</title><rect x="11.3" y="899.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.3" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (154 samples, 16.67%)</title><rect x="13.8" y="899.0" width="196.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="16.8" y="910.0">one/nio/net/NativeSelector..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (154 samples, 16.67%)</title><rect x="13.8" y="883.0" width="196.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="16.8" y="894.0">one/nio/net/NativeSelector..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.30.so (4 samples, 0.43%)</title><rect x="18.9" y="867.0" width="5.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="21.9" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.32%)</title><rect x="24.0" y="867.0" width="3.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="27.0" y="878.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.32%)</title><rect x="27.9" y="867.0" width="3.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="30.9" y="878.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.11%)</title><rect x="30.4" y="851.0" width="1.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="33.4" y="862.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.11%)</title><rect x="30.4" y="835.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="33.4" y="846.0"></text>
</g>
<g>
<title>epoll_wait (140 samples, 15.15%)</title><rect x="31.7" y="867.0" width="178.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="34.7" y="878.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (133 samples, 14.39%)</title><rect x="39.4" y="851.0" width="169.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="42.4" y="862.0">entry_SYSCALL_64_after..</text>
</g>
<g>
<title>do_syscall_64 (133 samples, 14.39%)</title><rect x="39.4" y="835.0" width="169.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="42.4" y="846.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_epoll_wait (133 samples, 14.39%)</title><rect x="39.4" y="819.0" width="169.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="42.4" y="830.0">__x64_sys_epoll_wait</text>
</g>
<g>
<title>do_epoll_wait (133 samples, 14.39%)</title><rect x="39.4" y="803.0" width="169.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="42.4" y="814.0">do_epoll_wait</text>
</g>
<g>
<title>__fdget (5 samples, 0.54%)</title><rect x="39.4" y="787.0" width="6.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="42.4" y="798.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.54%)</title><rect x="39.4" y="771.0" width="6.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="42.4" y="782.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.54%)</title><rect x="39.4" y="755.0" width="6.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="42.4" y="766.0"></text>
</g>
<g>
<title>ep_poll (124 samples, 13.42%)</title><rect x="45.8" y="787.0" width="158.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="48.8" y="798.0">ep_poll</text>
</g>
<g>
<title>_raw_write_lock_irq (1 samples, 0.11%)</title><rect x="63.6" y="771.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="66.6" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (30 samples, 3.25%)</title><rect x="64.9" y="771.0" width="38.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="67.9" y="782.0">ep_..</text>
</g>
<g>
<title>ep_send_events_proc (22 samples, 2.38%)</title><rect x="71.3" y="755.0" width="28.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="74.3" y="766.0">ep..</text>
</g>
<g>
<title>ep_item_poll.isra.0 (15 samples, 1.62%)</title><rect x="76.4" y="739.0" width="19.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="79.4" y="750.0"></text>
</g>
<g>
<title>sock_poll (9 samples, 0.97%)</title><rect x="82.8" y="723.0" width="11.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="85.8" y="734.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.22%)</title><rect x="87.9" y="707.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="90.9" y="718.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.32%)</title><rect x="90.5" y="707.0" width="3.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="93.5" y="718.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.11%)</title><rect x="94.3" y="723.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="97.3" y="734.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.32%)</title><rect x="95.6" y="739.0" width="3.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="98.6" y="750.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.32%)</title><rect x="99.4" y="755.0" width="3.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="102.4" y="766.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.22%)</title><rect x="100.7" y="739.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="103.7" y="750.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.22%)</title><rect x="103.2" y="771.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="106.2" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (75 samples, 8.12%)</title><rect x="105.8" y="771.0" width="95.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="108.8" y="782.0">schedule_hr..</text>
</g>
<g>
<title>schedule (8 samples, 0.87%)</title><rect x="105.8" y="755.0" width="10.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="108.8" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (67 samples, 7.25%)</title><rect x="116.0" y="755.0" width="85.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="119.0" y="766.0">schedule_h..</text>
</g>
<g>
<title>__sched_text_start (9 samples, 0.97%)</title><rect x="117.3" y="739.0" width="11.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="120.3" y="750.0"></text>
</g>
<g>
<title>schedule (57 samples, 6.17%)</title><rect x="128.8" y="739.0" width="72.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="131.8" y="750.0">schedule</text>
</g>
<g>
<title>__sched_text_start (56 samples, 6.06%)</title><rect x="130.0" y="723.0" width="71.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="133.0" y="734.0">__sched_..</text>
</g>
<g>
<title>finish_task_switch (45 samples, 4.87%)</title><rect x="144.1" y="707.0" width="57.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="147.1" y="718.0">finish..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.22%)</title><rect x="201.6" y="771.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="204.6" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (4 samples, 0.43%)</title><rect x="204.1" y="787.0" width="5.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="207.1" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.11%)</title><rect x="209.2" y="851.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="212.2" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="209.2" y="835.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="212.2" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.11%)</title><rect x="209.2" y="819.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="212.2" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (746 samples, 80.74%)</title><rect x="210.5" y="899.0" width="952.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="213.5" y="910.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (746 samples, 80.74%)</title><rect x="210.5" y="883.0" width="952.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="213.5" y="894.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (676 samples, 73.16%)</title><rect x="210.5" y="867.0" width="863.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="213.5" y="878.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (671 samples, 72.62%)</title><rect x="210.5" y="851.0" width="856.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="213.5" y="862.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (670 samples, 72.51%)</title><rect x="211.8" y="835.0" width="855.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="214.8" y="846.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (667 samples, 72.19%)</title><rect x="211.8" y="819.0" width="851.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="214.8" y="830.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (248 samples, 26.84%)</title><rect x="211.8" y="803.0" width="316.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="214.8" y="814.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.11%)</title><rect x="211.8" y="787.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="214.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.11%)</title><rect x="211.8" y="771.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="214.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.11%)</title><rect x="211.8" y="755.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="214.8" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (247 samples, 26.73%)</title><rect x="213.1" y="787.0" width="315.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="216.1" y="798.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.43%)</title><rect x="213.1" y="771.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="216.1" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.11%)</title><rect x="216.9" y="755.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="219.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.11%)</title><rect x="216.9" y="739.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="219.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.11%)</title><rect x="216.9" y="723.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="219.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (243 samples, 26.30%)</title><rect x="218.2" y="771.0" width="310.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="221.2" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (243 samples, 26.30%)</title><rect x="218.2" y="755.0" width="310.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="221.2" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (242 samples, 26.19%)</title><rect x="219.4" y="739.0" width="309.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="222.4" y="750.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (242 samples, 26.19%)</title><rect x="219.4" y="723.0" width="309.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="222.4" y="734.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.22%)</title><rect x="219.4" y="707.0" width="2.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="222.4" y="718.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.11%)</title><rect x="222.0" y="707.0" width="1.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="225.0" y="718.0"></text>
</g>
<g>
<title>__send (239 samples, 25.87%)</title><rect x="223.3" y="707.0" width="305.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="226.3" y="718.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (238 samples, 25.76%)</title><rect x="224.5" y="691.0" width="304.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="227.5" y="702.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (238 samples, 25.76%)</title><rect x="224.5" y="675.0" width="304.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="227.5" y="686.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (213 samples, 23.05%)</title><rect x="224.5" y="659.0" width="272.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="227.5" y="670.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (213 samples, 23.05%)</title><rect x="224.5" y="643.0" width="272.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="227.5" y="654.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (213 samples, 23.05%)</title><rect x="224.5" y="627.0" width="272.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="227.5" y="638.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (210 samples, 22.73%)</title><rect x="225.8" y="611.0" width="268.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="228.8" y="622.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (210 samples, 22.73%)</title><rect x="225.8" y="595.0" width="268.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="228.8" y="606.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg_locked (210 samples, 22.73%)</title><rect x="225.8" y="579.0" width="268.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="228.8" y="590.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.11%)</title><rect x="225.8" y="563.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="228.8" y="574.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.11%)</title><rect x="225.8" y="547.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="228.8" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.22%)</title><rect x="227.1" y="563.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="230.1" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.11%)</title><rect x="227.1" y="547.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="230.1" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.11%)</title><rect x="227.1" y="531.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="230.1" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.11%)</title><rect x="227.1" y="515.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="230.1" y="526.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.11%)</title><rect x="228.4" y="547.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="231.4" y="558.0"></text>
</g>
<g>
<title>tcp_push (206 samples, 22.29%)</title><rect x="229.7" y="563.0" width="263.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="232.7" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (206 samples, 22.29%)</title><rect x="229.7" y="547.0" width="263.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="232.7" y="558.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (206 samples, 22.29%)</title><rect x="229.7" y="531.0" width="263.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="232.7" y="542.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (203 samples, 21.97%)</title><rect x="230.9" y="515.0" width="259.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="233.9" y="526.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.11%)</title><rect x="232.2" y="499.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="235.2" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (201 samples, 21.75%)</title><rect x="233.5" y="499.0" width="256.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="236.5" y="510.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (201 samples, 21.75%)</title><rect x="233.5" y="483.0" width="256.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="236.5" y="494.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (201 samples, 21.75%)</title><rect x="233.5" y="467.0" width="256.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="236.5" y="478.0">ip_local_out</text>
</g>
<g>
<title>ip_output (201 samples, 21.75%)</title><rect x="233.5" y="451.0" width="256.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="236.5" y="462.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (201 samples, 21.75%)</title><rect x="233.5" y="435.0" width="256.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="236.5" y="446.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.11%)</title><rect x="233.5" y="419.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="236.5" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (200 samples, 21.65%)</title><rect x="234.8" y="419.0" width="255.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="237.8" y="430.0">__ip_finish_output</text>
</g>
<g>
<title>ip_finish_output2 (200 samples, 21.65%)</title><rect x="234.8" y="403.0" width="255.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="237.8" y="414.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (198 samples, 21.43%)</title><rect x="234.8" y="387.0" width="252.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="237.8" y="398.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.0 (198 samples, 21.43%)</title><rect x="234.8" y="371.0" width="252.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="237.8" y="382.0">do_softirq.part.0</text>
</g>
<g>
<title>do_softirq_own_stack (198 samples, 21.43%)</title><rect x="234.8" y="355.0" width="252.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="237.8" y="366.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (197 samples, 21.32%)</title><rect x="234.8" y="339.0" width="251.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="237.8" y="350.0">__softirqentry_text_start</text>
</g>
<g>
<title>net_rx_action (196 samples, 21.21%)</title><rect x="234.8" y="323.0" width="250.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="237.8" y="334.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (196 samples, 21.21%)</title><rect x="234.8" y="307.0" width="250.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="237.8" y="318.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (196 samples, 21.21%)</title><rect x="234.8" y="291.0" width="250.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="237.8" y="302.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_one_core (196 samples, 21.21%)</title><rect x="234.8" y="275.0" width="250.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="237.8" y="286.0">__netif_receive_skb_one_core</text>
</g>
<g>
<title>ip_rcv (196 samples, 21.21%)</title><rect x="234.8" y="259.0" width="250.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="237.8" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (196 samples, 21.21%)</title><rect x="234.8" y="243.0" width="250.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="237.8" y="254.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (195 samples, 21.10%)</title><rect x="234.8" y="227.0" width="249.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="237.8" y="238.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (195 samples, 21.10%)</title><rect x="234.8" y="211.0" width="249.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="237.8" y="222.0">ip_local_deliver_finish</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (195 samples, 21.10%)</title><rect x="234.8" y="195.0" width="249.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="237.8" y="206.0">ip_protocol_deliver_rcu</text>
</g>
<g>
<title>tcp_v4_rcv (195 samples, 21.10%)</title><rect x="234.8" y="179.0" width="249.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="237.8" y="190.0">tcp_v4_rcv</text>
</g>
<g>
<title>tcp_v4_do_rcv (195 samples, 21.10%)</title><rect x="234.8" y="163.0" width="249.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="237.8" y="174.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_rcv_established (195 samples, 21.10%)</title><rect x="234.8" y="147.0" width="249.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="237.8" y="158.0">tcp_rcv_established</text>
</g>
<g>
<title>tcp_ack (2 samples, 0.22%)</title><rect x="234.8" y="131.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="237.8" y="142.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.11%)</title><rect x="234.8" y="115.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="237.8" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.11%)</title><rect x="236.0" y="115.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="239.0" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.11%)</title><rect x="236.0" y="99.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="239.0" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.11%)</title><rect x="236.0" y="83.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="239.0" y="94.0"></text>
</g>
<g>
<title>tcp_data_ready (192 samples, 20.78%)</title><rect x="237.3" y="131.0" width="245.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="240.3" y="142.0">tcp_data_ready</text>
</g>
<g>
<title>sock_def_readable (192 samples, 20.78%)</title><rect x="237.3" y="115.0" width="245.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="240.3" y="126.0">sock_def_readable</text>
</g>
<g>
<title>__wake_up_sync_key (192 samples, 20.78%)</title><rect x="237.3" y="99.0" width="245.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="240.3" y="110.0">__wake_up_sync_key</text>
</g>
<g>
<title>__wake_up_common_lock (192 samples, 20.78%)</title><rect x="237.3" y="83.0" width="245.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="240.3" y="94.0">__wake_up_common_lock</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (192 samples, 20.78%)</title><rect x="237.3" y="67.0" width="245.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="240.3" y="78.0">_raw_spin_unlock_irqrestore</text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.11%)</title><rect x="482.5" y="131.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="485.5" y="142.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.11%)</title><rect x="482.5" y="115.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="485.5" y="126.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.11%)</title><rect x="483.8" y="227.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="486.8" y="238.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.11%)</title><rect x="485.1" y="323.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="488.1" y="334.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.11%)</title><rect x="486.3" y="339.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="489.3" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.22%)</title><rect x="487.6" y="387.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="490.6" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.22%)</title><rect x="487.6" y="371.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="490.6" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.22%)</title><rect x="487.6" y="355.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="490.6" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.11%)</title><rect x="488.9" y="339.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="491.9" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.11%)</title><rect x="488.9" y="323.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="491.9" y="334.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.11%)</title><rect x="490.2" y="515.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="493.2" y="526.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.11%)</title><rect x="490.2" y="499.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="493.2" y="510.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.11%)</title><rect x="491.5" y="515.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="494.5" y="526.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.11%)</title><rect x="492.7" y="563.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="495.7" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.22%)</title><rect x="494.0" y="611.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="497.0" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.22%)</title><rect x="494.0" y="595.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="497.0" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.22%)</title><rect x="494.0" y="579.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="497.0" y="590.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (2 samples, 0.22%)</title><rect x="494.0" y="563.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="497.0" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (25 samples, 2.71%)</title><rect x="496.6" y="659.0" width="31.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="499.6" y="670.0">ex..</text>
</g>
<g>
<title>schedule (25 samples, 2.71%)</title><rect x="496.6" y="643.0" width="31.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="499.6" y="654.0">sc..</text>
</g>
<g>
<title>__sched_text_start (25 samples, 2.71%)</title><rect x="496.6" y="627.0" width="31.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="499.6" y="638.0">__..</text>
</g>
<g>
<title>finish_task_switch (25 samples, 2.71%)</title><rect x="496.6" y="611.0" width="31.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="499.6" y="622.0">fi..</text>
</g>
<g>
<title>call_function_single_interrupt (1 samples, 0.11%)</title><rect x="527.2" y="595.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="530.2" y="606.0"></text>
</g>
<g>
<title>smp_call_function_single_interrupt (1 samples, 0.11%)</title><rect x="527.2" y="579.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="530.2" y="590.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.11%)</title><rect x="527.2" y="563.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="530.2" y="574.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.11%)</title><rect x="527.2" y="547.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="530.2" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.11%)</title><rect x="528.5" y="803.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="531.5" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.11%)</title><rect x="528.5" y="787.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="531.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.11%)</title><rect x="528.5" y="771.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="531.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.11%)</title><rect x="528.5" y="755.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="531.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.11%)</title><rect x="528.5" y="739.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="531.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/art241111/MyHttpServer.entity (418 samples, 45.24%)</title><rect x="529.8" y="803.0" width="533.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="532.8" y="814.0">ru/mail/polis/service/art241111/MyHttpServer.entity</text>
</g>
<g>
<title>ru/mail/polis/service/art241111/handlers/EntityHandlers.setGetHandler (418 samples, 45.24%)</title><rect x="529.8" y="787.0" width="533.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="532.8" y="798.0">ru/mail/polis/service/art241111/handlers/EntityHandlers.setGetHandler</text>
</g>
<g>
<title>OptoRuntime::handle_exception_C(JavaThread*) (1 samples, 0.11%)</title><rect x="529.8" y="771.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="532.8" y="782.0"></text>
</g>
<g>
<title>CompiledMethod::handler_for_exception_and_pc(Handle, unsigned char*) (1 samples, 0.11%)</title><rect x="529.8" y="755.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="532.8" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.11%)</title><rect x="531.0" y="771.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="534.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (416 samples, 45.02%)</title><rect x="532.3" y="771.0" width="531.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="535.3" y="782.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (29 samples, 3.14%)</title><rect x="534.9" y="755.0" width="37.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="537.9" y="766.0">com..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (28 samples, 3.03%)</title><rect x="536.1" y="739.0" width="35.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="539.1" y="750.0">com..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (28 samples, 3.03%)</title><rect x="536.1" y="723.0" width="35.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="539.1" y="734.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (28 samples, 3.03%)</title><rect x="536.1" y="707.0" width="35.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="539.1" y="718.0">com..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.endOfData (1 samples, 0.11%)</title><rect x="537.4" y="691.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="540.4" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.11%)</title><rect x="537.4" y="675.0" width="1.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="540.4" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.11%)</title><rect x="537.4" y="659.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="540.4" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.11%)</title><rect x="537.4" y="643.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="540.4" y="654.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.11%)</title><rect x="537.4" y="627.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="540.4" y="638.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.11%)</title><rect x="537.4" y="611.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="540.4" y="622.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.11%)</title><rect x="537.4" y="595.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="540.4" y="606.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.11%)</title><rect x="537.4" y="579.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="540.4" y="590.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.11%)</title><rect x="537.4" y="563.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="540.4" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.11%)</title><rect x="537.4" y="547.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="540.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (26 samples, 2.81%)</title><rect x="538.7" y="691.0" width="33.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="541.7" y="702.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (25 samples, 2.71%)</title><rect x="538.7" y="675.0" width="31.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="541.7" y="686.0">co..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (25 samples, 2.71%)</title><rect x="538.7" y="659.0" width="31.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="541.7" y="670.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (25 samples, 2.71%)</title><rect x="538.7" y="643.0" width="31.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="541.7" y="654.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (25 samples, 2.71%)</title><rect x="538.7" y="627.0" width="31.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="541.7" y="638.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (25 samples, 2.71%)</title><rect x="538.7" y="611.0" width="31.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="541.7" y="622.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (25 samples, 2.71%)</title><rect x="538.7" y="595.0" width="31.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="541.7" y="606.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (25 samples, 2.71%)</title><rect x="538.7" y="579.0" width="31.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="541.7" y="590.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (25 samples, 2.71%)</title><rect x="538.7" y="563.0" width="31.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="541.7" y="574.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable$1.next (25 samples, 2.71%)</title><rect x="538.7" y="547.0" width="31.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="541.7" y="558.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable$1.next (25 samples, 2.71%)</title><rect x="538.7" y="531.0" width="31.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="541.7" y="542.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getCell (25 samples, 2.71%)</title><rect x="538.7" y="515.0" width="31.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="541.7" y="526.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getOffset (9 samples, 0.97%)</title><rect x="538.7" y="499.0" width="11.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="541.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.readOffset (9 samples, 0.97%)</title><rect x="538.7" y="483.0" width="11.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="541.7" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (9 samples, 0.97%)</title><rect x="538.7" y="467.0" width="11.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="541.7" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (9 samples, 0.97%)</title><rect x="538.7" y="451.0" width="11.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="541.7" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (9 samples, 0.97%)</title><rect x="538.7" y="435.0" width="11.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="541.7" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.11%)</title><rect x="538.7" y="419.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="541.7" y="430.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.11%)</title><rect x="538.7" y="403.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="541.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.11%)</title><rect x="538.7" y="387.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="541.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.11%)</title><rect x="538.7" y="371.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="541.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.11%)</title><rect x="538.7" y="355.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="541.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (1 samples, 0.11%)</title><rect x="538.7" y="339.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="541.7" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (8 samples, 0.87%)</title><rect x="540.0" y="419.0" width="10.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="543.0" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (8 samples, 0.87%)</title><rect x="540.0" y="403.0" width="10.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="543.0" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (8 samples, 0.87%)</title><rect x="540.0" y="387.0" width="10.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="543.0" y="398.0"></text>
</g>
<g>
<title>__pread (8 samples, 0.87%)</title><rect x="540.0" y="371.0" width="10.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="543.0" y="382.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.43%)</title><rect x="545.1" y="355.0" width="5.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="548.1" y="366.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.43%)</title><rect x="545.1" y="339.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="548.1" y="350.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.43%)</title><rect x="545.1" y="323.0" width="5.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="548.1" y="334.0"></text>
</g>
<g>
<title>ksys_pread64 (4 samples, 0.43%)</title><rect x="545.1" y="307.0" width="5.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="548.1" y="318.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.43%)</title><rect x="545.1" y="291.0" width="5.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="548.1" y="302.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.32%)</title><rect x="545.1" y="275.0" width="3.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="548.1" y="286.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.32%)</title><rect x="545.1" y="259.0" width="3.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="548.1" y="270.0"></text>
</g>
<g>
<title>ext4_file_read_iter (3 samples, 0.32%)</title><rect x="545.1" y="243.0" width="3.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="548.1" y="254.0"></text>
</g>
<g>
<title>generic_file_read_iter (3 samples, 0.32%)</title><rect x="545.1" y="227.0" width="3.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="548.1" y="238.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.11%)</title><rect x="545.1" y="211.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="548.1" y="222.0"></text>
</g>
<g>
<title>generic_file_buffered_read (2 samples, 0.22%)</title><rect x="546.4" y="211.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="549.4" y="222.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.11%)</title><rect x="547.6" y="195.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="550.6" y="206.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.11%)</title><rect x="548.9" y="275.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="551.9" y="286.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.11%)</title><rect x="548.9" y="259.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="551.9" y="270.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.11%)</title><rect x="548.9" y="243.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="551.9" y="254.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.11%)</title><rect x="548.9" y="227.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="551.9" y="238.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.11%)</title><rect x="548.9" y="211.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="551.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.readOffset (16 samples, 1.73%)</title><rect x="550.2" y="499.0" width="20.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="553.2" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (16 samples, 1.73%)</title><rect x="550.2" y="483.0" width="20.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="553.2" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (16 samples, 1.73%)</title><rect x="550.2" y="467.0" width="20.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="553.2" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.11%)</title><rect x="550.2" y="451.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="553.2" y="462.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.11%)</title><rect x="550.2" y="435.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="553.2" y="446.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.11%)</title><rect x="550.2" y="419.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="553.2" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (14 samples, 1.52%)</title><rect x="551.5" y="451.0" width="17.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="554.5" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (13 samples, 1.41%)</title><rect x="552.7" y="435.0" width="16.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="555.7" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (13 samples, 1.41%)</title><rect x="552.7" y="419.0" width="16.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="555.7" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (13 samples, 1.41%)</title><rect x="552.7" y="403.0" width="16.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="555.7" y="414.0"></text>
</g>
<g>
<title>__pread (13 samples, 1.41%)</title><rect x="552.7" y="387.0" width="16.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="555.7" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 1.08%)</title><rect x="556.6" y="371.0" width="12.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="559.6" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 1.08%)</title><rect x="556.6" y="355.0" width="12.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="559.6" y="366.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (7 samples, 0.76%)</title><rect x="560.4" y="339.0" width="9.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="563.4" y="350.0"></text>
</g>
<g>
<title>ksys_pread64 (7 samples, 0.76%)</title><rect x="560.4" y="323.0" width="9.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="563.4" y="334.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.11%)</title><rect x="560.4" y="307.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="563.4" y="318.0"></text>
</g>
<g>
<title>vfs_read (6 samples, 0.65%)</title><rect x="561.7" y="307.0" width="7.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="564.7" y="318.0"></text>
</g>
<g>
<title>__vfs_read (4 samples, 0.43%)</title><rect x="561.7" y="291.0" width="5.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="564.7" y="302.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.32%)</title><rect x="563.0" y="275.0" width="3.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="566.0" y="286.0"></text>
</g>
<g>
<title>ext4_file_read_iter (3 samples, 0.32%)</title><rect x="563.0" y="259.0" width="3.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="566.0" y="270.0"></text>
</g>
<g>
<title>generic_file_buffered_read (1 samples, 0.11%)</title><rect x="563.0" y="243.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="566.0" y="254.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.22%)</title><rect x="564.2" y="243.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="567.2" y="254.0"></text>
</g>
<g>
<title>generic_file_buffered_read (2 samples, 0.22%)</title><rect x="564.2" y="227.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="567.2" y="238.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.11%)</title><rect x="564.2" y="211.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="567.2" y="222.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.11%)</title><rect x="564.2" y="195.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="567.2" y="206.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.11%)</title><rect x="565.5" y="211.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="568.5" y="222.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.11%)</title><rect x="565.5" y="195.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="568.5" y="206.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.11%)</title><rect x="565.5" y="179.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="568.5" y="190.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.22%)</title><rect x="566.8" y="291.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="569.8" y="302.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.22%)</title><rect x="566.8" y="275.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="569.8" y="286.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.22%)</title><rect x="566.8" y="259.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="569.8" y="270.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.22%)</title><rect x="566.8" y="243.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="569.8" y="254.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.11%)</title><rect x="568.1" y="227.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="571.1" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.11%)</title><rect x="569.4" y="451.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="572.4" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.11%)</title><rect x="570.6" y="675.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="573.6" y="686.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.11%)</title><rect x="570.6" y="659.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="573.6" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.11%)</title><rect x="570.6" y="643.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="573.6" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.11%)</title><rect x="571.9" y="755.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="574.9" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (1 samples, 0.11%)</title><rect x="571.9" y="739.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="574.9" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.11%)</title><rect x="571.9" y="723.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="574.9" y="734.0"></text>
</g>
<g>
<title>java/lang/Enum.ordinal (1 samples, 0.11%)</title><rect x="571.9" y="707.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="574.9" y="718.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (19 samples, 2.06%)</title><rect x="573.2" y="755.0" width="24.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="576.2" y="766.0">j..</text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (19 samples, 2.06%)</title><rect x="573.2" y="739.0" width="24.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="576.2" y="750.0">j..</text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (19 samples, 2.06%)</title><rect x="573.2" y="723.0" width="24.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="576.2" y="734.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (19 samples, 2.06%)</title><rect x="573.2" y="707.0" width="24.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="576.2" y="718.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (18 samples, 1.95%)</title><rect x="574.5" y="691.0" width="22.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="577.5" y="702.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (17 samples, 1.84%)</title><rect x="575.7" y="675.0" width="21.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="578.7" y="686.0">j..</text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.11%)</title><rect x="575.7" y="659.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="578.7" y="670.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (15 samples, 1.62%)</title><rect x="577.0" y="659.0" width="19.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="580.0" y="670.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (14 samples, 1.52%)</title><rect x="577.0" y="643.0" width="17.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="580.0" y="654.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (14 samples, 1.52%)</title><rect x="577.0" y="627.0" width="17.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="580.0" y="638.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;574518ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 574518ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.11%)</title><rect x="577.0" y="611.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="580.0" y="622.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.11%)</title><rect x="578.3" y="611.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="581.3" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.11%)</title><rect x="579.6" y="611.0" width="1.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="582.6" y="622.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (11 samples, 1.19%)</title><rect x="580.8" y="611.0" width="14.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="583.8" y="622.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (3 samples, 0.32%)</title><rect x="587.2" y="595.0" width="3.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="590.2" y="606.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;2670710ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 2670710ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.11%)</title><rect x="587.2" y="579.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="590.2" y="590.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (1 samples, 0.11%)</title><rect x="588.5" y="579.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="591.5" y="590.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, Thread*) (1 samples, 0.11%)</title><rect x="588.5" y="563.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="591.5" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.11%)</title><rect x="588.5" y="547.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="591.5" y="558.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.11%)</title><rect x="588.5" y="531.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="591.5" y="542.0"></text>
</g>
<g>
<title>objArrayOopDesc::obj_at_put(int, oopDesc*) (1 samples, 0.11%)</title><rect x="589.8" y="579.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="592.8" y="590.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.11%)</title><rect x="591.1" y="595.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="594.1" y="606.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.22%)</title><rect x="592.3" y="595.0" width="2.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="595.3" y="606.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.11%)</title><rect x="592.3" y="579.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="595.3" y="590.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.11%)</title><rect x="593.6" y="579.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="596.6" y="590.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.11%)</title><rect x="594.9" y="643.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="597.9" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.11%)</title><rect x="596.2" y="659.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="599.2" y="670.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.30.so (1 samples, 0.11%)</title><rect x="596.2" y="643.0" width="1.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="599.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/TurboDAO.iterator (365 samples, 39.50%)</title><rect x="597.4" y="755.0" width="466.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="600.4" y="766.0">ru/mail/polis/dao/art241111/TurboDAO.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/TurboDAO.cellIterator (365 samples, 39.50%)</title><rect x="597.4" y="739.0" width="466.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="600.4" y="750.0">ru/mail/polis/dao/art241111/TurboDAO.cellIterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (26 samples, 2.81%)</title><rect x="597.4" y="723.0" width="33.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="600.4" y="734.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (26 samples, 2.81%)</title><rect x="597.4" y="707.0" width="33.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="600.4" y="718.0">co..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (26 samples, 2.81%)</title><rect x="597.4" y="691.0" width="33.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="600.4" y="702.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (26 samples, 2.81%)</title><rect x="597.4" y="675.0" width="33.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="600.4" y="686.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (26 samples, 2.81%)</title><rect x="597.4" y="659.0" width="33.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="600.4" y="670.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (26 samples, 2.81%)</title><rect x="597.4" y="643.0" width="33.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="600.4" y="654.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (26 samples, 2.81%)</title><rect x="597.4" y="627.0" width="33.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="600.4" y="638.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (26 samples, 2.81%)</title><rect x="597.4" y="611.0" width="33.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="600.4" y="622.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (26 samples, 2.81%)</title><rect x="597.4" y="595.0" width="33.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="600.4" y="606.0">co..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (5 samples, 0.54%)</title><rect x="597.4" y="579.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="600.4" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (3 samples, 0.32%)</title><rect x="597.4" y="563.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="600.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/TurboDAO$$Lambda$61/519214076.apply (3 samples, 0.32%)</title><rect x="597.4" y="547.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="600.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/TurboDAO.lambda$iterator$4 (3 samples, 0.32%)</title><rect x="597.4" y="531.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="600.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/Cell.getKey (3 samples, 0.32%)</title><rect x="597.4" y="515.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="600.4" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.32%)</title><rect x="597.4" y="499.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="600.4" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (2 samples, 0.22%)</title><rect x="601.3" y="563.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="604.3" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (2 samples, 0.22%)</title><rect x="601.3" y="547.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="604.3" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.nextEntry (2 samples, 0.22%)</title><rect x="601.3" y="531.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="604.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable$1.next (21 samples, 2.27%)</title><rect x="603.8" y="579.0" width="26.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="606.8" y="590.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable$1.next (21 samples, 2.27%)</title><rect x="603.8" y="563.0" width="26.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="606.8" y="574.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getCell (21 samples, 2.27%)</title><rect x="603.8" y="547.0" width="26.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="606.8" y="558.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getOffset (8 samples, 0.87%)</title><rect x="603.8" y="531.0" width="10.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="606.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.readOffset (8 samples, 0.87%)</title><rect x="603.8" y="515.0" width="10.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="606.8" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (8 samples, 0.87%)</title><rect x="603.8" y="499.0" width="10.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="606.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (8 samples, 0.87%)</title><rect x="603.8" y="483.0" width="10.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="606.8" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (8 samples, 0.87%)</title><rect x="603.8" y="467.0" width="10.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="606.8" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 0.76%)</title><rect x="605.1" y="451.0" width="8.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="608.1" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (7 samples, 0.76%)</title><rect x="605.1" y="435.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="608.1" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (7 samples, 0.76%)</title><rect x="605.1" y="419.0" width="8.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="608.1" y="430.0"></text>
</g>
<g>
<title>__pread (6 samples, 0.65%)</title><rect x="605.1" y="403.0" width="7.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="608.1" y="414.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.43%)</title><rect x="607.7" y="387.0" width="5.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="610.7" y="398.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.43%)</title><rect x="607.7" y="371.0" width="5.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="610.7" y="382.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.43%)</title><rect x="607.7" y="355.0" width="5.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="610.7" y="366.0"></text>
</g>
<g>
<title>ksys_pread64 (4 samples, 0.43%)</title><rect x="607.7" y="339.0" width="5.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="610.7" y="350.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.43%)</title><rect x="607.7" y="323.0" width="5.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="610.7" y="334.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.32%)</title><rect x="608.9" y="307.0" width="3.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="611.9" y="318.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.32%)</title><rect x="608.9" y="291.0" width="3.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="611.9" y="302.0"></text>
</g>
<g>
<title>ext4_file_read_iter (3 samples, 0.32%)</title><rect x="608.9" y="275.0" width="3.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="611.9" y="286.0"></text>
</g>
<g>
<title>generic_file_read_iter (3 samples, 0.32%)</title><rect x="608.9" y="259.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="611.9" y="270.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.11%)</title><rect x="608.9" y="243.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="611.9" y="254.0"></text>
</g>
<g>
<title>generic_file_buffered_read (2 samples, 0.22%)</title><rect x="610.2" y="243.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="613.2" y="254.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.11%)</title><rect x="611.5" y="227.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="614.5" y="238.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.11%)</title><rect x="612.8" y="403.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="615.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.readOffset (13 samples, 1.41%)</title><rect x="614.0" y="531.0" width="16.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="617.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (13 samples, 1.41%)</title><rect x="614.0" y="515.0" width="16.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="617.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (13 samples, 1.41%)</title><rect x="614.0" y="499.0" width="16.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="617.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.11%)</title><rect x="614.0" y="483.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="617.0" y="494.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.11%)</title><rect x="614.0" y="467.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="617.0" y="478.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.11%)</title><rect x="614.0" y="451.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="617.0" y="462.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.11%)</title><rect x="614.0" y="435.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="617.0" y="446.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.11%)</title><rect x="614.0" y="419.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="617.0" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (12 samples, 1.30%)</title><rect x="615.3" y="483.0" width="15.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="618.3" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.11%)</title><rect x="616.6" y="467.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="619.6" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.11%)</title><rect x="616.6" y="451.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="619.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.11%)</title><rect x="616.6" y="435.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="619.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.11%)</title><rect x="616.6" y="419.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="619.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.11%)</title><rect x="616.6" y="403.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="619.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (1 samples, 0.11%)</title><rect x="616.6" y="387.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="619.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkNativeAddress (1 samples, 0.11%)</title><rect x="616.6" y="371.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="619.6" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (10 samples, 1.08%)</title><rect x="617.9" y="467.0" width="12.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="620.9" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (10 samples, 1.08%)</title><rect x="617.9" y="451.0" width="12.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="620.9" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (10 samples, 1.08%)</title><rect x="617.9" y="435.0" width="12.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="620.9" y="446.0"></text>
</g>
<g>
<title>__pread (10 samples, 1.08%)</title><rect x="617.9" y="419.0" width="12.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="620.9" y="430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.54%)</title><rect x="624.3" y="403.0" width="6.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="627.3" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.54%)</title><rect x="624.3" y="387.0" width="6.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="627.3" y="398.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.43%)</title><rect x="625.5" y="371.0" width="5.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="628.5" y="382.0"></text>
</g>
<g>
<title>fput (1 samples, 0.11%)</title><rect x="625.5" y="355.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="628.5" y="366.0"></text>
</g>
<g>
<title>ksys_pread64 (3 samples, 0.32%)</title><rect x="626.8" y="355.0" width="3.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="629.8" y="366.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.32%)</title><rect x="626.8" y="339.0" width="3.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="629.8" y="350.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.22%)</title><rect x="626.8" y="323.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="629.8" y="334.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.22%)</title><rect x="626.8" y="307.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="629.8" y="318.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.22%)</title><rect x="626.8" y="291.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="629.8" y="302.0"></text>
</g>
<g>
<title>generic_file_read_iter (1 samples, 0.11%)</title><rect x="628.1" y="275.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="631.1" y="286.0"></text>
</g>
<g>
<title>generic_file_buffered_read (1 samples, 0.11%)</title><rect x="628.1" y="259.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="631.1" y="270.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.11%)</title><rect x="628.1" y="243.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="631.1" y="254.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.11%)</title><rect x="628.1" y="227.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="631.1" y="238.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.11%)</title><rect x="628.1" y="211.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="631.1" y="222.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.11%)</title><rect x="629.4" y="323.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="632.4" y="334.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.11%)</title><rect x="629.4" y="307.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="632.4" y="318.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.11%)</title><rect x="629.4" y="291.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="632.4" y="302.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.11%)</title><rect x="629.4" y="275.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="632.4" y="286.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.11%)</title><rect x="629.4" y="259.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="632.4" y="270.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (308 samples, 33.33%)</title><rect x="630.6" y="723.0" width="393.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="633.6" y="734.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/TurboDAO$$Lambda$58/200956092.accept (308 samples, 33.33%)</title><rect x="630.6" y="707.0" width="393.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="633.6" y="718.0">ru/mail/polis/dao/art241111/TurboDAO$$Lambda$58/200956..</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/TurboDAO.lambda$cellIterator$5 (308 samples, 33.33%)</title><rect x="630.6" y="691.0" width="393.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="633.6" y="702.0">ru/mail/polis/dao/art241111/TurboDAO.lambda$cellIterat..</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.iterator (308 samples, 33.33%)</title><rect x="630.6" y="675.0" width="393.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="633.6" y="686.0">ru/mail/polis/dao/art241111/SSTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable$1.&lt;init&gt; (308 samples, 33.33%)</title><rect x="630.6" y="659.0" width="393.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="633.6" y="670.0">ru/mail/polis/dao/art241111/SSTable$1.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getKeyPosition (308 samples, 33.33%)</title><rect x="630.6" y="643.0" width="393.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="633.6" y="654.0">ru/mail/polis/dao/art241111/SSTable.getKeyPosition</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.65%)</title><rect x="630.6" y="627.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="633.6" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.11%)</title><rect x="634.5" y="611.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="637.5" y="622.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.11%)</title><rect x="634.5" y="595.0" width="1.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="637.5" y="606.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.22%)</title><rect x="635.8" y="611.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="638.8" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.11%)</title><rect x="637.0" y="595.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="640.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getKey (302 samples, 32.68%)</title><rect x="638.3" y="627.0" width="385.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="641.3" y="638.0">ru/mail/polis/dao/art241111/SSTable.getKey</text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (1 samples, 0.11%)</title><rect x="638.3" y="611.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="641.3" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.rewind (1 samples, 0.11%)</title><rect x="638.3" y="595.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="641.3" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.11%)</title><rect x="638.3" y="579.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="641.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getOffset (107 samples, 11.58%)</title><rect x="639.6" y="611.0" width="136.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="642.6" y="622.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.readOffset (107 samples, 11.58%)</title><rect x="639.6" y="595.0" width="136.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="642.6" y="606.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.22%)</title><rect x="639.6" y="579.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="642.6" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.22%)</title><rect x="639.6" y="563.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="642.6" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.22%)</title><rect x="639.6" y="547.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="642.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (105 samples, 11.36%)</title><rect x="642.1" y="579.0" width="134.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="645.1" y="590.0">sun/nio/ch/FileCh..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (105 samples, 11.36%)</title><rect x="642.1" y="563.0" width="134.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="645.1" y="574.0">sun/nio/ch/FileCh..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.32%)</title><rect x="642.1" y="547.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.1" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.32%)</title><rect x="642.1" y="531.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="645.1" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.22%)</title><rect x="643.4" y="515.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="646.4" y="526.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.11%)</title><rect x="644.7" y="499.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="647.7" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.11%)</title><rect x="644.7" y="483.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="647.7" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.11%)</title><rect x="644.7" y="467.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="647.7" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (96 samples, 10.39%)</title><rect x="646.0" y="547.0" width="122.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="649.0" y="558.0">sun/nio/ch/IOUt..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.32%)</title><rect x="646.0" y="531.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="649.0" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.11%)</title><rect x="648.5" y="515.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="651.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.11%)</title><rect x="648.5" y="499.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="651.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.11%)</title><rect x="648.5" y="483.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="651.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkSize (1 samples, 0.11%)</title><rect x="648.5" y="467.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="651.5" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (90 samples, 9.74%)</title><rect x="649.8" y="531.0" width="114.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="652.8" y="542.0">sun/nio/ch/IOU..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (90 samples, 9.74%)</title><rect x="649.8" y="515.0" width="114.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="652.8" y="526.0">sun/nio/ch/Fil..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (90 samples, 9.74%)</title><rect x="649.8" y="499.0" width="114.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="652.8" y="510.0">sun/nio/ch/Fil..</text>
</g>
<g>
<title>__pread (87 samples, 9.42%)</title><rect x="653.6" y="483.0" width="111.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="656.6" y="494.0">__pread</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (70 samples, 7.58%)</title><rect x="675.3" y="467.0" width="89.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="678.3" y="478.0">entry_SYSC..</text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.22%)</title><rect x="675.3" y="451.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="678.3" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (68 samples, 7.36%)</title><rect x="677.9" y="451.0" width="86.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="680.9" y="462.0">do_syscall..</text>
</g>
<g>
<title>__x64_sys_pread64 (54 samples, 5.84%)</title><rect x="694.5" y="435.0" width="69.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="697.5" y="446.0">__x64_s..</text>
</g>
<g>
<title>fput (2 samples, 0.22%)</title><rect x="694.5" y="419.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="697.5" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (52 samples, 5.63%)</title><rect x="697.1" y="419.0" width="66.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="700.1" y="430.0">ksys_pr..</text>
</g>
<g>
<title>__fdget (3 samples, 0.32%)</title><rect x="698.3" y="403.0" width="3.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="701.3" y="414.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.32%)</title><rect x="698.3" y="387.0" width="3.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="701.3" y="398.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.32%)</title><rect x="698.3" y="371.0" width="3.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="701.3" y="382.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.32%)</title><rect x="702.2" y="403.0" width="3.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="705.2" y="414.0"></text>
</g>
<g>
<title>vfs_read (45 samples, 4.87%)</title><rect x="706.0" y="403.0" width="57.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="709.0" y="414.0">vfs_read</text>
</g>
<g>
<title>__vfs_read (26 samples, 2.81%)</title><rect x="707.3" y="387.0" width="33.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="710.3" y="398.0">__..</text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.11%)</title><rect x="707.3" y="371.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="710.3" y="382.0"></text>
</g>
<g>
<title>new_sync_read (25 samples, 2.71%)</title><rect x="708.5" y="371.0" width="32.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="711.5" y="382.0">ne..</text>
</g>
<g>
<title>ext4_file_read_iter (24 samples, 2.60%)</title><rect x="709.8" y="355.0" width="30.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="712.8" y="366.0">ex..</text>
</g>
<g>
<title>generic_file_read_iter (23 samples, 2.49%)</title><rect x="711.1" y="339.0" width="29.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="714.1" y="350.0">ge..</text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.11%)</title><rect x="711.1" y="323.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="714.1" y="334.0"></text>
</g>
<g>
<title>generic_file_buffered_read (22 samples, 2.38%)</title><rect x="712.4" y="323.0" width="28.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="715.4" y="334.0">ge..</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.11%)</title><rect x="714.9" y="307.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="717.9" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (7 samples, 0.76%)</title><rect x="716.2" y="307.0" width="9.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="719.2" y="318.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.43%)</title><rect x="720.0" y="291.0" width="5.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="723.0" y="302.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.11%)</title><rect x="725.2" y="307.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="728.2" y="318.0"></text>
</g>
<g>
<title>pagecache_get_page (7 samples, 0.76%)</title><rect x="726.4" y="307.0" width="9.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="729.4" y="318.0"></text>
</g>
<g>
<title>find_get_entry (6 samples, 0.65%)</title><rect x="727.7" y="291.0" width="7.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="730.7" y="302.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.22%)</title><rect x="730.3" y="275.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="733.3" y="286.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.22%)</title><rect x="732.8" y="275.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="735.8" y="286.0"></text>
</g>
<g>
<title>touch_atime (4 samples, 0.43%)</title><rect x="735.4" y="307.0" width="5.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="738.4" y="318.0"></text>
</g>
<g>
<title>atime_needs_update (3 samples, 0.32%)</title><rect x="736.6" y="291.0" width="3.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="739.6" y="302.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.22%)</title><rect x="737.9" y="275.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="740.9" y="286.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.22%)</title><rect x="737.9" y="259.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="740.9" y="270.0"></text>
</g>
<g>
<title>rw_verify_area (18 samples, 1.95%)</title><rect x="740.5" y="387.0" width="23.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="743.5" y="398.0">r..</text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.11%)</title><rect x="743.0" y="371.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="746.0" y="382.0"></text>
</g>
<g>
<title>security_file_permission (15 samples, 1.62%)</title><rect x="744.3" y="371.0" width="19.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="747.3" y="382.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.11%)</title><rect x="748.1" y="355.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="751.1" y="366.0"></text>
</g>
<g>
<title>apparmor_file_permission (8 samples, 0.87%)</title><rect x="749.4" y="355.0" width="10.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="752.4" y="366.0"></text>
</g>
<g>
<title>common_file_perm (8 samples, 0.87%)</title><rect x="749.4" y="339.0" width="10.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="752.4" y="350.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.22%)</title><rect x="753.2" y="323.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="756.2" y="334.0"></text>
</g>
<g>
<title>aa_label_is_subset (3 samples, 0.32%)</title><rect x="755.8" y="323.0" width="3.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="758.8" y="334.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.11%)</title><rect x="759.6" y="355.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="762.6" y="366.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.22%)</title><rect x="760.9" y="355.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="763.9" y="366.0"></text>
</g>
<g>
<title>ksys_pread64 (1 samples, 0.11%)</title><rect x="763.5" y="435.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="766.5" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.32%)</title><rect x="764.7" y="531.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="767.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (6 samples, 0.65%)</title><rect x="768.6" y="547.0" width="7.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="771.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.22%)</title><rect x="773.7" y="531.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="776.7" y="542.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (1 samples, 0.11%)</title><rect x="773.7" y="515.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="776.7" y="526.0"></text>
</g>
<g>
<title>pthread_self@GLIBC_2.2.5 (1 samples, 0.11%)</title><rect x="775.0" y="515.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="778.0" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.11%)</title><rect x="775.0" y="499.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="778.0" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="775.0" y="483.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="778.0" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.11%)</title><rect x="775.0" y="467.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="778.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.readOffset (194 samples, 21.00%)</title><rect x="776.2" y="611.0" width="247.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="779.2" y="622.0">ru/mail/polis/dao/art241111/SSTab..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.11%)</title><rect x="776.2" y="595.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="779.2" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.11%)</title><rect x="776.2" y="579.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="779.2" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (193 samples, 20.89%)</title><rect x="777.5" y="595.0" width="246.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="780.5" y="606.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (193 samples, 20.89%)</title><rect x="777.5" y="579.0" width="246.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="780.5" y="590.0">sun/nio/ch/FileChannelImpl.readIn..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (10 samples, 1.08%)</title><rect x="778.8" y="563.0" width="12.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="781.8" y="574.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (10 samples, 1.08%)</title><rect x="778.8" y="547.0" width="12.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="781.8" y="558.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.11%)</title><rect x="778.8" y="531.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="781.8" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (9 samples, 0.97%)</title><rect x="780.1" y="531.0" width="11.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="783.1" y="542.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (7 samples, 0.76%)</title><rect x="782.6" y="515.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="785.6" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (7 samples, 0.76%)</title><rect x="782.6" y="499.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="785.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.11%)</title><rect x="790.3" y="483.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="793.3" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.11%)</title><rect x="791.6" y="563.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="794.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (172 samples, 18.61%)</title><rect x="792.8" y="563.0" width="219.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="795.8" y="574.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (13 samples, 1.41%)</title><rect x="792.8" y="547.0" width="16.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="795.8" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.54%)</title><rect x="803.1" y="531.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="806.1" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (1 samples, 0.11%)</title><rect x="803.1" y="515.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="806.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (4 samples, 0.43%)</title><rect x="804.3" y="515.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="807.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (4 samples, 0.43%)</title><rect x="804.3" y="499.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="807.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (3 samples, 0.32%)</title><rect x="804.3" y="483.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="807.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (3 samples, 0.32%)</title><rect x="804.3" y="467.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="807.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkNativeAddress (1 samples, 0.11%)</title><rect x="805.6" y="451.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="808.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkOffset (1 samples, 0.11%)</title><rect x="806.9" y="451.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="809.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkSize (1 samples, 0.11%)</title><rect x="808.2" y="483.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="811.2" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (156 samples, 16.88%)</title><rect x="809.4" y="547.0" width="199.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="812.4" y="558.0">sun/nio/ch/IOUtil.readInto..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (155 samples, 16.77%)</title><rect x="810.7" y="531.0" width="198.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="813.7" y="542.0">sun/nio/ch/FileDispatcherI..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (155 samples, 16.77%)</title><rect x="810.7" y="515.0" width="198.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="813.7" y="526.0">sun/nio/ch/FileDispatcherI..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.11%)</title><rect x="814.5" y="499.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="817.5" y="510.0"></text>
</g>
<g>
<title>__pread (148 samples, 16.02%)</title><rect x="815.8" y="499.0" width="189.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="818.8" y="510.0">__pread</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (106 samples, 11.47%)</title><rect x="868.2" y="483.0" width="135.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="871.2" y="494.0">entry_SYSCALL_64_..</text>
</g>
<g>
<title>__x64_sys_pread64 (3 samples, 0.32%)</title><rect x="868.2" y="467.0" width="3.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="871.2" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (103 samples, 11.15%)</title><rect x="872.0" y="467.0" width="131.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="875.0" y="478.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (88 samples, 9.52%)</title><rect x="891.2" y="451.0" width="112.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="894.2" y="462.0">__x64_sys_prea..</text>
</g>
<g>
<title>ksys_pread64 (88 samples, 9.52%)</title><rect x="891.2" y="435.0" width="112.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="894.2" y="446.0">ksys_pread64</text>
</g>
<g>
<title>__fdget (2 samples, 0.22%)</title><rect x="896.3" y="419.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="899.3" y="430.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.22%)</title><rect x="896.3" y="403.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="899.3" y="414.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.22%)</title><rect x="896.3" y="387.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="899.3" y="398.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.32%)</title><rect x="898.8" y="419.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="901.8" y="430.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.11%)</title><rect x="902.7" y="419.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="905.7" y="430.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.11%)</title><rect x="903.9" y="419.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="906.9" y="430.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.22%)</title><rect x="905.2" y="419.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="908.2" y="430.0"></text>
</g>
<g>
<title>vfs_read (75 samples, 8.12%)</title><rect x="907.8" y="419.0" width="95.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="910.8" y="430.0">vfs_read</text>
</g>
<g>
<title>__vfs_read (52 samples, 5.63%)</title><rect x="912.9" y="403.0" width="66.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="915.9" y="414.0">__vfs_r..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.32%)</title><rect x="912.9" y="387.0" width="3.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="915.9" y="398.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.22%)</title><rect x="916.7" y="387.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="919.7" y="398.0"></text>
</g>
<g>
<title>new_sync_read (47 samples, 5.09%)</title><rect x="919.3" y="387.0" width="60.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="922.3" y="398.0">new_sy..</text>
</g>
<g>
<title>ext4_file_read_iter (45 samples, 4.87%)</title><rect x="920.5" y="371.0" width="57.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="923.5" y="382.0">ext4_f..</text>
</g>
<g>
<title>generic_file_buffered_read (1 samples, 0.11%)</title><rect x="923.1" y="355.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="926.1" y="366.0"></text>
</g>
<g>
<title>generic_file_read_iter (42 samples, 4.55%)</title><rect x="924.4" y="355.0" width="53.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="927.4" y="366.0">gener..</text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.11%)</title><rect x="925.6" y="339.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="928.6" y="350.0"></text>
</g>
<g>
<title>generic_file_buffered_read (38 samples, 4.11%)</title><rect x="926.9" y="339.0" width="48.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="929.9" y="350.0">gene..</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.11%)</title><rect x="932.0" y="323.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="935.0" y="334.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.11%)</title><rect x="933.3" y="323.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="936.3" y="334.0"></text>
</g>
<g>
<title>copy_page_to_iter (11 samples, 1.19%)</title><rect x="934.6" y="323.0" width="14.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="937.6" y="334.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.11%)</title><rect x="942.3" y="307.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="945.3" y="318.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.32%)</title><rect x="943.5" y="307.0" width="3.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="946.5" y="318.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.11%)</title><rect x="947.4" y="307.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="950.4" y="318.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.22%)</title><rect x="948.6" y="323.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="951.6" y="334.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.11%)</title><rect x="951.2" y="323.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="954.2" y="334.0"></text>
</g>
<g>
<title>pagecache_get_page (11 samples, 1.19%)</title><rect x="952.5" y="323.0" width="14.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="955.5" y="334.0"></text>
</g>
<g>
<title>find_get_entry (9 samples, 0.97%)</title><rect x="955.0" y="307.0" width="11.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="958.0" y="318.0"></text>
</g>
<g>
<title>xas_load (6 samples, 0.65%)</title><rect x="956.3" y="291.0" width="7.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="959.3" y="302.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.22%)</title><rect x="964.0" y="291.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="967.0" y="302.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.11%)</title><rect x="966.5" y="323.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="969.5" y="334.0"></text>
</g>
<g>
<title>touch_atime (6 samples, 0.65%)</title><rect x="967.8" y="323.0" width="7.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="970.8" y="334.0"></text>
</g>
<g>
<title>atime_needs_update (5 samples, 0.54%)</title><rect x="967.8" y="307.0" width="6.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="970.8" y="318.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.22%)</title><rect x="969.1" y="291.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="972.1" y="302.0"></text>
</g>
<g>
<title>timespec64_trunc (2 samples, 0.22%)</title><rect x="971.6" y="291.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="974.6" y="302.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.11%)</title><rect x="974.2" y="307.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="977.2" y="318.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.22%)</title><rect x="975.5" y="339.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="978.5" y="350.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.11%)</title><rect x="978.0" y="371.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="981.0" y="382.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.11%)</title><rect x="979.3" y="403.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="982.3" y="414.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.11%)</title><rect x="980.6" y="403.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="983.6" y="414.0"></text>
</g>
<g>
<title>rw_verify_area (17 samples, 1.84%)</title><rect x="981.8" y="403.0" width="21.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="984.8" y="414.0">r..</text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.22%)</title><rect x="983.1" y="387.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="986.1" y="398.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.22%)</title><rect x="985.7" y="387.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="988.7" y="398.0"></text>
</g>
<g>
<title>security_file_permission (12 samples, 1.30%)</title><rect x="988.2" y="387.0" width="15.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="991.2" y="398.0"></text>
</g>
<g>
<title>apparmor_file_permission (5 samples, 0.54%)</title><rect x="993.3" y="371.0" width="6.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="996.3" y="382.0"></text>
</g>
<g>
<title>common_file_perm (5 samples, 0.54%)</title><rect x="993.3" y="355.0" width="6.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="996.3" y="366.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.22%)</title><rect x="997.2" y="339.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1000.2" y="350.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.22%)</title><rect x="999.7" y="371.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1002.7" y="382.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.11%)</title><rect x="1002.3" y="371.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1005.3" y="382.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.11%)</title><rect x="1003.5" y="483.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1006.5" y="494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="1003.5" y="467.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1006.5" y="478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.11%)</title><rect x="1003.5" y="451.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1006.5" y="462.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.11%)</title><rect x="1004.8" y="499.0" width="1.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1007.8" y="510.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.11%)</title><rect x="1006.1" y="499.0" width="1.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1009.1" y="510.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.11%)</title><rect x="1007.4" y="499.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1010.4" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.32%)</title><rect x="1008.7" y="547.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1011.7" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.11%)</title><rect x="1011.2" y="531.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1014.2" y="542.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (1 samples, 0.11%)</title><rect x="1011.2" y="515.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1014.2" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (1 samples, 0.11%)</title><rect x="1011.2" y="499.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1014.2" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (9 samples, 0.97%)</title><rect x="1012.5" y="563.0" width="11.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1015.5" y="574.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.22%)</title><rect x="1016.3" y="547.0" width="2.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1019.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (4 samples, 0.43%)</title><rect x="1018.9" y="547.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1021.9" y="558.0"></text>
</g>
<g>
<title>pthread_self@GLIBC_2.2.5 (2 samples, 0.22%)</title><rect x="1021.4" y="531.0" width="2.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1024.4" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.11%)</title><rect x="1024.0" y="723.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1027.0" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (1 samples, 0.11%)</title><rect x="1024.0" y="707.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1027.0" y="718.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (1 samples, 0.11%)</title><rect x="1024.0" y="691.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1027.0" y="702.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.11%)</title><rect x="1024.0" y="675.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1027.0" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.22%)</title><rect x="1025.3" y="723.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1028.3" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.22%)</title><rect x="1025.3" y="707.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1028.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (22 samples, 2.38%)</title><rect x="1027.8" y="723.0" width="28.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1030.8" y="734.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (22 samples, 2.38%)</title><rect x="1027.8" y="707.0" width="28.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1030.8" y="718.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (22 samples, 2.38%)</title><rect x="1027.8" y="691.0" width="28.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1030.8" y="702.0">co..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (22 samples, 2.38%)</title><rect x="1027.8" y="675.0" width="28.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1030.8" y="686.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (22 samples, 2.38%)</title><rect x="1027.8" y="659.0" width="28.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1030.8" y="670.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (22 samples, 2.38%)</title><rect x="1027.8" y="643.0" width="28.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1030.8" y="654.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (22 samples, 2.38%)</title><rect x="1027.8" y="627.0" width="28.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1030.8" y="638.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (22 samples, 2.38%)</title><rect x="1027.8" y="611.0" width="28.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1030.8" y="622.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (22 samples, 2.38%)</title><rect x="1027.8" y="595.0" width="28.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1030.8" y="606.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (22 samples, 2.38%)</title><rect x="1027.8" y="579.0" width="28.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1030.8" y="590.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable$1.next (22 samples, 2.38%)</title><rect x="1027.8" y="563.0" width="28.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1030.8" y="574.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable$1.next (22 samples, 2.38%)</title><rect x="1027.8" y="547.0" width="28.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1030.8" y="558.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getCell (22 samples, 2.38%)</title><rect x="1027.8" y="531.0" width="28.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1030.8" y="542.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getOffset (8 samples, 0.87%)</title><rect x="1027.8" y="515.0" width="10.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1030.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.readOffset (8 samples, 0.87%)</title><rect x="1027.8" y="499.0" width="10.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1030.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (8 samples, 0.87%)</title><rect x="1027.8" y="483.0" width="10.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1030.8" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (8 samples, 0.87%)</title><rect x="1027.8" y="467.0" width="10.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1030.8" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (8 samples, 0.87%)</title><rect x="1027.8" y="451.0" width="10.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1030.8" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.11%)</title><rect x="1027.8" y="435.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1030.8" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 0.76%)</title><rect x="1029.1" y="435.0" width="8.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1032.1" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (7 samples, 0.76%)</title><rect x="1029.1" y="419.0" width="8.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1032.1" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (7 samples, 0.76%)</title><rect x="1029.1" y="403.0" width="8.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1032.1" y="414.0"></text>
</g>
<g>
<title>__pread (7 samples, 0.76%)</title><rect x="1029.1" y="387.0" width="8.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1032.1" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.54%)</title><rect x="1031.6" y="371.0" width="6.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1034.6" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.54%)</title><rect x="1031.6" y="355.0" width="6.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1034.6" y="366.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.43%)</title><rect x="1032.9" y="339.0" width="5.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1035.9" y="350.0"></text>
</g>
<g>
<title>ksys_pread64 (4 samples, 0.43%)</title><rect x="1032.9" y="323.0" width="5.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1035.9" y="334.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.43%)</title><rect x="1032.9" y="307.0" width="5.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1035.9" y="318.0"></text>
</g>
<g>
<title>__vfs_read (4 samples, 0.43%)</title><rect x="1032.9" y="291.0" width="5.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1035.9" y="302.0"></text>
</g>
<g>
<title>new_sync_read (4 samples, 0.43%)</title><rect x="1032.9" y="275.0" width="5.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1035.9" y="286.0"></text>
</g>
<g>
<title>ext4_file_read_iter (3 samples, 0.32%)</title><rect x="1034.2" y="259.0" width="3.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1037.2" y="270.0"></text>
</g>
<g>
<title>generic_file_read_iter (3 samples, 0.32%)</title><rect x="1034.2" y="243.0" width="3.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1037.2" y="254.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.11%)</title><rect x="1034.2" y="227.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1037.2" y="238.0"></text>
</g>
<g>
<title>generic_file_buffered_read (2 samples, 0.22%)</title><rect x="1035.5" y="227.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1038.5" y="238.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.11%)</title><rect x="1036.8" y="211.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1039.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.readOffset (14 samples, 1.52%)</title><rect x="1038.0" y="515.0" width="17.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1041.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (14 samples, 1.52%)</title><rect x="1038.0" y="499.0" width="17.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1041.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (14 samples, 1.52%)</title><rect x="1038.0" y="483.0" width="17.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1041.0" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (14 samples, 1.52%)</title><rect x="1038.0" y="467.0" width="17.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1041.0" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.11%)</title><rect x="1038.0" y="451.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1041.0" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.11%)</title><rect x="1038.0" y="435.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1041.0" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (13 samples, 1.41%)</title><rect x="1039.3" y="451.0" width="16.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1042.3" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (13 samples, 1.41%)</title><rect x="1039.3" y="435.0" width="16.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1042.3" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (13 samples, 1.41%)</title><rect x="1039.3" y="419.0" width="16.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1042.3" y="430.0"></text>
</g>
<g>
<title>__pread (10 samples, 1.08%)</title><rect x="1043.1" y="403.0" width="12.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1046.1" y="414.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.97%)</title><rect x="1044.4" y="387.0" width="11.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1047.4" y="398.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.97%)</title><rect x="1044.4" y="371.0" width="11.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1047.4" y="382.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (7 samples, 0.76%)</title><rect x="1047.0" y="355.0" width="8.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1050.0" y="366.0"></text>
</g>
<g>
<title>ksys_pread64 (7 samples, 0.76%)</title><rect x="1047.0" y="339.0" width="8.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1050.0" y="350.0"></text>
</g>
<g>
<title>vfs_read (7 samples, 0.76%)</title><rect x="1047.0" y="323.0" width="8.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1050.0" y="334.0"></text>
</g>
<g>
<title>__vfs_read (4 samples, 0.43%)</title><rect x="1048.2" y="307.0" width="5.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1051.2" y="318.0"></text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.11%)</title><rect x="1048.2" y="291.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1051.2" y="302.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.32%)</title><rect x="1049.5" y="291.0" width="3.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1052.5" y="302.0"></text>
</g>
<g>
<title>ext4_file_read_iter (3 samples, 0.32%)</title><rect x="1049.5" y="275.0" width="3.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1052.5" y="286.0"></text>
</g>
<g>
<title>generic_file_read_iter (3 samples, 0.32%)</title><rect x="1049.5" y="259.0" width="3.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1052.5" y="270.0"></text>
</g>
<g>
<title>generic_file_buffered_read (3 samples, 0.32%)</title><rect x="1049.5" y="243.0" width="3.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1052.5" y="254.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.22%)</title><rect x="1049.5" y="227.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1052.5" y="238.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.22%)</title><rect x="1049.5" y="211.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1052.5" y="222.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.11%)</title><rect x="1050.8" y="195.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1053.8" y="206.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.11%)</title><rect x="1052.1" y="227.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1055.1" y="238.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.11%)</title><rect x="1052.1" y="211.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1055.1" y="222.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.11%)</title><rect x="1052.1" y="195.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1055.1" y="206.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.11%)</title><rect x="1052.1" y="179.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1055.1" y="190.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.22%)</title><rect x="1053.4" y="307.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1056.4" y="318.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.22%)</title><rect x="1053.4" y="291.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1056.4" y="302.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.11%)</title><rect x="1053.4" y="275.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1056.4" y="286.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.11%)</title><rect x="1053.4" y="259.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1056.4" y="270.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.11%)</title><rect x="1053.4" y="243.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1056.4" y="254.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.11%)</title><rect x="1054.6" y="275.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1057.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/MemTable.iterator (6 samples, 0.65%)</title><rect x="1055.9" y="723.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1058.9" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (5 samples, 0.54%)</title><rect x="1055.9" y="707.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1058.9" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (5 samples, 0.54%)</title><rect x="1055.9" y="691.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1058.9" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (5 samples, 0.54%)</title><rect x="1055.9" y="675.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1058.9" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.11%)</title><rect x="1055.9" y="659.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1058.9" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (4 samples, 0.43%)</title><rect x="1057.2" y="659.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1060.2" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.22%)</title><rect x="1059.7" y="643.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1062.7" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.22%)</title><rect x="1059.7" y="627.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1062.7" y="638.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.22%)</title><rect x="1059.7" y="611.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1062.7" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (1 samples, 0.11%)</title><rect x="1062.3" y="707.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1065.3" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (1 samples, 0.11%)</title><rect x="1062.3" y="691.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1065.3" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.&lt;init&gt; (1 samples, 0.11%)</title><rect x="1062.3" y="675.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1065.3" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.&lt;init&gt; (1 samples, 0.11%)</title><rect x="1062.3" y="659.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1065.3" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.11%)</title><rect x="1062.3" y="643.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1065.3" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.11%)</title><rect x="1062.3" y="627.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1065.3" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.11%)</title><rect x="1062.3" y="611.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1065.3" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.11%)</title><rect x="1062.3" y="595.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1065.3" y="606.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.11%)</title><rect x="1062.3" y="579.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1065.3" y="590.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.22%)</title><rect x="1063.6" y="819.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1066.6" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.22%)</title><rect x="1063.6" y="803.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1066.6" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.22%)</title><rect x="1063.6" y="787.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1066.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.11%)</title><rect x="1064.8" y="771.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1067.8" y="782.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.11%)</title><rect x="1064.8" y="755.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1067.8" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.11%)</title><rect x="1066.1" y="819.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1069.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.11%)</title><rect x="1066.1" y="803.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1069.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.11%)</title><rect x="1066.1" y="787.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1069.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.11%)</title><rect x="1066.1" y="771.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1069.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.22%)</title><rect x="1067.4" y="851.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1070.4" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.22%)</title><rect x="1067.4" y="835.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1070.4" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.11%)</title><rect x="1070.0" y="851.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1073.0" y="862.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.11%)</title><rect x="1070.0" y="835.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1073.0" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.11%)</title><rect x="1070.0" y="819.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1073.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.11%)</title><rect x="1070.0" y="803.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1073.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.11%)</title><rect x="1070.0" y="787.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1073.0" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.11%)</title><rect x="1070.0" y="771.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1073.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.11%)</title><rect x="1071.2" y="851.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1074.2" y="862.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.11%)</title><rect x="1071.2" y="835.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1074.2" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.11%)</title><rect x="1072.5" y="851.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1075.5" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.11%)</title><rect x="1072.5" y="835.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1075.5" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.22%)</title><rect x="1073.8" y="867.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1076.8" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (68 samples, 7.36%)</title><rect x="1076.3" y="867.0" width="86.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1079.3" y="878.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (60 samples, 6.49%)</title><rect x="1086.6" y="851.0" width="76.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1089.6" y="862.0">one/nio/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 0.76%)</title><rect x="1087.8" y="835.0" width="9.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1090.8" y="846.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.30.so (1 samples, 0.11%)</title><rect x="1090.4" y="819.0" width="1.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1093.4" y="830.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.11%)</title><rect x="1091.7" y="819.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1094.7" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.32%)</title><rect x="1092.9" y="819.0" width="3.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1095.9" y="830.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.22%)</title><rect x="1094.2" y="803.0" width="2.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1097.2" y="814.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.11%)</title><rect x="1095.5" y="787.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1098.5" y="798.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.11%)</title><rect x="1096.8" y="835.0" width="1.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1099.8" y="846.0"></text>
</g>
<g>
<title>__recv (51 samples, 5.52%)</title><rect x="1098.1" y="835.0" width="65.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1101.1" y="846.0">__recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (47 samples, 5.09%)</title><rect x="1103.2" y="819.0" width="60.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1106.2" y="830.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (47 samples, 5.09%)</title><rect x="1103.2" y="803.0" width="60.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1106.2" y="814.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_recvfrom (42 samples, 4.55%)</title><rect x="1109.5" y="787.0" width="53.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1112.5" y="798.0">__x64..</text>
</g>
<g>
<title>__sys_recvfrom (41 samples, 4.44%)</title><rect x="1109.5" y="771.0" width="52.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1112.5" y="782.0">__sys..</text>
</g>
<g>
<title>__fdget (1 samples, 0.11%)</title><rect x="1109.5" y="755.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1112.5" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (35 samples, 3.79%)</title><rect x="1110.8" y="755.0" width="44.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1113.8" y="766.0">sock..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.11%)</title><rect x="1110.8" y="739.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1113.8" y="750.0"></text>
</g>
<g>
<title>inet6_recvmsg (16 samples, 1.73%)</title><rect x="1112.1" y="739.0" width="20.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1115.1" y="750.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.11%)</title><rect x="1112.1" y="723.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1115.1" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (15 samples, 1.62%)</title><rect x="1113.4" y="723.0" width="19.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1116.4" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.11%)</title><rect x="1114.7" y="707.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1117.7" y="718.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.11%)</title><rect x="1114.7" y="691.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1117.7" y="702.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.11%)</title><rect x="1114.7" y="675.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1117.7" y="686.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.11%)</title><rect x="1114.7" y="659.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1117.7" y="670.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.11%)</title><rect x="1115.9" y="707.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1118.9" y="718.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.11%)</title><rect x="1117.2" y="707.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1120.2" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.11%)</title><rect x="1117.2" y="691.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1120.2" y="702.0"></text>
</g>
<g>
<title>__pv_queued_spin_lock_slowpath (1 samples, 0.11%)</title><rect x="1117.2" y="675.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1120.2" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (10 samples, 1.08%)</title><rect x="1118.5" y="707.0" width="12.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1121.5" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (10 samples, 1.08%)</title><rect x="1118.5" y="691.0" width="12.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1121.5" y="702.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.11%)</title><rect x="1118.5" y="675.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1121.5" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (9 samples, 0.97%)</title><rect x="1119.8" y="675.0" width="11.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1122.8" y="686.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.22%)</title><rect x="1119.8" y="659.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1122.8" y="670.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.22%)</title><rect x="1119.8" y="643.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1122.8" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.11%)</title><rect x="1122.3" y="659.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1125.3" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.32%)</title><rect x="1123.6" y="659.0" width="3.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1126.6" y="670.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.32%)</title><rect x="1123.6" y="643.0" width="3.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1126.6" y="654.0"></text>
</g>
<g>
<title>check_stack_object (3 samples, 0.32%)</title><rect x="1127.4" y="659.0" width="3.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1130.4" y="670.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.11%)</title><rect x="1131.3" y="707.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1134.3" y="718.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.11%)</title><rect x="1131.3" y="691.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1134.3" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (18 samples, 1.95%)</title><rect x="1132.5" y="739.0" width="23.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1135.5" y="750.0">s..</text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.22%)</title><rect x="1137.6" y="723.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1140.6" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (12 samples, 1.30%)</title><rect x="1140.2" y="723.0" width="15.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1143.2" y="734.0"></text>
</g>
<g>
<title>aa_sk_perm (12 samples, 1.30%)</title><rect x="1140.2" y="707.0" width="15.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1143.2" y="718.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (4 samples, 0.43%)</title><rect x="1150.4" y="691.0" width="5.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1153.4" y="702.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.11%)</title><rect x="1150.4" y="675.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1153.4" y="686.0"></text>
</g>
<g>
<title>aa_profile_af_perm (3 samples, 0.32%)</title><rect x="1151.7" y="675.0" width="3.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1154.7" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.54%)</title><rect x="1155.5" y="755.0" width="6.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1158.5" y="766.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.11%)</title><rect x="1155.5" y="739.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1158.5" y="750.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.11%)</title><rect x="1155.5" y="723.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1158.5" y="734.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.11%)</title><rect x="1155.5" y="707.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1158.5" y="718.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.43%)</title><rect x="1156.8" y="739.0" width="5.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1159.8" y="750.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.11%)</title><rect x="1161.9" y="771.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1164.9" y="782.0"></text>
</g>
<g>
<title>start_thread (21 samples, 2.27%)</title><rect x="1163.2" y="915.0" width="26.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1166.2" y="926.0">s..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (21 samples, 2.27%)</title><rect x="1163.2" y="899.0" width="26.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1166.2" y="910.0">t..</text>
</g>
<g>
<title>Thread::call_run() (21 samples, 2.27%)</title><rect x="1163.2" y="883.0" width="26.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1166.2" y="894.0">T..</text>
</g>
<g>
<title>GangWorker::loop() (13 samples, 1.41%)</title><rect x="1163.2" y="867.0" width="16.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1166.2" y="878.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (1 samples, 0.11%)</title><rect x="1163.2" y="851.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1166.2" y="862.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (1 samples, 0.11%)</title><rect x="1163.2" y="835.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1166.2" y="846.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::G1SerialFreeCollectionSetClosure::do_heap_region(HeapRegion*) (1 samples, 0.11%)</title><rect x="1163.2" y="819.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1166.2" y="830.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (12 samples, 1.30%)</title><rect x="1164.5" y="851.0" width="15.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1167.5" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (10 samples, 1.08%)</title><rect x="1164.5" y="835.0" width="12.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1167.5" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.22%)</title><rect x="1164.5" y="819.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1167.5" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (8 samples, 0.87%)</title><rect x="1167.0" y="819.0" width="10.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1170.0" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.32%)</title><rect x="1172.1" y="803.0" width="3.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.1" y="814.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.11%)</title><rect x="1176.0" y="803.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1179.0" y="814.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 0.22%)</title><rect x="1177.2" y="835.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1180.2" y="846.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.22%)</title><rect x="1177.2" y="819.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1180.2" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 0.22%)</title><rect x="1177.2" y="803.0" width="2.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1180.2" y="814.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (2 samples, 0.22%)</title><rect x="1177.2" y="787.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1180.2" y="798.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.22%)</title><rect x="1177.2" y="771.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1180.2" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.11%)</title><rect x="1177.2" y="755.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1180.2" y="766.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.11%)</title><rect x="1177.2" y="739.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1180.2" y="750.0"></text>
</g>
<g>
<title>G1PLABAllocator::allocate_direct_or_new_plab(InCSetState, unsigned long, bool*) (1 samples, 0.11%)</title><rect x="1177.2" y="723.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1180.2" y="734.0"></text>
</g>
<g>
<title>PLAB::retire() (1 samples, 0.11%)</title><rect x="1177.2" y="707.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1180.2" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.11%)</title><rect x="1177.2" y="691.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1180.2" y="702.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (1 samples, 0.11%)</title><rect x="1178.5" y="755.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1181.5" y="766.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.11%)</title><rect x="1178.5" y="739.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.5" y="750.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.11%)</title><rect x="1178.5" y="723.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.5" y="734.0"></text>
</g>
<g>
<title>JavaThread::run() (8 samples, 0.87%)</title><rect x="1179.8" y="867.0" width="10.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.8" y="878.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (8 samples, 0.87%)</title><rect x="1179.8" y="851.0" width="10.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1182.8" y="862.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (8 samples, 0.87%)</title><rect x="1179.8" y="835.0" width="10.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1182.8" y="846.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (8 samples, 0.87%)</title><rect x="1179.8" y="819.0" width="10.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1182.8" y="830.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (8 samples, 0.87%)</title><rect x="1179.8" y="803.0" width="10.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1182.8" y="814.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (5 samples, 0.54%)</title><rect x="1179.8" y="787.0" width="6.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1182.8" y="798.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (2 samples, 0.22%)</title><rect x="1179.8" y="771.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1182.8" y="782.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (2 samples, 0.22%)</title><rect x="1179.8" y="755.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1182.8" y="766.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (1 samples, 0.11%)</title><rect x="1179.8" y="739.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1182.8" y="750.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (1 samples, 0.11%)</title><rect x="1179.8" y="723.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1182.8" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.11%)</title><rect x="1181.1" y="739.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1184.1" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (3 samples, 0.32%)</title><rect x="1182.3" y="771.0" width="3.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.3" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.11%)</title><rect x="1182.3" y="755.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.3" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::prompt_use(Block*, unsigned int) (1 samples, 0.11%)</title><rect x="1182.3" y="739.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.3" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (2 samples, 0.22%)</title><rect x="1183.6" y="755.0" width="2.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.6" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1 samples, 0.11%)</title><rect x="1184.9" y="739.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.9" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::use_prior_register(Node*, unsigned int, Node*, Block*, Node_List&amp;, Node_List&amp;) (1 samples, 0.11%)</title><rect x="1184.9" y="723.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.9" y="734.0"></text>
</g>
<g>
<title>Compile::Optimize() (1 samples, 0.11%)</title><rect x="1186.2" y="787.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.2" y="798.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (1 samples, 0.11%)</title><rect x="1186.2" y="771.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.2" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.11%)</title><rect x="1186.2" y="755.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.2" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.11%)</title><rect x="1186.2" y="739.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.2" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.11%)</title><rect x="1186.2" y="723.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.2" y="734.0"></text>
</g>
<g>
<title>MemBarVolatileNode::Opcode() const (1 samples, 0.11%)</title><rect x="1186.2" y="707.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.2" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.22%)</title><rect x="1187.4" y="787.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.4" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.22%)</title><rect x="1187.4" y="771.0" width="2.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.4" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.22%)</title><rect x="1187.4" y="755.0" width="2.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.4" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.22%)</title><rect x="1187.4" y="739.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.4" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.22%)</title><rect x="1187.4" y="723.0" width="2.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.4" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.22%)</title><rect x="1187.4" y="707.0" width="2.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.4" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.11%)</title><rect x="1187.4" y="691.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.4" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.11%)</title><rect x="1187.4" y="675.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.4" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.11%)</title><rect x="1187.4" y="659.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.4" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.11%)</title><rect x="1187.4" y="643.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.4" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.11%)</title><rect x="1187.4" y="627.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.4" y="638.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.11%)</title><rect x="1187.4" y="611.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.4" y="622.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.11%)</title><rect x="1187.4" y="595.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.4" y="606.0"></text>
</g>
<g>
<title>TypeOopPtr::singleton() const (1 samples, 0.11%)</title><rect x="1187.4" y="579.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.4" y="590.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.11%)</title><rect x="1188.7" y="691.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.7" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.11%)</title><rect x="1188.7" y="675.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.7" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.11%)</title><rect x="1188.7" y="659.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.7" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.11%)</title><rect x="1188.7" y="643.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.7" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.11%)</title><rect x="1188.7" y="627.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.7" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.11%)</title><rect x="1188.7" y="611.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.7" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.11%)</title><rect x="1188.7" y="595.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.7" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.11%)</title><rect x="1188.7" y="579.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.7" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.11%)</title><rect x="1188.7" y="563.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.7" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.11%)</title><rect x="1188.7" y="547.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.7" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.11%)</title><rect x="1188.7" y="531.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.7" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.11%)</title><rect x="1188.7" y="515.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.7" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.11%)</title><rect x="1188.7" y="499.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.7" y="510.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.11%)</title><rect x="1188.7" y="483.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.7" y="494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.11%)</title><rect x="1188.7" y="467.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.7" y="478.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.11%)</title><rect x="1188.7" y="451.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.7" y="462.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.11%)</title><rect x="1188.7" y="435.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.7" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.11%)</title><rect x="1188.7" y="419.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.7" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.11%)</title><rect x="1188.7" y="403.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.7" y="414.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.11%)</title><rect x="1188.7" y="387.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.7" y="398.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.11%)</title><rect x="1188.7" y="371.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.7" y="382.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.11%)</title><rect x="1188.7" y="355.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.7" y="366.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.11%)</title><rect x="1188.7" y="339.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.7" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.11%)</title><rect x="1188.7" y="323.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.7" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.11%)</title><rect x="1188.7" y="307.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.7" y="318.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.11%)</title><rect x="1188.7" y="291.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.7" y="302.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.11%)</title><rect x="1188.7" y="275.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.7" y="286.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.11%)</title><rect x="1188.7" y="259.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.7" y="270.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.11%)</title><rect x="1188.7" y="243.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.7" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.11%)</title><rect x="1188.7" y="227.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.7" y="238.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.11%)</title><rect x="1188.7" y="211.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.7" y="222.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.11%)</title><rect x="1188.7" y="195.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.7" y="206.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.11%)</title><rect x="1188.7" y="179.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.7" y="190.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.11%)</title><rect x="1188.7" y="163.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.7" y="174.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.11%)</title><rect x="1188.7" y="147.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.7" y="158.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.11%)</title><rect x="1188.7" y="131.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.7" y="142.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.11%)</title><rect x="1188.7" y="115.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.7" y="126.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.11%)</title><rect x="1188.7" y="99.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.7" y="110.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.11%)</title><rect x="1188.7" y="83.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.7" y="94.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.11%)</title><rect x="1188.7" y="67.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.7" y="78.0"></text>
</g>
<g>
<title>GraphKit::GraphKit() (1 samples, 0.11%)</title><rect x="1188.7" y="51.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.7" y="62.0"></text>
</g>
<g>
<title>Phase::Phase(Phase::PhaseNumber) (1 samples, 0.11%)</title><rect x="1188.7" y="35.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.7" y="46.0"></text>
</g>
</g>
</svg>
