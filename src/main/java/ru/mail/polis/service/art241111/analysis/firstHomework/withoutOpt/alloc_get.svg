<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1174" onload="init(evt)" viewBox="0 0 1200 1174" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1157"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1157"> </text>
<g id="frames">
<g>
<title>all (8,791 samples, 100.00%)</title><rect x="10.0" y="1123.0" width="1180.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="13.0" y="1134.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (2,446 samples, 27.82%)</title><rect x="10.0" y="1107.0" width="328.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="1118.0">java/lang/Thread.run</text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (37 samples, 0.42%)</title><rect x="10.0" y="1091.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="1102.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (37 samples, 0.42%)</title><rect x="10.0" y="1075.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/27643216.linkToTargetMethod (37 samples, 0.42%)</title><rect x="10.0" y="1059.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1567179488.invoke (37 samples, 0.42%)</title><rect x="10.0" y="1043.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.42%)</title><rect x="10.0" y="1027.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (37 samples, 0.42%)</title><rect x="10.0" y="1011.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (37 samples, 0.42%)</title><rect x="10.0" y="995.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="1006.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.42%)</title><rect x="10.0" y="979.0" width="5.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="13.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,408 samples, 27.39%)</title><rect x="15.0" y="1091.0" width="323.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.0" y="1102.0">java/util/concurrent/ThreadPoolExecutor$Work..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,408 samples, 27.39%)</title><rect x="15.0" y="1075.0" width="323.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.0" y="1086.0">java/util/concurrent/ThreadPoolExecutor.runW..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.02%)</title><rect x="15.0" y="1059.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="18.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (2 samples, 0.02%)</title><rect x="15.0" y="1043.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="18.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (2 samples, 0.02%)</title><rect x="15.0" y="1027.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="18.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (2 samples, 0.02%)</title><rect x="15.0" y="1011.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.0" y="1022.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (2 samples, 0.02%)</title><rect x="15.0" y="995.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="18.0" y="1006.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (2,406 samples, 27.37%)</title><rect x="15.2" y="1059.0" width="323.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.2" y="1070.0">sun/rmi/transport/tcp/TCPTransport$Connectio..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2,405 samples, 27.36%)</title><rect x="15.4" y="1043.0" width="322.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.4" y="1054.0">java/security/AccessController.doPrivileged</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$90/208093866.run (2,405 samples, 27.36%)</title><rect x="15.4" y="1027.0" width="322.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="18.4" y="1038.0">sun/rmi/transport/tcp/TCPTransport$Connectio..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (2,405 samples, 27.36%)</title><rect x="15.4" y="1011.0" width="322.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="18.4" y="1022.0">sun/rmi/transport/tcp/TCPTransport$Connectio..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (2,405 samples, 27.36%)</title><rect x="15.4" y="995.0" width="322.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="18.4" y="1006.0">sun/rmi/transport/tcp/TCPTransport$Connectio..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (2,403 samples, 27.33%)</title><rect x="15.6" y="979.0" width="322.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="18.6" y="990.0">sun/rmi/transport/tcp/TCPTransport.handleMes..</text>
</g>
<g>
<title>java.io.DataOutputStream (41 samples, 0.47%)</title><rect x="15.6" y="963.0" width="5.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="18.6" y="974.0"></text>
</g>
<g>
<title>java/io/DataOutputStream.&lt;init&gt; (2 samples, 0.02%)</title><rect x="21.1" y="963.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="24.1" y="974.0"></text>
</g>
<g>
<title>sun.rmi.transport.StreamRemoteCall (3 samples, 0.03%)</title><rect x="21.4" y="963.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="24.4" y="974.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (2,357 samples, 26.81%)</title><rect x="21.8" y="963.0" width="316.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.8" y="974.0">sun/rmi/transport/Transport.serviceCall</text>
</g>
<g>
<title>java/rmi/server/ObjID.read (6 samples, 0.07%)</title><rect x="21.8" y="947.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="24.8" y="958.0"></text>
</g>
<g>
<title>java/rmi/server/UID.read (5 samples, 0.06%)</title><rect x="21.9" y="931.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="24.9" y="942.0"></text>
</g>
<g>
<title>java.rmi.server.UID (5 samples, 0.06%)</title><rect x="21.9" y="915.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="24.9" y="926.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2,028 samples, 23.07%)</title><rect x="22.6" y="947.0" width="272.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="25.6" y="958.0">java/security/AccessController.doPri..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (2,028 samples, 23.07%)</title><rect x="22.6" y="931.0" width="272.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="25.6" y="942.0">sun/rmi/transport/Transport$1.run</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (2,028 samples, 23.07%)</title><rect x="22.6" y="915.0" width="272.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="25.6" y="926.0">sun/rmi/transport/Transport$1.run</text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (2,028 samples, 23.07%)</title><rect x="22.6" y="899.0" width="272.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="25.6" y="910.0">sun/rmi/server/UnicastServerRef.disp..</text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.05%)</title><rect x="22.6" y="883.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="25.6" y="894.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (2 samples, 0.02%)</title><rect x="23.2" y="883.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="26.2" y="894.0"></text>
</g>
<g>
<title>java.lang.Long (2 samples, 0.02%)</title><rect x="23.2" y="867.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="26.2" y="878.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (931 samples, 10.59%)</title><rect x="23.6" y="883.0" width="124.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="26.6" y="894.0">java/lang/refle..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (931 samples, 10.59%)</title><rect x="23.6" y="867.0" width="124.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="26.6" y="878.0">jdk/internal/re..</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor23.invoke (8 samples, 0.09%)</title><rect x="23.6" y="851.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="26.6" y="862.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttribute (8 samples, 0.09%)</title><rect x="23.6" y="835.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="26.6" y="846.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (7 samples, 0.08%)</title><rect x="23.7" y="819.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="26.7" y="830.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (6 samples, 0.07%)</title><rect x="23.8" y="803.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="26.8" y="814.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (6 samples, 0.07%)</title><rect x="23.8" y="787.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="26.8" y="798.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttribute (6 samples, 0.07%)</title><rect x="23.8" y="771.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.8" y="782.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttribute (6 samples, 0.07%)</title><rect x="23.8" y="755.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="26.8" y="766.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getMBean (2 samples, 0.02%)</title><rect x="23.8" y="739.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="26.8" y="750.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/Repository.retrieve (2 samples, 0.02%)</title><rect x="23.8" y="723.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="26.8" y="734.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/Repository.retrieveNamedObject (2 samples, 0.02%)</title><rect x="23.8" y="707.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="26.8" y="718.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.getAttribute (4 samples, 0.05%)</title><rect x="24.1" y="739.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.1" y="750.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttribute (4 samples, 0.05%)</title><rect x="24.1" y="723.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="27.1" y="734.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.getAttribute (4 samples, 0.05%)</title><rect x="24.1" y="707.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="27.1" y="718.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (4 samples, 0.05%)</title><rect x="24.1" y="691.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.1" y="702.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (4 samples, 0.05%)</title><rect x="24.1" y="675.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="27.1" y="686.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (4 samples, 0.05%)</title><rect x="24.1" y="659.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="27.1" y="670.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (4 samples, 0.05%)</title><rect x="24.1" y="643.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="27.1" y="654.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (4 samples, 0.05%)</title><rect x="24.1" y="627.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="27.1" y="638.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (4 samples, 0.05%)</title><rect x="24.1" y="611.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="27.1" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.05%)</title><rect x="24.1" y="595.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="27.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor38.invoke (911 samples, 10.36%)</title><rect x="24.6" y="851.0" width="122.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="27.6" y="862.0">jdk/internal/re..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (911 samples, 10.36%)</title><rect x="24.6" y="835.0" width="122.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="27.6" y="846.0">javax/managemen..</text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.02%)</title><rect x="24.6" y="819.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="27.6" y="830.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (752 samples, 8.55%)</title><rect x="24.9" y="819.0" width="100.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="27.9" y="830.0">javax/manage..</text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.rspOutgoing (2 samples, 0.02%)</title><rect x="24.9" y="803.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="27.9" y="814.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (2 samples, 0.02%)</title><rect x="24.9" y="787.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="27.9" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/27643216.linkToTargetMethod (2 samples, 0.02%)</title><rect x="24.9" y="771.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="27.9" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1567179488.invoke (2 samples, 0.02%)</title><rect x="24.9" y="755.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="27.9" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="24.9" y="739.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="27.9" y="750.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (750 samples, 8.53%)</title><rect x="25.2" y="803.0" width="100.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="28.2" y="814.0">javax/manage..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (750 samples, 8.53%)</title><rect x="25.2" y="787.0" width="100.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="28.2" y="798.0">javax/manage..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (750 samples, 8.53%)</title><rect x="25.2" y="771.0" width="100.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="28.2" y="782.0">com/sun/jmx/..</text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (750 samples, 8.53%)</title><rect x="25.2" y="755.0" width="100.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="28.2" y="766.0">com/sun/jmx/..</text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getMBean (2 samples, 0.02%)</title><rect x="25.2" y="739.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="28.2" y="750.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/Repository.retrieve (2 samples, 0.02%)</title><rect x="25.2" y="723.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="28.2" y="734.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/Repository.retrieveNamedObject (2 samples, 0.02%)</title><rect x="25.2" y="707.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="28.2" y="718.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.nonDefaultDomain (2 samples, 0.02%)</title><rect x="25.4" y="739.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="28.4" y="750.0"></text>
</g>
<g>
<title>javax/management/ObjectName.getDomain (2 samples, 0.02%)</title><rect x="25.4" y="723.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="28.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.02%)</title><rect x="25.4" y="707.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="28.4" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.02%)</title><rect x="25.4" y="691.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="28.4" y="702.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (746 samples, 8.49%)</title><rect x="25.7" y="739.0" width="100.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="28.7" y="750.0">javax/manage..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (746 samples, 8.49%)</title><rect x="25.7" y="723.0" width="100.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="28.7" y="734.0">com/sun/jmx/..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (746 samples, 8.49%)</title><rect x="25.7" y="707.0" width="100.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="28.7" y="718.0">com/sun/jmx/..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (745 samples, 8.47%)</title><rect x="25.7" y="691.0" width="100.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="28.7" y="702.0">com/sun/jmx/..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (745 samples, 8.47%)</title><rect x="25.7" y="675.0" width="100.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="28.7" y="686.0">com/sun/jmx/..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (745 samples, 8.47%)</title><rect x="25.7" y="659.0" width="100.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="28.7" y="670.0">com/sun/jmx/..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (745 samples, 8.47%)</title><rect x="25.7" y="643.0" width="100.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="28.7" y="654.0">com/sun/jmx/..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (745 samples, 8.47%)</title><rect x="25.7" y="627.0" width="100.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="28.7" y="638.0">com/sun/jmx/..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (674 samples, 7.67%)</title><rect x="25.7" y="611.0" width="90.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="28.7" y="622.0">com/sun/jm..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (674 samples, 7.67%)</title><rect x="25.7" y="595.0" width="90.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="28.7" y="606.0">com/sun/jm..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (672 samples, 7.64%)</title><rect x="25.7" y="579.0" width="90.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="28.7" y="590.0">com/sun/jm..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (672 samples, 7.64%)</title><rect x="25.7" y="563.0" width="90.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="28.7" y="574.0">com/sun/jm..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (211 samples, 2.40%)</title><rect x="25.7" y="547.0" width="28.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="28.7" y="558.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (171 samples, 1.95%)</title><rect x="25.7" y="531.0" width="23.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="28.7" y="542.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (163 samples, 1.85%)</title><rect x="25.7" y="515.0" width="21.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="28.7" y="526.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (163 samples, 1.85%)</title><rect x="25.7" y="499.0" width="21.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="28.7" y="510.0">c..</text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.11%)</title><rect x="25.7" y="483.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="28.7" y="494.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeDataSupport (5 samples, 0.06%)</title><rect x="27.0" y="483.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="30.0" y="494.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (105 samples, 1.19%)</title><rect x="27.7" y="483.0" width="14.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="30.7" y="494.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (20 samples, 0.23%)</title><rect x="27.7" y="467.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="30.7" y="478.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (9 samples, 0.10%)</title><rect x="27.7" y="451.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="30.7" y="462.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (9 samples, 0.10%)</title><rect x="27.7" y="435.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="30.7" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (9 samples, 0.10%)</title><rect x="27.7" y="419.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.7" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (9 samples, 0.10%)</title><rect x="27.7" y="403.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="30.7" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (9 samples, 0.10%)</title><rect x="27.7" y="387.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="30.7" y="398.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSet.equals (7 samples, 0.08%)</title><rect x="28.9" y="451.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="31.9" y="462.0"></text>
</g>
<g>
<title>java/util/AbstractSet.equals (7 samples, 0.08%)</title><rect x="28.9" y="435.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="31.9" y="446.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.containsAll (7 samples, 0.08%)</title><rect x="28.9" y="419.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="31.9" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (7 samples, 0.08%)</title><rect x="28.9" y="403.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="31.9" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (7 samples, 0.08%)</title><rect x="28.9" y="387.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="31.9" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (7 samples, 0.08%)</title><rect x="28.9" y="371.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="31.9" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySet (4 samples, 0.05%)</title><rect x="29.9" y="451.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="32.9" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (4 samples, 0.05%)</title><rect x="29.9" y="435.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="32.9" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySet (4 samples, 0.05%)</title><rect x="29.9" y="419.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="32.9" y="430.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (85 samples, 0.97%)</title><rect x="30.4" y="467.0" width="11.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="33.4" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (16 samples, 0.18%)</title><rect x="30.4" y="451.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="33.4" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (69 samples, 0.78%)</title><rect x="32.6" y="451.0" width="9.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="35.6" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (69 samples, 0.78%)</title><rect x="32.6" y="435.0" width="9.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="35.6" y="446.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (43 samples, 0.49%)</title><rect x="41.8" y="483.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="44.8" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (43 samples, 0.49%)</title><rect x="41.8" y="467.0" width="5.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="44.8" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (8 samples, 0.09%)</title><rect x="47.6" y="515.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="50.6" y="526.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeData[] (8 samples, 0.09%)</title><rect x="47.6" y="499.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="50.6" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (40 samples, 0.46%)</title><rect x="48.7" y="531.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="51.7" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.02%)</title><rect x="48.7" y="515.0" width="0.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="51.7" y="526.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeDataSupport (4 samples, 0.05%)</title><rect x="48.9" y="515.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="51.9" y="526.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (23 samples, 0.26%)</title><rect x="49.5" y="515.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="52.5" y="526.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (9 samples, 0.10%)</title><rect x="49.5" y="499.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="52.5" y="510.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (4 samples, 0.05%)</title><rect x="49.5" y="483.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="52.5" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (4 samples, 0.05%)</title><rect x="49.5" y="467.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.5" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (4 samples, 0.05%)</title><rect x="49.5" y="451.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.5" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (4 samples, 0.05%)</title><rect x="49.5" y="435.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="52.5" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (4 samples, 0.05%)</title><rect x="49.5" y="419.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="52.5" y="430.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSet.equals (2 samples, 0.02%)</title><rect x="50.0" y="483.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="53.0" y="494.0"></text>
</g>
<g>
<title>java/util/AbstractSet.equals (2 samples, 0.02%)</title><rect x="50.0" y="467.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="53.0" y="478.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.containsAll (2 samples, 0.02%)</title><rect x="50.0" y="451.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="53.0" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (2 samples, 0.02%)</title><rect x="50.0" y="435.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="53.0" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (2 samples, 0.02%)</title><rect x="50.0" y="419.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="53.0" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (2 samples, 0.02%)</title><rect x="50.0" y="403.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="53.0" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySet (3 samples, 0.03%)</title><rect x="50.3" y="483.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="53.3" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (3 samples, 0.03%)</title><rect x="50.3" y="467.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="53.3" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySet (3 samples, 0.03%)</title><rect x="50.3" y="451.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="53.3" y="462.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (14 samples, 0.16%)</title><rect x="50.7" y="499.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="53.7" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (6 samples, 0.07%)</title><rect x="50.7" y="483.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="53.7" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (8 samples, 0.09%)</title><rect x="51.5" y="483.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="54.5" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (8 samples, 0.09%)</title><rect x="51.5" y="467.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="54.5" y="478.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (11 samples, 0.13%)</title><rect x="52.6" y="515.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="55.6" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.11%)</title><rect x="52.6" y="499.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="55.6" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (25 samples, 0.28%)</title><rect x="54.0" y="547.0" width="3.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="57.0" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.05%)</title><rect x="57.4" y="547.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="60.4" y="558.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeDataSupport (7 samples, 0.08%)</title><rect x="57.9" y="547.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="60.9" y="558.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (232 samples, 2.64%)</title><rect x="58.9" y="547.0" width="31.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="61.9" y="558.0">ja..</text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (23 samples, 0.26%)</title><rect x="58.9" y="531.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="61.9" y="542.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (9 samples, 0.10%)</title><rect x="58.9" y="515.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="61.9" y="526.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (9 samples, 0.10%)</title><rect x="58.9" y="499.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="61.9" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (9 samples, 0.10%)</title><rect x="58.9" y="483.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="61.9" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (9 samples, 0.10%)</title><rect x="58.9" y="467.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.9" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (9 samples, 0.10%)</title><rect x="58.9" y="451.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="61.9" y="462.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSet.equals (7 samples, 0.08%)</title><rect x="60.1" y="515.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="63.1" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractSet.equals (7 samples, 0.08%)</title><rect x="60.1" y="499.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="63.1" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.containsAll (7 samples, 0.08%)</title><rect x="60.1" y="483.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="63.1" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (7 samples, 0.08%)</title><rect x="60.1" y="467.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="63.1" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (7 samples, 0.08%)</title><rect x="60.1" y="451.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.1" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (7 samples, 0.08%)</title><rect x="60.1" y="435.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="63.1" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySet (4 samples, 0.05%)</title><rect x="61.0" y="515.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="64.0" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (4 samples, 0.05%)</title><rect x="61.0" y="499.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="64.0" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySet (4 samples, 0.05%)</title><rect x="61.0" y="483.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="64.0" y="494.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeType.isValue (3 samples, 0.03%)</title><rect x="61.5" y="515.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="64.5" y="526.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeType.isAssignableFrom (3 samples, 0.03%)</title><rect x="61.5" y="499.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="64.5" y="510.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (3 samples, 0.03%)</title><rect x="61.5" y="483.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="64.5" y="494.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableCollection$1 (2 samples, 0.02%)</title><rect x="61.5" y="467.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="64.5" y="478.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (209 samples, 2.38%)</title><rect x="61.9" y="531.0" width="28.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="64.9" y="542.0">ja..</text>
</g>
<g>
<title>java.util.TreeMap (23 samples, 0.26%)</title><rect x="61.9" y="515.0" width="3.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="64.9" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (186 samples, 2.12%)</title><rect x="65.0" y="515.0" width="25.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="68.0" y="526.0">j..</text>
</g>
<g>
<title>java.util.TreeMap$Entry (186 samples, 2.12%)</title><rect x="65.0" y="499.0" width="25.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="68.0" y="510.0">j..</text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (193 samples, 2.20%)</title><rect x="90.0" y="547.0" width="25.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="93.0" y="558.0">s..</text>
</g>
<g>
<title>java.lang.Object[] (180 samples, 2.05%)</title><rect x="90.0" y="531.0" width="24.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="93.0" y="542.0">j..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (13 samples, 0.15%)</title><rect x="114.2" y="531.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="117.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (13 samples, 0.15%)</title><rect x="114.2" y="515.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="117.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (13 samples, 0.15%)</title><rect x="114.2" y="499.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="117.2" y="510.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (13 samples, 0.15%)</title><rect x="114.2" y="483.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="117.2" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (13 samples, 0.15%)</title><rect x="114.2" y="467.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="117.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (13 samples, 0.15%)</title><rect x="114.2" y="451.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="117.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor12.invoke (5 samples, 0.06%)</title><rect x="114.2" y="435.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="117.2" y="446.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.getLockedMonitors (5 samples, 0.06%)</title><rect x="114.2" y="419.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="117.2" y="430.0"></text>
</g>
<g>
<title>java.lang.management.MonitorInfo[] (5 samples, 0.06%)</title><rect x="114.2" y="403.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="117.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor13.invoke (2 samples, 0.02%)</title><rect x="114.8" y="435.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="117.8" y="446.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.getLockedSynchronizers (2 samples, 0.02%)</title><rect x="114.8" y="419.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="117.8" y="430.0"></text>
</g>
<g>
<title>java.lang.management.LockInfo[] (2 samples, 0.02%)</title><rect x="114.8" y="403.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="117.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor15.invoke (6 samples, 0.07%)</title><rect x="115.1" y="435.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="118.1" y="446.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.getStackTrace (6 samples, 0.07%)</title><rect x="115.1" y="419.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="118.1" y="430.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement[] (6 samples, 0.07%)</title><rect x="115.1" y="403.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="118.1" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (2 samples, 0.02%)</title><rect x="115.9" y="579.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="118.9" y="590.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (71 samples, 0.81%)</title><rect x="116.2" y="611.0" width="9.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="119.2" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.03%)</title><rect x="116.2" y="595.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="119.2" y="606.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (68 samples, 0.77%)</title><rect x="116.6" y="595.0" width="9.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="119.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (68 samples, 0.77%)</title><rect x="116.6" y="579.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="119.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (68 samples, 0.77%)</title><rect x="116.6" y="563.0" width="9.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="119.6" y="574.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (68 samples, 0.77%)</title><rect x="116.6" y="547.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="119.6" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (68 samples, 0.77%)</title><rect x="116.6" y="531.0" width="9.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="119.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (68 samples, 0.77%)</title><rect x="116.6" y="515.0" width="9.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="119.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (68 samples, 0.77%)</title><rect x="116.6" y="499.0" width="9.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="119.6" y="510.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (68 samples, 0.77%)</title><rect x="116.6" y="483.0" width="9.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="119.6" y="494.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (67 samples, 0.76%)</title><rect x="116.7" y="467.0" width="9.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="119.7" y="478.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement[] (4 samples, 0.05%)</title><rect x="116.7" y="451.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="119.7" y="462.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement (8 samples, 0.09%)</title><rect x="117.2" y="451.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="120.2" y="462.0"></text>
</g>
<g>
<title>java.lang.management.ThreadInfo (33 samples, 0.38%)</title><rect x="118.3" y="451.0" width="4.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="121.3" y="462.0"></text>
</g>
<g>
<title>java.lang.management.ThreadInfo (8 samples, 0.09%)</title><rect x="122.8" y="451.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="125.8" y="462.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.&lt;init&gt; (14 samples, 0.16%)</title><rect x="123.8" y="451.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="126.8" y="462.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.initialize (14 samples, 0.16%)</title><rect x="123.8" y="435.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="126.8" y="446.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (2 samples, 0.02%)</title><rect x="124.0" y="419.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="127.0" y="430.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (2 samples, 0.02%)</title><rect x="124.0" y="403.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="127.0" y="414.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.02%)</title><rect x="124.0" y="387.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="127.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.13%)</title><rect x="124.2" y="419.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="127.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (11 samples, 0.13%)</title><rect x="124.2" y="403.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="127.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1183888521.invoke (11 samples, 0.13%)</title><rect x="124.2" y="387.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="127.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.13%)</title><rect x="124.2" y="371.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="127.2" y="382.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.02%)</title><rect x="124.2" y="355.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="127.2" y="366.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.02%)</title><rect x="124.2" y="339.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="127.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (9 samples, 0.10%)</title><rect x="124.5" y="355.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="127.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (9 samples, 0.10%)</title><rect x="124.5" y="339.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="127.5" y="350.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.10%)</title><rect x="124.5" y="323.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="127.5" y="334.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getClassLoaderFor (7 samples, 0.08%)</title><rect x="125.8" y="819.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="128.8" y="830.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.withPermissions (7 samples, 0.08%)</title><rect x="125.8" y="803.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="128.8" y="814.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain (2 samples, 0.02%)</title><rect x="126.0" y="787.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="129.0" y="798.0"></text>
</g>
<g>
<title>java/security/Permissions.add (3 samples, 0.03%)</title><rect x="126.2" y="787.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="129.2" y="798.0"></text>
</g>
<g>
<title>java/security/Permissions.getPermissionCollection (3 samples, 0.03%)</title><rect x="126.2" y="771.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="129.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (3 samples, 0.03%)</title><rect x="126.2" y="755.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="129.2" y="766.0"></text>
</g>
<g>
<title>java/security/Permissions$1.apply (2 samples, 0.02%)</title><rect x="126.4" y="739.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="129.4" y="750.0"></text>
</g>
<g>
<title>java/security/Permissions$1.apply (2 samples, 0.02%)</title><rect x="126.4" y="723.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="129.4" y="734.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (150 samples, 1.71%)</title><rect x="126.8" y="819.0" width="20.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="129.8" y="830.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (61 samples, 0.69%)</title><rect x="126.8" y="803.0" width="8.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="129.8" y="814.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (61 samples, 0.69%)</title><rect x="126.8" y="787.0" width="8.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="129.8" y="798.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (61 samples, 0.69%)</title><rect x="126.8" y="771.0" width="8.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="129.8" y="782.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/util/OrderClassLoaders.&lt;init&gt; (11 samples, 0.13%)</title><rect x="127.0" y="755.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="130.0" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (11 samples, 0.13%)</title><rect x="127.0" y="739.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="130.0" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (11 samples, 0.13%)</title><rect x="127.0" y="723.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="130.0" y="734.0"></text>
</g>
<g>
<title>java.lang.Module (2 samples, 0.02%)</title><rect x="127.0" y="707.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="130.0" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.nameAndId (5 samples, 0.06%)</title><rect x="127.4" y="707.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="130.4" y="718.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (2 samples, 0.02%)</title><rect x="127.4" y="691.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="130.4" y="702.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (2 samples, 0.02%)</title><rect x="127.4" y="675.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="130.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.02%)</title><rect x="127.7" y="691.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="130.7" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.02%)</title><rect x="127.7" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="130.7" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.02%)</title><rect x="127.7" y="659.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="130.7" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.02%)</title><rect x="127.7" y="643.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="130.7" y="654.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.02%)</title><rect x="127.7" y="627.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="130.7" y="638.0"></text>
</g>
<g>
<title>java/util/Vector.&lt;init&gt; (2 samples, 0.02%)</title><rect x="128.3" y="707.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="131.3" y="718.0"></text>
</g>
<g>
<title>java/util/Vector.&lt;init&gt; (2 samples, 0.02%)</title><rect x="128.3" y="691.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="131.3" y="702.0"></text>
</g>
<g>
<title>java/util/Vector.&lt;init&gt; (2 samples, 0.02%)</title><rect x="128.3" y="675.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="131.3" y="686.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.02%)</title><rect x="128.3" y="659.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="131.3" y="670.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader.&lt;init&gt; (48 samples, 0.55%)</title><rect x="128.5" y="755.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="131.5" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (21 samples, 0.24%)</title><rect x="128.5" y="739.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="131.5" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (21 samples, 0.24%)</title><rect x="128.5" y="723.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="131.5" y="734.0"></text>
</g>
<g>
<title>java.util.Hashtable (3 samples, 0.03%)</title><rect x="128.8" y="707.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="131.8" y="718.0"></text>
</g>
<g>
<title>java.util.Vector (2 samples, 0.02%)</title><rect x="129.2" y="707.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="132.2" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentHashMap (2 samples, 0.02%)</title><rect x="129.5" y="707.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="132.5" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.nameAndId (8 samples, 0.09%)</title><rect x="129.7" y="707.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="132.7" y="718.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6 samples, 0.07%)</title><rect x="129.7" y="691.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.7" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (6 samples, 0.07%)</title><rect x="129.7" y="675.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="132.7" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (6 samples, 0.07%)</title><rect x="129.7" y="659.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="132.7" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.07%)</title><rect x="129.7" y="643.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="132.7" y="654.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.07%)</title><rect x="129.7" y="627.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="132.7" y="638.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.02%)</title><rect x="130.5" y="691.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="133.5" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.02%)</title><rect x="130.5" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="133.5" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.02%)</title><rect x="130.5" y="659.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="133.5" y="670.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.02%)</title><rect x="130.5" y="643.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="133.5" y="654.0"></text>
</g>
<g>
<title>java/util/Hashtable.&lt;init&gt; (2 samples, 0.02%)</title><rect x="130.9" y="707.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="133.9" y="718.0"></text>
</g>
<g>
<title>java/util/Hashtable.&lt;init&gt; (2 samples, 0.02%)</title><rect x="130.9" y="691.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="133.9" y="702.0"></text>
</g>
<g>
<title>java.util.Hashtable$Entry[] (2 samples, 0.02%)</title><rect x="130.9" y="675.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="133.9" y="686.0"></text>
</g>
<g>
<title>javax.management.remote.rmi.RMIConnectionImpl$CombinedClassLoader$ClassLoaderWrapper (3 samples, 0.03%)</title><rect x="131.3" y="739.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="134.3" y="750.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader$ClassLoaderWrapper.&lt;init&gt; (24 samples, 0.27%)</title><rect x="131.7" y="739.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="134.7" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (24 samples, 0.27%)</title><rect x="131.7" y="723.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="134.7" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (24 samples, 0.27%)</title><rect x="131.7" y="707.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="134.7" y="718.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain (2 samples, 0.02%)</title><rect x="131.9" y="691.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="134.9" y="702.0"></text>
</g>
<g>
<title>java.util.Hashtable (2 samples, 0.02%)</title><rect x="132.1" y="691.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="135.1" y="702.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.nameAndId (12 samples, 0.14%)</title><rect x="132.6" y="691.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="135.6" y="702.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.02%)</title><rect x="132.6" y="675.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="135.6" y="686.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.05%)</title><rect x="133.0" y="675.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="136.0" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.05%)</title><rect x="133.0" y="659.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.0" y="670.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4 samples, 0.05%)</title><rect x="133.0" y="643.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="136.0" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.05%)</title><rect x="133.0" y="627.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="136.0" y="638.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.03%)</title><rect x="133.1" y="611.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="136.1" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (5 samples, 0.06%)</title><rect x="133.5" y="675.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="136.5" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.06%)</title><rect x="133.5" y="659.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="136.5" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.05%)</title><rect x="133.6" y="643.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.6" y="654.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.03%)</title><rect x="133.6" y="627.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="136.6" y="638.0"></text>
</g>
<g>
<title>java/util/Hashtable.&lt;init&gt; (3 samples, 0.03%)</title><rect x="134.2" y="691.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="137.2" y="702.0"></text>
</g>
<g>
<title>java/util/Hashtable.&lt;init&gt; (3 samples, 0.03%)</title><rect x="134.2" y="675.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="137.2" y="686.0"></text>
</g>
<g>
<title>java.util.Hashtable$Entry[] (3 samples, 0.03%)</title><rect x="134.2" y="659.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="137.2" y="670.0"></text>
</g>
<g>
<title>java/util/Vector.&lt;init&gt; (3 samples, 0.03%)</title><rect x="134.6" y="691.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="137.6" y="702.0"></text>
</g>
<g>
<title>java/util/Vector.&lt;init&gt; (3 samples, 0.03%)</title><rect x="134.6" y="675.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="137.6" y="686.0"></text>
</g>
<g>
<title>java/util/Vector.&lt;init&gt; (3 samples, 0.03%)</title><rect x="134.6" y="659.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="137.6" y="670.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.03%)</title><rect x="134.6" y="643.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="137.6" y="654.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (89 samples, 1.01%)</title><rect x="135.0" y="803.0" width="11.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="138.0" y="814.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (89 samples, 1.01%)</title><rect x="135.0" y="787.0" width="11.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="138.0" y="798.0"></text>
</g>
<g>
<title>java.io.ByteArrayInputStream (2 samples, 0.02%)</title><rect x="135.0" y="771.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="138.0" y="782.0"></text>
</g>
<g>
<title>java.rmi.MarshalledObject$MarshalledObjectInputStream (2 samples, 0.02%)</title><rect x="135.2" y="771.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="138.2" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (38 samples, 0.43%)</title><rect x="135.5" y="771.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="138.5" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (38 samples, 0.43%)</title><rect x="135.5" y="755.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="138.5" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (38 samples, 0.43%)</title><rect x="135.5" y="739.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="138.5" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (38 samples, 0.43%)</title><rect x="135.5" y="723.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="138.5" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (4 samples, 0.05%)</title><rect x="135.5" y="707.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="138.5" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (4 samples, 0.05%)</title><rect x="135.5" y="691.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.5" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (3 samples, 0.03%)</title><rect x="135.5" y="675.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="138.5" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (3 samples, 0.03%)</title><rect x="135.5" y="659.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="138.5" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (3 samples, 0.03%)</title><rect x="135.5" y="643.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="138.5" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (3 samples, 0.03%)</title><rect x="135.5" y="627.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="138.5" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (3 samples, 0.03%)</title><rect x="135.5" y="611.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="138.5" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (34 samples, 0.39%)</title><rect x="136.0" y="707.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="139.0" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (10 samples, 0.11%)</title><rect x="136.0" y="691.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="139.0" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (6 samples, 0.07%)</title><rect x="136.0" y="675.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="139.0" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (6 samples, 0.07%)</title><rect x="136.0" y="659.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="139.0" y="670.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (3 samples, 0.03%)</title><rect x="136.0" y="643.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="139.0" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (2 samples, 0.02%)</title><rect x="136.4" y="643.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="139.4" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (2 samples, 0.02%)</title><rect x="136.4" y="627.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="139.4" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (2 samples, 0.02%)</title><rect x="136.4" y="611.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="139.4" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (2 samples, 0.02%)</title><rect x="136.4" y="595.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="139.4" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (2 samples, 0.02%)</title><rect x="136.4" y="579.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="139.4" y="590.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.02%)</title><rect x="136.4" y="563.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="139.4" y="574.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (4 samples, 0.05%)</title><rect x="136.8" y="675.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="139.8" y="686.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newArray (4 samples, 0.05%)</title><rect x="136.8" y="659.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="139.8" y="670.0"></text>
</g>
<g>
<title>long[] (3 samples, 0.03%)</title><rect x="136.8" y="643.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="139.8" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (24 samples, 0.27%)</title><rect x="137.4" y="691.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="140.4" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (23 samples, 0.26%)</title><rect x="137.4" y="675.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="140.4" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (23 samples, 0.26%)</title><rect x="137.4" y="659.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="140.4" y="670.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (3 samples, 0.03%)</title><rect x="137.4" y="643.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="140.4" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (11 samples, 0.13%)</title><rect x="137.9" y="643.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="140.9" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (11 samples, 0.13%)</title><rect x="137.9" y="627.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="140.9" y="638.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (2 samples, 0.02%)</title><rect x="137.9" y="611.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="140.9" y="622.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (2 samples, 0.02%)</title><rect x="138.2" y="611.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="141.2" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (6 samples, 0.07%)</title><rect x="138.5" y="611.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="141.5" y="622.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (3 samples, 0.03%)</title><rect x="138.5" y="595.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="141.5" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (2 samples, 0.02%)</title><rect x="139.0" y="595.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="142.0" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (2 samples, 0.02%)</title><rect x="139.0" y="579.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="142.0" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (2 samples, 0.02%)</title><rect x="139.0" y="563.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="142.0" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (2 samples, 0.02%)</title><rect x="139.0" y="547.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="142.0" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (7 samples, 0.08%)</title><rect x="139.4" y="643.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="142.4" y="654.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (2 samples, 0.02%)</title><rect x="139.4" y="627.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="142.4" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (5 samples, 0.06%)</title><rect x="139.7" y="627.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="142.7" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (3 samples, 0.03%)</title><rect x="139.9" y="611.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="142.9" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (3 samples, 0.03%)</title><rect x="139.9" y="595.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="142.9" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (3 samples, 0.03%)</title><rect x="139.9" y="579.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="142.9" y="590.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject$MarshalledObjectInputStream.&lt;init&gt; (47 samples, 0.53%)</title><rect x="140.6" y="771.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="143.6" y="782.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (47 samples, 0.53%)</title><rect x="140.6" y="755.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="143.6" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap (2 samples, 0.02%)</title><rect x="140.6" y="739.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="143.6" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (45 samples, 0.51%)</title><rect x="140.9" y="739.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="143.9" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (35 samples, 0.40%)</title><rect x="141.0" y="723.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="144.0" y="734.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.10%)</title><rect x="141.0" y="707.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="144.0" y="718.0"></text>
</g>
<g>
<title>char[] (7 samples, 0.08%)</title><rect x="142.2" y="707.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="145.2" y="718.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (19 samples, 0.22%)</title><rect x="143.2" y="707.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.2" y="718.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.08%)</title><rect x="143.2" y="691.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="146.2" y="702.0"></text>
</g>
<g>
<title>char[] (7 samples, 0.08%)</title><rect x="144.1" y="691.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="147.1" y="702.0"></text>
</g>
<g>
<title>char[] (5 samples, 0.06%)</title><rect x="145.0" y="691.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="148.0" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.&lt;init&gt; (9 samples, 0.10%)</title><rect x="145.7" y="723.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="148.7" y="734.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$HandleTable$HandleList[] (6 samples, 0.07%)</title><rect x="145.8" y="707.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="148.8" y="718.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.02%)</title><rect x="146.6" y="707.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="149.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor39.invoke (11 samples, 0.13%)</title><rect x="146.9" y="851.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="149.9" y="862.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttributes (11 samples, 0.13%)</title><rect x="146.9" y="835.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="149.9" y="846.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (10 samples, 0.11%)</title><rect x="147.0" y="819.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="150.0" y="830.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (9 samples, 0.10%)</title><rect x="147.2" y="803.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="150.2" y="814.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (9 samples, 0.10%)</title><rect x="147.2" y="787.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="150.2" y="798.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttributes (9 samples, 0.10%)</title><rect x="147.2" y="771.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="150.2" y="782.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttributes (9 samples, 0.10%)</title><rect x="147.2" y="755.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="150.2" y="766.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.getAttributes (8 samples, 0.09%)</title><rect x="147.3" y="739.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="150.3" y="750.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttributes (8 samples, 0.09%)</title><rect x="147.3" y="723.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="150.3" y="734.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttribute (5 samples, 0.06%)</title><rect x="147.3" y="707.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="150.3" y="718.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.getAttribute (5 samples, 0.06%)</title><rect x="147.3" y="691.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="150.3" y="702.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (5 samples, 0.06%)</title><rect x="147.3" y="675.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="150.3" y="686.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (5 samples, 0.06%)</title><rect x="147.3" y="659.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="150.3" y="670.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (5 samples, 0.06%)</title><rect x="147.3" y="643.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="150.3" y="654.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (5 samples, 0.06%)</title><rect x="147.3" y="627.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="150.3" y="638.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (5 samples, 0.06%)</title><rect x="147.3" y="611.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="150.3" y="622.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (5 samples, 0.06%)</title><rect x="147.3" y="595.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="150.3" y="606.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.06%)</title><rect x="147.3" y="579.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="150.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.06%)</title><rect x="147.3" y="563.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="150.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (5 samples, 0.06%)</title><rect x="147.3" y="547.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="150.3" y="558.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (5 samples, 0.06%)</title><rect x="147.3" y="531.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="150.3" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.06%)</title><rect x="147.3" y="515.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="150.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.06%)</title><rect x="147.3" y="499.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="150.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor44.invoke (5 samples, 0.06%)</title><rect x="147.3" y="483.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="150.3" y="494.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getAllThreadIds (5 samples, 0.06%)</title><rect x="147.3" y="467.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="150.3" y="478.0"></text>
</g>
<g>
<title>long[] (5 samples, 0.06%)</title><rect x="147.3" y="451.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="150.3" y="462.0"></text>
</g>
<g>
<title>javax.management.Attribute (2 samples, 0.02%)</title><rect x="148.1" y="707.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="151.1" y="718.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (416 samples, 4.73%)</title><rect x="148.5" y="883.0" width="55.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="151.5" y="894.0">sun/r..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (416 samples, 4.73%)</title><rect x="148.5" y="867.0" width="55.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="151.5" y="878.0">java/..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (416 samples, 4.73%)</title><rect x="148.5" y="851.0" width="55.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="151.5" y="862.0">java/..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (409 samples, 4.65%)</title><rect x="148.5" y="835.0" width="54.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="151.5" y="846.0">java/..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (409 samples, 4.65%)</title><rect x="148.5" y="819.0" width="54.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="151.5" y="830.0">java/..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (398 samples, 4.53%)</title><rect x="148.5" y="803.0" width="53.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="151.5" y="814.0">java/..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (397 samples, 4.52%)</title><rect x="148.7" y="787.0" width="53.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="151.7" y="798.0">java/..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (397 samples, 4.52%)</title><rect x="148.7" y="771.0" width="53.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="151.7" y="782.0">java/..</text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.11%)</title><rect x="148.7" y="755.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="151.7" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (387 samples, 4.40%)</title><rect x="150.0" y="755.0" width="51.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="153.0" y="766.0">java/..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (372 samples, 4.23%)</title><rect x="150.0" y="739.0" width="49.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="153.0" y="750.0">java/..</text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (23 samples, 0.26%)</title><rect x="150.0" y="723.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="153.0" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (8 samples, 0.09%)</title><rect x="150.0" y="707.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="153.0" y="718.0"></text>
</g>
<g>
<title>int[] (4 samples, 0.05%)</title><rect x="150.0" y="691.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="153.0" y="702.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.02%)</title><rect x="150.7" y="691.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="153.7" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (15 samples, 0.17%)</title><rect x="151.1" y="707.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="154.1" y="718.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.02%)</title><rect x="151.1" y="691.0" width="0.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="154.1" y="702.0"></text>
</g>
<g>
<title>int[] (13 samples, 0.15%)</title><rect x="151.3" y="691.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="154.3" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (349 samples, 3.97%)</title><rect x="153.1" y="723.0" width="46.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="156.1" y="734.0">java..</text>
</g>
<g>
<title>java.io.SerialCallbackContext (12 samples, 0.14%)</title><rect x="153.1" y="707.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="156.1" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (83 samples, 0.94%)</title><rect x="154.7" y="707.0" width="11.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="157.7" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (82 samples, 0.93%)</title><rect x="154.8" y="691.0" width="11.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="157.8" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (80 samples, 0.91%)</title><rect x="154.8" y="675.0" width="10.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="157.8" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (80 samples, 0.91%)</title><rect x="154.8" y="659.0" width="10.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="157.8" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (80 samples, 0.91%)</title><rect x="154.8" y="643.0" width="10.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="157.8" y="654.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (80 samples, 0.91%)</title><rect x="154.8" y="627.0" width="10.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="157.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (80 samples, 0.91%)</title><rect x="154.8" y="611.0" width="10.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="157.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor22.invoke (80 samples, 0.91%)</title><rect x="154.8" y="595.0" width="10.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="157.8" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (80 samples, 0.91%)</title><rect x="154.8" y="579.0" width="10.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="157.8" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (79 samples, 0.90%)</title><rect x="155.0" y="563.0" width="10.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="158.0" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (79 samples, 0.90%)</title><rect x="155.0" y="547.0" width="10.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="158.0" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (51 samples, 0.58%)</title><rect x="155.0" y="531.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="158.0" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (51 samples, 0.58%)</title><rect x="155.0" y="515.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="158.0" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (51 samples, 0.58%)</title><rect x="155.0" y="499.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="158.0" y="510.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.02%)</title><rect x="155.0" y="483.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="158.0" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.03%)</title><rect x="155.2" y="483.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="158.2" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (46 samples, 0.52%)</title><rect x="155.6" y="483.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="158.6" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (40 samples, 0.46%)</title><rect x="155.6" y="467.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="158.6" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (40 samples, 0.46%)</title><rect x="155.6" y="451.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="158.6" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (29 samples, 0.33%)</title><rect x="155.8" y="435.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="158.8" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.02%)</title><rect x="155.8" y="419.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="158.8" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (27 samples, 0.31%)</title><rect x="156.0" y="419.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="159.0" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (22 samples, 0.25%)</title><rect x="156.0" y="403.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="159.0" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (3 samples, 0.03%)</title><rect x="156.0" y="387.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="159.0" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (3 samples, 0.03%)</title><rect x="156.0" y="371.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="159.0" y="382.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.02%)</title><rect x="156.2" y="355.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="159.2" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (19 samples, 0.22%)</title><rect x="156.4" y="387.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="159.4" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (18 samples, 0.20%)</title><rect x="156.6" y="371.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="159.6" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (18 samples, 0.20%)</title><rect x="156.6" y="355.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="159.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (18 samples, 0.20%)</title><rect x="156.6" y="339.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="159.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor22.invoke (18 samples, 0.20%)</title><rect x="156.6" y="323.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="159.6" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (18 samples, 0.20%)</title><rect x="156.6" y="307.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="159.6" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (18 samples, 0.20%)</title><rect x="156.6" y="291.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="159.6" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (18 samples, 0.20%)</title><rect x="156.6" y="275.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="159.6" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (13 samples, 0.15%)</title><rect x="156.6" y="259.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="159.6" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (13 samples, 0.15%)</title><rect x="156.6" y="243.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="159.6" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (13 samples, 0.15%)</title><rect x="156.6" y="227.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="159.6" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.03%)</title><rect x="156.6" y="211.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="159.6" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (10 samples, 0.11%)</title><rect x="157.0" y="211.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="160.0" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (9 samples, 0.10%)</title><rect x="157.0" y="195.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="160.0" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (9 samples, 0.10%)</title><rect x="157.0" y="179.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="160.0" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (9 samples, 0.10%)</title><rect x="157.0" y="163.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="160.0" y="174.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (9 samples, 0.10%)</title><rect x="157.0" y="147.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="160.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (9 samples, 0.10%)</title><rect x="157.0" y="131.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="160.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor22.invoke (9 samples, 0.10%)</title><rect x="157.0" y="115.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="160.0" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (9 samples, 0.10%)</title><rect x="157.0" y="99.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="160.0" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (9 samples, 0.10%)</title><rect x="157.0" y="83.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="160.0" y="94.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (9 samples, 0.10%)</title><rect x="157.0" y="67.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="160.0" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (9 samples, 0.10%)</title><rect x="157.0" y="51.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="160.0" y="62.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (9 samples, 0.10%)</title><rect x="157.0" y="35.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="160.0" y="46.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (5 samples, 0.06%)</title><rect x="158.3" y="259.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="161.3" y="270.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (5 samples, 0.06%)</title><rect x="158.3" y="243.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="161.3" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (5 samples, 0.06%)</title><rect x="159.0" y="403.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="162.0" y="414.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (5 samples, 0.06%)</title><rect x="159.0" y="387.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="162.0" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (10 samples, 0.11%)</title><rect x="159.7" y="435.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="162.7" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (10 samples, 0.11%)</title><rect x="159.7" y="419.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="162.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (10 samples, 0.11%)</title><rect x="159.7" y="403.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="162.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor22.invoke (10 samples, 0.11%)</title><rect x="159.7" y="387.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="162.7" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (10 samples, 0.11%)</title><rect x="159.7" y="371.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="162.7" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (10 samples, 0.11%)</title><rect x="159.7" y="355.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="162.7" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (10 samples, 0.11%)</title><rect x="159.7" y="339.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="162.7" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.02%)</title><rect x="159.7" y="323.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="162.7" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.02%)</title><rect x="159.7" y="307.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="162.7" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (2 samples, 0.02%)</title><rect x="159.7" y="291.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="162.7" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.02%)</title><rect x="159.7" y="275.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="162.7" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (2 samples, 0.02%)</title><rect x="159.7" y="259.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="162.7" y="270.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (2 samples, 0.02%)</title><rect x="159.7" y="243.0" width="0.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="162.7" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (5 samples, 0.06%)</title><rect x="159.9" y="323.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="162.9" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (5 samples, 0.06%)</title><rect x="159.9" y="307.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="162.9" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (5 samples, 0.06%)</title><rect x="159.9" y="291.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="162.9" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.02%)</title><rect x="159.9" y="275.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="162.9" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.03%)</title><rect x="160.2" y="275.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="163.2" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (3 samples, 0.03%)</title><rect x="160.6" y="323.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="163.6" y="334.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (3 samples, 0.03%)</title><rect x="160.6" y="307.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="163.6" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (6 samples, 0.07%)</title><rect x="161.0" y="467.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="164.0" y="478.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (6 samples, 0.07%)</title><rect x="161.0" y="451.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="164.0" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (16 samples, 0.18%)</title><rect x="161.8" y="531.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="164.8" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (16 samples, 0.18%)</title><rect x="161.8" y="515.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="164.8" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (16 samples, 0.18%)</title><rect x="161.8" y="499.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="164.8" y="510.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.02%)</title><rect x="161.8" y="483.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="164.8" y="494.0"></text>
</g>
<g>
<title>int[] (6 samples, 0.07%)</title><rect x="162.1" y="483.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="165.1" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.03%)</title><rect x="162.9" y="483.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="165.9" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.06%)</title><rect x="163.3" y="483.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="166.3" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (12 samples, 0.14%)</title><rect x="164.0" y="531.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="167.0" y="542.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (12 samples, 0.14%)</title><rect x="164.0" y="515.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="167.0" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (2 samples, 0.02%)</title><rect x="165.6" y="675.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="168.6" y="686.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (2 samples, 0.02%)</title><rect x="165.6" y="659.0" width="0.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="168.6" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (254 samples, 2.89%)</title><rect x="165.8" y="707.0" width="34.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="168.8" y="718.0">ja..</text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.03%)</title><rect x="165.8" y="691.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="168.8" y="702.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (251 samples, 2.86%)</title><rect x="166.2" y="691.0" width="33.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="169.2" y="702.0">ja..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (251 samples, 2.86%)</title><rect x="166.2" y="675.0" width="33.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="169.2" y="686.0">jd..</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor22.invoke (251 samples, 2.86%)</title><rect x="166.2" y="659.0" width="33.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="169.2" y="670.0">jd..</text>
</g>
<g>
<title>java/util/TreeMap.writeObject (251 samples, 2.86%)</title><rect x="166.2" y="643.0" width="33.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="169.2" y="654.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (10 samples, 0.11%)</title><rect x="166.2" y="627.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="169.2" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (10 samples, 0.11%)</title><rect x="166.2" y="611.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="169.2" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.11%)</title><rect x="166.2" y="595.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="169.2" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (237 samples, 2.70%)</title><rect x="167.6" y="627.0" width="31.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="170.6" y="638.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (237 samples, 2.70%)</title><rect x="167.6" y="611.0" width="31.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="170.6" y="622.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (124 samples, 1.41%)</title><rect x="167.6" y="595.0" width="16.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="170.6" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (124 samples, 1.41%)</title><rect x="167.6" y="579.0" width="16.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="170.6" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (117 samples, 1.33%)</title><rect x="167.6" y="563.0" width="15.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="170.6" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (117 samples, 1.33%)</title><rect x="167.6" y="547.0" width="15.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="170.6" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (117 samples, 1.33%)</title><rect x="167.6" y="531.0" width="15.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="170.6" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.03%)</title><rect x="167.6" y="515.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="170.6" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (114 samples, 1.30%)</title><rect x="168.0" y="515.0" width="15.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="171.0" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (105 samples, 1.19%)</title><rect x="168.0" y="499.0" width="14.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="171.0" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (105 samples, 1.19%)</title><rect x="168.0" y="483.0" width="14.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="171.0" y="494.0"></text>
</g>
<g>
<title>java.io.SerialCallbackContext (9 samples, 0.10%)</title><rect x="168.0" y="467.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="171.0" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (96 samples, 1.09%)</title><rect x="169.2" y="467.0" width="12.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="172.2" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.11%)</title><rect x="169.2" y="451.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="172.2" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (86 samples, 0.98%)</title><rect x="170.5" y="451.0" width="11.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="173.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (86 samples, 0.98%)</title><rect x="170.5" y="435.0" width="11.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="173.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor22.invoke (86 samples, 0.98%)</title><rect x="170.5" y="419.0" width="11.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="173.5" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (86 samples, 0.98%)</title><rect x="170.5" y="403.0" width="11.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="173.5" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (6 samples, 0.07%)</title><rect x="170.5" y="387.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="173.5" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (6 samples, 0.07%)</title><rect x="170.5" y="371.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="173.5" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.07%)</title><rect x="170.5" y="355.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="173.5" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (77 samples, 0.88%)</title><rect x="171.3" y="387.0" width="10.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="174.3" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (77 samples, 0.88%)</title><rect x="171.3" y="371.0" width="10.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="174.3" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (57 samples, 0.65%)</title><rect x="171.5" y="355.0" width="7.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="174.5" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (57 samples, 0.65%)</title><rect x="171.5" y="339.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="174.5" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (57 samples, 0.65%)</title><rect x="171.5" y="323.0" width="7.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="174.5" y="334.0"></text>
</g>
<g>
<title>int[] (20 samples, 0.23%)</title><rect x="171.6" y="307.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="174.6" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (35 samples, 0.40%)</title><rect x="174.4" y="307.0" width="4.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="177.4" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (19 samples, 0.22%)</title><rect x="179.1" y="355.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="182.1" y="366.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (19 samples, 0.22%)</title><rect x="179.1" y="339.0" width="2.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="182.1" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (3 samples, 0.03%)</title><rect x="181.7" y="387.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="184.7" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (3 samples, 0.03%)</title><rect x="181.7" y="371.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="184.7" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (9 samples, 0.10%)</title><rect x="182.1" y="499.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="185.1" y="510.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (9 samples, 0.10%)</title><rect x="182.1" y="483.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="185.1" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (7 samples, 0.08%)</title><rect x="183.3" y="563.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="186.3" y="574.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (7 samples, 0.08%)</title><rect x="183.3" y="547.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="186.3" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (42 samples, 0.48%)</title><rect x="184.2" y="595.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="187.2" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (24 samples, 0.27%)</title><rect x="184.2" y="579.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="187.2" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (24 samples, 0.27%)</title><rect x="184.2" y="563.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="187.2" y="574.0"></text>
</g>
<g>
<title>int[] (8 samples, 0.09%)</title><rect x="184.2" y="547.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="187.2" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.05%)</title><rect x="185.3" y="547.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="188.3" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.14%)</title><rect x="185.8" y="547.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="188.8" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (18 samples, 0.20%)</title><rect x="187.4" y="579.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="190.4" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (18 samples, 0.20%)</title><rect x="187.4" y="563.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="190.4" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.02%)</title><rect x="187.4" y="547.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="190.4" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (16 samples, 0.18%)</title><rect x="187.7" y="547.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="190.7" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (14 samples, 0.16%)</title><rect x="187.7" y="531.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="190.7" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (13 samples, 0.15%)</title><rect x="187.9" y="515.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="190.9" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (13 samples, 0.15%)</title><rect x="187.9" y="499.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="190.9" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.03%)</title><rect x="187.9" y="483.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="190.9" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (10 samples, 0.11%)</title><rect x="188.3" y="483.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="191.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (10 samples, 0.11%)</title><rect x="188.3" y="467.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="191.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor22.invoke (10 samples, 0.11%)</title><rect x="188.3" y="451.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="191.3" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (10 samples, 0.11%)</title><rect x="188.3" y="435.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="191.3" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (5 samples, 0.06%)</title><rect x="188.4" y="419.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="191.4" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (5 samples, 0.06%)</title><rect x="188.4" y="403.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="191.4" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (2 samples, 0.02%)</title><rect x="188.4" y="387.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="191.4" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (2 samples, 0.02%)</title><rect x="188.4" y="371.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="191.4" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (2 samples, 0.02%)</title><rect x="188.4" y="355.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="191.4" y="366.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.02%)</title><rect x="188.4" y="339.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="191.4" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (3 samples, 0.03%)</title><rect x="188.7" y="387.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="191.7" y="398.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (3 samples, 0.03%)</title><rect x="188.7" y="371.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="191.7" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (4 samples, 0.05%)</title><rect x="189.1" y="419.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.1" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (4 samples, 0.05%)</title><rect x="189.1" y="403.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="192.1" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (2 samples, 0.02%)</title><rect x="189.6" y="531.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="192.6" y="542.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (2 samples, 0.02%)</title><rect x="189.6" y="515.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="192.6" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (71 samples, 0.81%)</title><rect x="189.9" y="595.0" width="9.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="192.9" y="606.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (71 samples, 0.81%)</title><rect x="189.9" y="579.0" width="9.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="192.9" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (4 samples, 0.05%)</title><rect x="199.4" y="627.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="202.4" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (4 samples, 0.05%)</title><rect x="199.4" y="611.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="202.4" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (15 samples, 0.17%)</title><rect x="199.9" y="739.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="202.9" y="750.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (15 samples, 0.17%)</title><rect x="199.9" y="723.0" width="2.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="202.9" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (11 samples, 0.13%)</title><rect x="201.9" y="803.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="204.9" y="814.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (11 samples, 0.13%)</title><rect x="201.9" y="787.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="204.9" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (5 samples, 0.06%)</title><rect x="203.4" y="835.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="206.4" y="846.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (5 samples, 0.06%)</title><rect x="203.4" y="819.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="206.4" y="830.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (2 samples, 0.02%)</title><rect x="203.6" y="803.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="206.6" y="814.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.02%)</title><rect x="203.6" y="787.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="206.6" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (2 samples, 0.02%)</title><rect x="203.8" y="803.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="206.8" y="814.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.02%)</title><rect x="203.8" y="787.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="206.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.02%)</title><rect x="203.8" y="771.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="206.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor41.invoke (2 samples, 0.02%)</title><rect x="203.8" y="755.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="206.8" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.writeObject (2 samples, 0.02%)</title><rect x="203.8" y="739.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="206.8" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (2 samples, 0.02%)</title><rect x="203.8" y="723.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="206.8" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.02%)</title><rect x="203.8" y="707.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="206.8" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (2 samples, 0.02%)</title><rect x="204.1" y="835.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="207.1" y="846.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (2 samples, 0.02%)</title><rect x="204.1" y="819.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="207.1" y="830.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (264 samples, 3.00%)</title><rect x="204.4" y="883.0" width="35.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="207.4" y="894.0">sun..</text>
</g>
<g>
<title>java/io/ObjectInputStream$$Lambda$95/1495238043.readString (3 samples, 0.03%)</title><rect x="204.4" y="867.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="207.4" y="878.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (3 samples, 0.03%)</title><rect x="204.4" y="851.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="207.4" y="862.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (3 samples, 0.03%)</title><rect x="204.4" y="835.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="207.4" y="846.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (3 samples, 0.03%)</title><rect x="204.4" y="819.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="207.4" y="830.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (3 samples, 0.03%)</title><rect x="204.4" y="803.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="207.4" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (3 samples, 0.03%)</title><rect x="204.4" y="787.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="207.4" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (3 samples, 0.03%)</title><rect x="204.4" y="771.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="207.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.02%)</title><rect x="204.5" y="755.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="207.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.02%)</title><rect x="204.5" y="739.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="207.5" y="750.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.02%)</title><rect x="204.5" y="723.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="207.5" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (261 samples, 2.97%)</title><rect x="204.8" y="867.0" width="35.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="207.8" y="878.0">jav..</text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (261 samples, 2.97%)</title><rect x="204.8" y="851.0" width="35.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="207.8" y="862.0">jav..</text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (261 samples, 2.97%)</title><rect x="204.8" y="835.0" width="35.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="207.8" y="846.0">jav..</text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (37 samples, 0.42%)</title><rect x="204.8" y="819.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="207.8" y="830.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.assign (4 samples, 0.05%)</title><rect x="204.8" y="803.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="207.8" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.grow (4 samples, 0.05%)</title><rect x="204.8" y="787.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="207.8" y="798.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$HandleTable$HandleList[] (2 samples, 0.02%)</title><rect x="204.8" y="771.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="207.8" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (28 samples, 0.32%)</title><rect x="205.3" y="803.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="208.3" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (28 samples, 0.32%)</title><rect x="205.3" y="787.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="208.3" y="798.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (4 samples, 0.05%)</title><rect x="205.3" y="771.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="208.3" y="782.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (2 samples, 0.02%)</title><rect x="205.8" y="771.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="208.8" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (15 samples, 0.17%)</title><rect x="206.1" y="771.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="209.1" y="782.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (4 samples, 0.05%)</title><rect x="206.1" y="755.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="209.1" y="766.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (4 samples, 0.05%)</title><rect x="206.6" y="755.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="209.6" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (7 samples, 0.08%)</title><rect x="207.2" y="755.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="210.2" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (6 samples, 0.07%)</title><rect x="207.2" y="739.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="210.2" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (6 samples, 0.07%)</title><rect x="207.2" y="723.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="210.2" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (6 samples, 0.07%)</title><rect x="207.2" y="707.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="210.2" y="718.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.02%)</title><rect x="207.2" y="691.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="210.2" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.02%)</title><rect x="207.2" y="675.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="210.2" y="686.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.02%)</title><rect x="207.2" y="659.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="210.2" y="670.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4 samples, 0.05%)</title><rect x="207.4" y="691.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="210.4" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.05%)</title><rect x="207.4" y="675.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="210.4" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.05%)</title><rect x="207.4" y="659.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="210.4" y="670.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="207.4" y="643.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="210.4" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (7 samples, 0.08%)</title><rect x="208.1" y="771.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="211.1" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getReflector (3 samples, 0.03%)</title><rect x="208.1" y="755.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="211.1" y="766.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$FieldReflectorKey (2 samples, 0.02%)</title><rect x="208.1" y="739.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="211.1" y="750.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (3 samples, 0.03%)</title><rect x="208.7" y="755.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="211.7" y="766.0"></text>
</g>
<g>
<title>java.lang.Long (3 samples, 0.03%)</title><rect x="208.7" y="739.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="211.7" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (4 samples, 0.05%)</title><rect x="209.1" y="803.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="212.1" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (4 samples, 0.05%)</title><rect x="209.1" y="787.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="212.1" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (4 samples, 0.05%)</title><rect x="209.1" y="771.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="212.1" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (4 samples, 0.05%)</title><rect x="209.1" y="755.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="212.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4 samples, 0.05%)</title><rect x="209.1" y="739.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="212.1" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.05%)</title><rect x="209.1" y="723.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="212.1" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.03%)</title><rect x="209.2" y="707.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="212.2" y="718.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.03%)</title><rect x="209.2" y="691.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="212.2" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (224 samples, 2.55%)</title><rect x="209.7" y="819.0" width="30.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="212.7" y="830.0">ja..</text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (82 samples, 0.93%)</title><rect x="209.7" y="803.0" width="11.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="212.7" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (82 samples, 0.93%)</title><rect x="209.7" y="787.0" width="11.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="212.7" y="798.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (7 samples, 0.08%)</title><rect x="209.7" y="771.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="212.7" y="782.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (3 samples, 0.03%)</title><rect x="210.7" y="771.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="213.7" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (60 samples, 0.68%)</title><rect x="211.1" y="771.0" width="8.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="214.1" y="782.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (13 samples, 0.15%)</title><rect x="211.1" y="755.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="214.1" y="766.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (9 samples, 0.10%)</title><rect x="212.8" y="755.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="215.8" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (38 samples, 0.43%)</title><rect x="214.0" y="755.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="217.0" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (34 samples, 0.39%)</title><rect x="214.3" y="739.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="217.3" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (34 samples, 0.39%)</title><rect x="214.3" y="723.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="217.3" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (34 samples, 0.39%)</title><rect x="214.3" y="707.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="217.3" y="718.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (6 samples, 0.07%)</title><rect x="214.3" y="691.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="217.3" y="702.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (7 samples, 0.08%)</title><rect x="215.1" y="691.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="218.1" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (7 samples, 0.08%)</title><rect x="215.1" y="675.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="218.1" y="686.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.08%)</title><rect x="215.1" y="659.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="218.1" y="670.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (21 samples, 0.24%)</title><rect x="216.0" y="691.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="219.0" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21 samples, 0.24%)</title><rect x="216.0" y="675.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="219.0" y="686.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.06%)</title><rect x="216.0" y="659.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="219.0" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.18%)</title><rect x="216.7" y="659.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="219.7" y="670.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.18%)</title><rect x="216.7" y="643.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="219.7" y="654.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (2 samples, 0.02%)</title><rect x="218.9" y="739.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="221.9" y="750.0"></text>
</g>
<g>
<title>java.lang.Long (2 samples, 0.02%)</title><rect x="218.9" y="723.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="221.9" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (12 samples, 0.14%)</title><rect x="219.1" y="771.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="222.1" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getReflector (5 samples, 0.06%)</title><rect x="219.1" y="755.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="222.1" y="766.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$FieldReflectorKey (4 samples, 0.05%)</title><rect x="219.1" y="739.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="222.1" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (2 samples, 0.02%)</title><rect x="219.8" y="755.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="222.8" y="766.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (2 samples, 0.02%)</title><rect x="219.8" y="739.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="222.8" y="750.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (5 samples, 0.06%)</title><rect x="220.1" y="755.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="223.1" y="766.0"></text>
</g>
<g>
<title>java.lang.Long (5 samples, 0.06%)</title><rect x="220.1" y="739.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="223.1" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (134 samples, 1.52%)</title><rect x="220.7" y="803.0" width="18.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="223.7" y="814.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$FieldValues[] (4 samples, 0.05%)</title><rect x="220.7" y="787.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="223.7" y="798.0"></text>
</g>
<g>
<title>java.io.SerialCallbackContext (4 samples, 0.05%)</title><rect x="221.3" y="787.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="224.3" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout (30 samples, 0.34%)</title><rect x="221.8" y="787.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="224.8" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout0 (30 samples, 0.34%)</title><rect x="221.8" y="771.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="224.8" y="782.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$ClassDataSlot (5 samples, 0.06%)</title><rect x="221.8" y="755.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="224.8" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.03%)</title><rect x="222.5" y="755.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="225.5" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.09%)</title><rect x="222.9" y="755.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="225.9" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.09%)</title><rect x="222.9" y="739.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="225.9" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.09%)</title><rect x="222.9" y="723.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="225.9" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.09%)</title><rect x="222.9" y="707.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="225.9" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.09%)</title><rect x="222.9" y="691.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="225.9" y="702.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.09%)</title><rect x="222.9" y="675.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="225.9" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (6 samples, 0.07%)</title><rect x="224.0" y="755.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="227.0" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap (6 samples, 0.07%)</title><rect x="224.0" y="739.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="227.0" y="750.0"></text>
</g>
<g>
<title>java/util/HashSet.add (8 samples, 0.09%)</title><rect x="224.8" y="755.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="227.8" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.put (8 samples, 0.09%)</title><rect x="224.8" y="739.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="227.8" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (8 samples, 0.09%)</title><rect x="224.8" y="723.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="227.8" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.02%)</title><rect x="224.8" y="707.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="227.8" y="718.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (2 samples, 0.02%)</title><rect x="224.8" y="691.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="227.8" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (6 samples, 0.07%)</title><rect x="225.0" y="707.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="228.0" y="718.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (6 samples, 0.07%)</title><rect x="225.0" y="691.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="228.0" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (96 samples, 1.09%)</title><rect x="225.8" y="787.0" width="12.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="228.8" y="798.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.03%)</title><rect x="225.8" y="771.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="228.8" y="782.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (93 samples, 1.06%)</title><rect x="226.2" y="771.0" width="12.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="229.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (93 samples, 1.06%)</title><rect x="226.2" y="755.0" width="12.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="229.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor2.invoke (70 samples, 0.80%)</title><rect x="226.2" y="739.0" width="9.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="229.2" y="750.0"></text>
</g>
<g>
<title>javax/management/ObjectName.readObject (70 samples, 0.80%)</title><rect x="226.2" y="723.0" width="9.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="229.2" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadObject (3 samples, 0.03%)</title><rect x="226.2" y="707.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="229.2" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadFields (3 samples, 0.03%)</title><rect x="226.2" y="691.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="229.2" y="702.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$FieldValues (3 samples, 0.03%)</title><rect x="226.2" y="675.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="229.2" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (11 samples, 0.13%)</title><rect x="226.6" y="707.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="229.6" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (11 samples, 0.13%)</title><rect x="226.6" y="691.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="229.6" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (11 samples, 0.13%)</title><rect x="226.6" y="675.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="229.6" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (11 samples, 0.13%)</title><rect x="226.6" y="659.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="229.6" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (11 samples, 0.13%)</title><rect x="226.6" y="643.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="229.6" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (11 samples, 0.13%)</title><rect x="226.6" y="627.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="229.6" y="638.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.02%)</title><rect x="226.6" y="611.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="229.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (6 samples, 0.07%)</title><rect x="226.9" y="611.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="229.9" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (6 samples, 0.07%)</title><rect x="226.9" y="595.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="229.9" y="606.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.07%)</title><rect x="226.9" y="579.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="229.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3 samples, 0.03%)</title><rect x="227.7" y="611.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="230.7" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.03%)</title><rect x="227.7" y="595.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="230.7" y="606.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.02%)</title><rect x="227.7" y="579.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="230.7" y="590.0"></text>
</g>
<g>
<title>javax/management/ObjectName.construct (56 samples, 0.64%)</title><rect x="228.1" y="707.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="231.1" y="718.0"></text>
</g>
<g>
<title>char[] (4 samples, 0.05%)</title><rect x="228.1" y="691.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="231.1" y="702.0"></text>
</g>
<g>
<title>char[] (5 samples, 0.06%)</title><rect x="228.7" y="691.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="231.7" y="702.0"></text>
</g>
<g>
<title>java.lang.String[] (8 samples, 0.09%)</title><rect x="229.3" y="691.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="232.3" y="702.0"></text>
</g>
<g>
<title>java.util.HashMap (4 samples, 0.05%)</title><rect x="230.4" y="691.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="233.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.toCharArray (15 samples, 0.17%)</title><rect x="231.1" y="691.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="234.1" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toChars (15 samples, 0.17%)</title><rect x="231.1" y="675.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="234.1" y="686.0"></text>
</g>
<g>
<title>char[] (10 samples, 0.11%)</title><rect x="231.1" y="659.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="234.1" y="670.0"></text>
</g>
<g>
<title>char[] (5 samples, 0.06%)</title><rect x="232.4" y="659.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="235.4" y="670.0"></text>
</g>
<g>
<title>javax.management.ObjectName$Property[] (6 samples, 0.07%)</title><rect x="233.1" y="691.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="236.1" y="702.0"></text>
</g>
<g>
<title>javax/management/ObjectName.addProperty (6 samples, 0.07%)</title><rect x="233.9" y="691.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="236.9" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6 samples, 0.07%)</title><rect x="233.9" y="675.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="236.9" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6 samples, 0.07%)</title><rect x="233.9" y="659.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="236.9" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3 samples, 0.03%)</title><rect x="233.9" y="643.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="236.9" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (3 samples, 0.03%)</title><rect x="233.9" y="627.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="236.9" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (3 samples, 0.03%)</title><rect x="234.3" y="643.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="237.3" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (3 samples, 0.03%)</title><rect x="234.3" y="627.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="237.3" y="638.0"></text>
</g>
<g>
<title>javax/management/ObjectName.setCanonicalName (7 samples, 0.08%)</title><rect x="234.7" y="691.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="237.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.02%)</title><rect x="234.7" y="675.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="237.7" y="686.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.02%)</title><rect x="234.7" y="659.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="237.7" y="670.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.02%)</title><rect x="234.7" y="643.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="237.7" y="654.0"></text>
</g>
<g>
<title>javax.management.ObjectName$Property[] (5 samples, 0.06%)</title><rect x="235.0" y="675.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="238.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor36.invoke (23 samples, 0.26%)</title><rect x="235.6" y="739.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="238.6" y="750.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.readObject (23 samples, 0.26%)</title><rect x="235.6" y="723.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="238.6" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadObject (23 samples, 0.26%)</title><rect x="235.6" y="707.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="238.6" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadFields (23 samples, 0.26%)</title><rect x="235.6" y="691.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="238.6" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (21 samples, 0.24%)</title><rect x="235.9" y="675.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="238.9" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (21 samples, 0.24%)</title><rect x="235.9" y="659.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="238.9" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (15 samples, 0.17%)</title><rect x="235.9" y="643.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="238.9" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (15 samples, 0.17%)</title><rect x="235.9" y="627.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="238.9" y="638.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (4 samples, 0.05%)</title><rect x="235.9" y="611.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="238.9" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (6 samples, 0.07%)</title><rect x="236.6" y="611.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="239.6" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (5 samples, 0.06%)</title><rect x="236.7" y="595.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="239.7" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (3 samples, 0.03%)</title><rect x="236.7" y="579.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="239.7" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (3 samples, 0.03%)</title><rect x="236.7" y="563.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="239.7" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (3 samples, 0.03%)</title><rect x="236.7" y="547.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="239.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.02%)</title><rect x="236.8" y="531.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="239.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.02%)</title><rect x="236.8" y="515.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="239.8" y="526.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (2 samples, 0.02%)</title><rect x="237.1" y="579.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="240.1" y="590.0"></text>
</g>
<g>
<title>java.lang.Long (2 samples, 0.02%)</title><rect x="237.1" y="563.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="240.1" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (4 samples, 0.05%)</title><rect x="237.4" y="611.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="240.4" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getReflector (2 samples, 0.02%)</title><rect x="237.4" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="240.4" y="606.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$FieldReflectorKey (2 samples, 0.02%)</title><rect x="237.4" y="579.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="240.4" y="590.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (6 samples, 0.07%)</title><rect x="237.9" y="643.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="240.9" y="654.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newArray (6 samples, 0.07%)</title><rect x="237.9" y="627.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="240.9" y="638.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.06%)</title><rect x="238.1" y="611.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="241.1" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.newInstance (8 samples, 0.09%)</title><rect x="238.7" y="803.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="241.7" y="814.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.03%)</title><rect x="238.7" y="787.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="241.7" y="798.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (5 samples, 0.06%)</title><rect x="239.1" y="787.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="242.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedSerializationConstructorAccessor10.newInstance (5 samples, 0.06%)</title><rect x="239.1" y="771.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="242.1" y="782.0"></text>
</g>
<g>
<title>javax.management.ObjectName (5 samples, 0.06%)</title><rect x="239.1" y="755.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="242.1" y="766.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (409 samples, 4.65%)</title><rect x="239.8" y="883.0" width="54.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="242.8" y="894.0">sun/r..</text>
</g>
<g>
<title>java/io/DataOutputStream.&lt;init&gt; (4 samples, 0.05%)</title><rect x="239.8" y="867.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="242.8" y="878.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.02%)</title><rect x="239.8" y="851.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="242.8" y="862.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.&lt;init&gt; (2 samples, 0.02%)</title><rect x="240.1" y="851.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="243.1" y="862.0"></text>
</g>
<g>
<title>java.lang.Object (2 samples, 0.02%)</title><rect x="240.1" y="835.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="243.1" y="846.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (405 samples, 4.61%)</title><rect x="240.3" y="867.0" width="54.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="243.3" y="878.0">sun/r..</text>
</g>
<g>
<title>sun.rmi.transport.ConnectionOutputStream (9 samples, 0.10%)</title><rect x="240.3" y="851.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="243.3" y="862.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (396 samples, 4.50%)</title><rect x="241.5" y="851.0" width="53.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="244.5" y="862.0">sun/r..</text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (396 samples, 4.50%)</title><rect x="241.5" y="835.0" width="53.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="244.5" y="846.0">sun/r..</text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (396 samples, 4.50%)</title><rect x="241.5" y="819.0" width="53.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="244.5" y="830.0">sun/r..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (391 samples, 4.45%)</title><rect x="241.5" y="803.0" width="52.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="244.5" y="814.0">java/..</text>
</g>
<g>
<title>java.io.ObjectOutputStream$BlockDataOutputStream (6 samples, 0.07%)</title><rect x="241.5" y="787.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="244.5" y="798.0"></text>
</g>
<g>
<title>java.io.ObjectOutputStream$HandleTable (12 samples, 0.14%)</title><rect x="242.3" y="787.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="245.3" y="798.0"></text>
</g>
<g>
<title>java.io.ObjectOutputStream$ReplaceTable (11 samples, 0.13%)</title><rect x="244.0" y="787.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="247.0" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.&lt;init&gt; (214 samples, 2.43%)</title><rect x="245.4" y="787.0" width="28.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="248.4" y="798.0">ja..</text>
</g>
<g>
<title>byte[] (6 samples, 0.07%)</title><rect x="245.4" y="771.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="248.4" y="782.0"></text>
</g>
<g>
<title>byte[] (103 samples, 1.17%)</title><rect x="246.2" y="771.0" width="13.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="249.2" y="782.0"></text>
</g>
<g>
<title>char[] (15 samples, 0.17%)</title><rect x="260.1" y="771.0" width="2.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="263.1" y="782.0"></text>
</g>
<g>
<title>char[] (82 samples, 0.93%)</title><rect x="262.1" y="771.0" width="11.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="265.1" y="782.0"></text>
</g>
<g>
<title>java.io.DataOutputStream (4 samples, 0.05%)</title><rect x="273.1" y="771.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="276.1" y="782.0"></text>
</g>
<g>
<title>java/io/DataOutputStream.&lt;init&gt; (4 samples, 0.05%)</title><rect x="273.6" y="771.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="276.6" y="782.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.02%)</title><rect x="273.6" y="755.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="276.6" y="766.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.&lt;init&gt; (2 samples, 0.02%)</title><rect x="273.9" y="755.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="276.9" y="766.0"></text>
</g>
<g>
<title>java.lang.Object (2 samples, 0.02%)</title><rect x="273.9" y="739.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="276.9" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (58 samples, 0.66%)</title><rect x="274.2" y="787.0" width="7.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="277.2" y="798.0"></text>
</g>
<g>
<title>int[] (38 samples, 0.43%)</title><rect x="274.2" y="771.0" width="5.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="277.2" y="782.0"></text>
</g>
<g>
<title>java.lang.Object[] (20 samples, 0.23%)</title><rect x="279.3" y="771.0" width="2.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="282.3" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$ReplaceTable.&lt;init&gt; (90 samples, 1.02%)</title><rect x="281.9" y="787.0" width="12.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="284.9" y="798.0"></text>
</g>
<g>
<title>java.io.ObjectOutputStream$HandleTable (23 samples, 0.26%)</title><rect x="281.9" y="771.0" width="3.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="284.9" y="782.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.03%)</title><rect x="285.0" y="771.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="288.0" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (64 samples, 0.73%)</title><rect x="285.4" y="771.0" width="8.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="288.4" y="782.0"></text>
</g>
<g>
<title>int[] (49 samples, 0.56%)</title><rect x="285.4" y="755.0" width="6.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="288.4" y="766.0"></text>
</g>
<g>
<title>java.lang.Object[] (15 samples, 0.17%)</title><rect x="292.0" y="755.0" width="2.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="295.0" y="766.0"></text>
</g>
<g>
<title>sun.rmi.server.MarshalOutputStream$1 (5 samples, 0.06%)</title><rect x="294.0" y="803.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="297.0" y="814.0"></text>
</g>
<g>
<title>sun.rmi.transport.ObjectEndpoint (2 samples, 0.02%)</title><rect x="294.8" y="947.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="297.8" y="958.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (314 samples, 3.57%)</title><rect x="295.2" y="947.0" width="42.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="298.2" y="958.0">sun/..</text>
</g>
<g>
<title>sun.rmi.transport.ConnectionInputStream (2 samples, 0.02%)</title><rect x="295.2" y="931.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="298.2" y="942.0"></text>
</g>
<g>
<title>sun.rmi.transport.ConnectionInputStream (4 samples, 0.05%)</title><rect x="295.5" y="931.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="298.5" y="942.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (308 samples, 3.50%)</title><rect x="296.0" y="931.0" width="41.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="299.0" y="942.0">sun..</text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (308 samples, 3.50%)</title><rect x="296.0" y="915.0" width="41.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="299.0" y="926.0">sun..</text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (307 samples, 3.49%)</title><rect x="296.2" y="899.0" width="41.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="299.2" y="910.0">jav..</text>
</g>
<g>
<title>java.io.ObjectInputStream$BlockDataInputStream (7 samples, 0.08%)</title><rect x="296.2" y="883.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="299.2" y="894.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$HandleTable (4 samples, 0.05%)</title><rect x="297.1" y="883.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="300.1" y="894.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$ValidationList (2 samples, 0.02%)</title><rect x="297.7" y="883.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="300.7" y="894.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (249 samples, 2.83%)</title><rect x="297.9" y="883.0" width="33.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="300.9" y="894.0">ja..</text>
</g>
<g>
<title>byte[] (12 samples, 0.14%)</title><rect x="297.9" y="867.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="300.9" y="878.0"></text>
</g>
<g>
<title>byte[] (68 samples, 0.77%)</title><rect x="299.5" y="867.0" width="9.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="302.5" y="878.0"></text>
</g>
<g>
<title>char[] (12 samples, 0.14%)</title><rect x="308.7" y="867.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="311.7" y="878.0"></text>
</g>
<g>
<title>char[] (72 samples, 0.82%)</title><rect x="310.3" y="867.0" width="9.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="313.3" y="878.0"></text>
</g>
<g>
<title>java.io.DataInputStream (6 samples, 0.07%)</title><rect x="319.9" y="867.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="322.9" y="878.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$PeekInputStream (3 samples, 0.03%)</title><rect x="320.7" y="867.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="323.7" y="878.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (76 samples, 0.86%)</title><rect x="321.1" y="867.0" width="10.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="324.1" y="878.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.49%)</title><rect x="321.1" y="851.0" width="5.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="324.1" y="862.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.02%)</title><rect x="326.9" y="851.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="329.9" y="862.0"></text>
</g>
<g>
<title>char[] (17 samples, 0.19%)</title><rect x="327.2" y="851.0" width="2.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="330.2" y="862.0"></text>
</g>
<g>
<title>char[] (14 samples, 0.16%)</title><rect x="329.5" y="851.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="332.5" y="862.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.&lt;init&gt; (45 samples, 0.51%)</title><rect x="331.3" y="883.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="334.3" y="894.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.10%)</title><rect x="331.3" y="867.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="334.3" y="878.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$HandleTable$HandleList[] (16 samples, 0.18%)</title><rect x="332.6" y="867.0" width="2.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="335.6" y="878.0"></text>
</g>
<g>
<title>java.lang.Object[] (20 samples, 0.23%)</title><rect x="334.7" y="867.0" width="2.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="337.7" y="878.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.setContextClassLoader (6 samples, 0.07%)</title><rect x="337.4" y="947.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="340.4" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.07%)</title><rect x="337.4" y="931.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="340.4" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.07%)</title><rect x="337.4" y="915.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="340.4" y="926.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$$Lambda$97/733344121.get$Lambda (6 samples, 0.07%)</title><rect x="337.4" y="899.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="340.4" y="910.0"></text>
</g>
<g>
<title>sun.rmi.transport.Transport$$Lambda$97 (6 samples, 0.07%)</title><rect x="337.4" y="883.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="340.4" y="894.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (6,345 samples, 72.18%)</title><rect x="338.3" y="1107.0" width="851.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="341.3" y="1118.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/Session.process (6,345 samples, 72.18%)</title><rect x="338.3" y="1091.0" width="851.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="341.3" y="1102.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (6,345 samples, 72.18%)</title><rect x="338.3" y="1075.0" width="851.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="341.3" y="1086.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (6,345 samples, 72.18%)</title><rect x="338.3" y="1059.0" width="851.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="341.3" y="1070.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (6,218 samples, 70.73%)</title><rect x="338.3" y="1043.0" width="834.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="341.3" y="1054.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (6,218 samples, 70.73%)</title><rect x="338.3" y="1027.0" width="834.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="341.3" y="1038.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (6,211 samples, 70.65%)</title><rect x="338.3" y="1011.0" width="833.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="341.3" y="1022.0">RequestHandler0_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (42 samples, 0.48%)</title><rect x="338.3" y="995.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="341.3" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (42 samples, 0.48%)</title><rect x="338.3" y="979.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="341.3" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (30 samples, 0.34%)</title><rect x="338.3" y="963.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="341.3" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (30 samples, 0.34%)</title><rect x="338.3" y="947.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="341.3" y="958.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.34%)</title><rect x="338.3" y="931.0" width="4.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="341.3" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (12 samples, 0.14%)</title><rect x="342.3" y="963.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="345.3" y="974.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (12 samples, 0.14%)</title><rect x="342.3" y="947.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="345.3" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (14 samples, 0.16%)</title><rect x="344.0" y="995.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="347.0" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (14 samples, 0.16%)</title><rect x="344.0" y="979.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="347.0" y="990.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.16%)</title><rect x="344.0" y="963.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="347.0" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.16%)</title><rect x="344.0" y="947.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="347.0" y="958.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.08%)</title><rect x="344.0" y="931.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="347.0" y="942.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.08%)</title><rect x="344.9" y="931.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="347.9" y="942.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.08%)</title><rect x="344.9" y="915.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="347.9" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/art241111/MyHttpServer.entity (6,155 samples, 70.01%)</title><rect x="345.8" y="995.0" width="826.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="348.8" y="1006.0">ru/mail/polis/service/art241111/MyHttpServer.entity</text>
</g>
<g>
<title>java/lang/String.getBytes (17 samples, 0.19%)</title><rect x="345.8" y="979.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="348.8" y="990.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (17 samples, 0.19%)</title><rect x="345.8" y="963.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="348.8" y="974.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (17 samples, 0.19%)</title><rect x="345.8" y="947.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="348.8" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (17 samples, 0.19%)</title><rect x="345.8" y="931.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="348.8" y="942.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.19%)</title><rect x="345.8" y="915.0" width="2.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="348.8" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.27%)</title><rect x="348.1" y="979.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="351.1" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.27%)</title><rect x="348.1" y="963.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="351.1" y="974.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (24 samples, 0.27%)</title><rect x="348.1" y="947.0" width="3.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="351.1" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/art241111/handlers/EntityHandler.handleGetRequest (6,114 samples, 69.55%)</title><rect x="351.3" y="979.0" width="820.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="354.3" y="990.0">ru/mail/polis/service/art241111/handlers/EntityHandler.handleGetRequest</text>
</g>
<g>
<title>byte[] (9 samples, 0.10%)</title><rect x="351.3" y="963.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="354.3" y="974.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (677 samples, 7.70%)</title><rect x="352.6" y="963.0" width="90.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="355.6" y="974.0">ch/qos/log..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (677 samples, 7.70%)</title><rect x="352.6" y="947.0" width="90.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="355.6" y="958.0">ch/qos/log..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (669 samples, 7.61%)</title><rect x="352.6" y="931.0" width="89.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="355.6" y="942.0">ch/qos/log..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (35 samples, 0.40%)</title><rect x="352.6" y="915.0" width="4.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="355.6" y="926.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (634 samples, 7.21%)</title><rect x="357.2" y="915.0" width="85.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="360.2" y="926.0">ch/qos/log..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (634 samples, 7.21%)</title><rect x="357.2" y="899.0" width="85.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="360.2" y="910.0">ch/qos/log..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (634 samples, 7.21%)</title><rect x="357.2" y="883.0" width="85.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="360.2" y="894.0">ch/qos/log..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (634 samples, 7.21%)</title><rect x="357.2" y="867.0" width="85.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="360.2" y="878.0">ch/qos/log..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (634 samples, 7.21%)</title><rect x="357.2" y="851.0" width="85.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="360.2" y="862.0">ch/qos/log..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (634 samples, 7.21%)</title><rect x="357.2" y="835.0" width="85.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="360.2" y="846.0">ch/qos/log..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (233 samples, 2.65%)</title><rect x="357.2" y="819.0" width="31.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="360.2" y="830.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (233 samples, 2.65%)</title><rect x="357.2" y="803.0" width="31.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="360.2" y="814.0">ch..</text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (233 samples, 2.65%)</title><rect x="357.2" y="787.0" width="31.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="360.2" y="798.0">or..</text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (233 samples, 2.65%)</title><rect x="357.2" y="771.0" width="31.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="360.2" y="782.0">or..</text>
</g>
<g>
<title>java.lang.StringBuilder (9 samples, 0.10%)</title><rect x="357.2" y="755.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="360.2" y="766.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (30 samples, 0.34%)</title><rect x="358.5" y="755.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="361.5" y="766.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (30 samples, 0.34%)</title><rect x="358.5" y="739.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="361.5" y="750.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.34%)</title><rect x="358.5" y="723.0" width="4.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="361.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (40 samples, 0.46%)</title><rect x="362.5" y="755.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="365.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (40 samples, 0.46%)</title><rect x="362.5" y="739.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="365.5" y="750.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.11%)</title><rect x="362.5" y="723.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="365.5" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (30 samples, 0.34%)</title><rect x="363.8" y="723.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="366.8" y="734.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.34%)</title><rect x="363.8" y="707.0" width="4.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="366.8" y="718.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (154 samples, 1.75%)</title><rect x="367.9" y="755.0" width="20.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="370.9" y="766.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.byteArrayAppend (49 samples, 0.56%)</title><rect x="367.9" y="739.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="370.9" y="750.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (49 samples, 0.56%)</title><rect x="367.9" y="723.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="370.9" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (49 samples, 0.56%)</title><rect x="367.9" y="707.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="370.9" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (49 samples, 0.56%)</title><rect x="367.9" y="691.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="370.9" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (49 samples, 0.56%)</title><rect x="367.9" y="675.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="370.9" y="686.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.56%)</title><rect x="367.9" y="659.0" width="6.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="370.9" y="670.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (105 samples, 1.19%)</title><rect x="374.4" y="739.0" width="14.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="377.4" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.toString (105 samples, 1.19%)</title><rect x="374.4" y="723.0" width="14.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="377.4" y="734.0"></text>
</g>
<g>
<title>java.lang.StringBuffer (14 samples, 0.16%)</title><rect x="374.4" y="707.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="377.4" y="718.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="376.3" y="707.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="379.3" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (3 samples, 0.03%)</title><rect x="376.3" y="691.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="379.3" y="702.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.03%)</title><rect x="376.3" y="675.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="379.3" y="686.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (47 samples, 0.53%)</title><rect x="376.7" y="707.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="379.7" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (47 samples, 0.53%)</title><rect x="376.7" y="691.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="379.7" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (47 samples, 0.53%)</title><rect x="376.7" y="675.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="379.7" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (47 samples, 0.53%)</title><rect x="376.7" y="659.0" width="6.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="379.7" y="670.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.53%)</title><rect x="376.7" y="643.0" width="6.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="379.7" y="654.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (41 samples, 0.47%)</title><rect x="383.0" y="707.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="386.0" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (41 samples, 0.47%)</title><rect x="383.0" y="691.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="386.0" y="702.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.14%)</title><rect x="383.0" y="675.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="386.0" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (29 samples, 0.33%)</title><rect x="384.6" y="675.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="387.6" y="686.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.33%)</title><rect x="384.6" y="659.0" width="3.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="387.6" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (401 samples, 4.56%)</title><rect x="388.5" y="819.0" width="53.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="391.5" y="830.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (332 samples, 3.78%)</title><rect x="388.5" y="803.0" width="44.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="391.5" y="814.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (332 samples, 3.78%)</title><rect x="388.5" y="787.0" width="44.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="391.5" y="798.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (16 samples, 0.18%)</title><rect x="388.5" y="771.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="391.5" y="782.0"></text>
</g>
<g>
<title>java.util.Date (2 samples, 0.02%)</title><rect x="388.5" y="755.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="391.5" y="766.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (14 samples, 0.16%)</title><rect x="388.8" y="755.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="391.8" y="766.0"></text>
</g>
<g>
<title>java.lang.StringBuffer (2 samples, 0.02%)</title><rect x="388.8" y="739.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="391.8" y="750.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (7 samples, 0.08%)</title><rect x="389.1" y="739.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="392.1" y="750.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (7 samples, 0.08%)</title><rect x="389.1" y="723.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="392.1" y="734.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.08%)</title><rect x="389.1" y="707.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="392.1" y="718.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (5 samples, 0.06%)</title><rect x="390.0" y="739.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="393.0" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.06%)</title><rect x="390.0" y="723.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="393.0" y="734.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.05%)</title><rect x="390.0" y="707.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="393.0" y="718.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (10 samples, 0.11%)</title><rect x="390.7" y="771.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="393.7" y="782.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (9 samples, 0.10%)</title><rect x="392.0" y="771.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="395.0" y="782.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (9 samples, 0.10%)</title><rect x="392.0" y="755.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="395.0" y="766.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.10%)</title><rect x="392.0" y="739.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="395.0" y="750.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (214 samples, 2.43%)</title><rect x="393.2" y="771.0" width="28.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="396.2" y="782.0">ja..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (214 samples, 2.43%)</title><rect x="393.2" y="755.0" width="28.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="396.2" y="766.0">ja..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (214 samples, 2.43%)</title><rect x="393.2" y="739.0" width="28.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="396.2" y="750.0">ja..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (214 samples, 2.43%)</title><rect x="393.2" y="723.0" width="28.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="396.2" y="734.0">ja..</text>
</g>
<g>
<title>byte[] (214 samples, 2.43%)</title><rect x="393.2" y="707.0" width="28.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="396.2" y="718.0">by..</text>
</g>
<g>
<title>java/lang/StringBuilder.toString (83 samples, 0.94%)</title><rect x="421.9" y="771.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="424.9" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (83 samples, 0.94%)</title><rect x="421.9" y="755.0" width="11.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="424.9" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (83 samples, 0.94%)</title><rect x="421.9" y="739.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="424.9" y="750.0"></text>
</g>
<g>
<title>byte[] (83 samples, 0.94%)</title><rect x="421.9" y="723.0" width="11.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="424.9" y="734.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (69 samples, 0.78%)</title><rect x="433.1" y="803.0" width="9.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="436.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (69 samples, 0.78%)</title><rect x="433.1" y="787.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="436.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (69 samples, 0.78%)</title><rect x="433.1" y="771.0" width="9.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="436.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (69 samples, 0.78%)</title><rect x="433.1" y="755.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="436.1" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (69 samples, 0.78%)</title><rect x="433.1" y="739.0" width="9.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="436.1" y="750.0"></text>
</g>
<g>
<title>byte[] (69 samples, 0.78%)</title><rect x="433.1" y="723.0" width="9.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="436.1" y="734.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.09%)</title><rect x="442.3" y="931.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="445.3" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (50 samples, 0.57%)</title><rect x="443.4" y="963.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="446.4" y="974.0"></text>
</g>
<g>
<title>one.nio.http.Response (9 samples, 0.10%)</title><rect x="443.4" y="947.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="446.4" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (41 samples, 0.47%)</title><rect x="444.6" y="947.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="447.6" y="958.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.15%)</title><rect x="444.6" y="931.0" width="1.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="447.6" y="942.0"></text>
</g>
<g>
<title>java.lang.String[] (11 samples, 0.13%)</title><rect x="446.4" y="931.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="449.4" y="942.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.19%)</title><rect x="447.9" y="931.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="450.9" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (5,378 samples, 61.18%)</title><rect x="450.1" y="963.0" width="721.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="453.1" y="974.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (454 samples, 5.16%)</title><rect x="450.1" y="947.0" width="61.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="453.1" y="958.0">com/go..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (454 samples, 5.16%)</title><rect x="450.1" y="931.0" width="61.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="453.1" y="942.0">com/go..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (454 samples, 5.16%)</title><rect x="450.1" y="915.0" width="61.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="453.1" y="926.0">com/go..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (454 samples, 5.16%)</title><rect x="450.1" y="899.0" width="61.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="453.1" y="910.0">com/go..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (454 samples, 5.16%)</title><rect x="450.1" y="883.0" width="61.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="453.1" y="894.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (392 samples, 4.46%)</title><rect x="450.1" y="867.0" width="52.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="453.1" y="878.0">com/g..</text>
</g>
<g>
<title>java/util/AbstractQueue.remove (51 samples, 0.58%)</title><rect x="450.1" y="851.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="453.1" y="862.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (51 samples, 0.58%)</title><rect x="450.1" y="835.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="453.1" y="846.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (51 samples, 0.58%)</title><rect x="450.1" y="819.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="453.1" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (51 samples, 0.58%)</title><rect x="450.1" y="803.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="453.1" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (51 samples, 0.58%)</title><rect x="450.1" y="787.0" width="6.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="453.1" y="798.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (51 samples, 0.58%)</title><rect x="450.1" y="771.0" width="6.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="453.1" y="782.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (51 samples, 0.58%)</title><rect x="450.1" y="755.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="453.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/Cell.compareTo (51 samples, 0.58%)</title><rect x="450.1" y="739.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="453.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/Cell.compareTo (51 samples, 0.58%)</title><rect x="450.1" y="723.0" width="6.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="453.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/Cell.getKey (51 samples, 0.58%)</title><rect x="450.1" y="707.0" width="6.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="453.1" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (51 samples, 0.58%)</title><rect x="450.1" y="691.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="453.1" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (51 samples, 0.58%)</title><rect x="450.1" y="675.0" width="6.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="453.1" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (341 samples, 3.88%)</title><rect x="457.0" y="851.0" width="45.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="460.0" y="862.0">java..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (341 samples, 3.88%)</title><rect x="457.0" y="835.0" width="45.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="460.0" y="846.0">java..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (341 samples, 3.88%)</title><rect x="457.0" y="819.0" width="45.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="460.0" y="830.0">java..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (341 samples, 3.88%)</title><rect x="457.0" y="803.0" width="45.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="460.0" y="814.0">java..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (341 samples, 3.88%)</title><rect x="457.0" y="787.0" width="45.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="460.0" y="798.0">com/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (341 samples, 3.88%)</title><rect x="457.0" y="771.0" width="45.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="460.0" y="782.0">com/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (283 samples, 3.22%)</title><rect x="457.0" y="755.0" width="38.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="460.0" y="766.0">com..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (4 samples, 0.05%)</title><rect x="457.0" y="739.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="460.0" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (4 samples, 0.05%)</title><rect x="457.0" y="723.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="460.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/MemTable$$Lambda$103/1183565729.apply (4 samples, 0.05%)</title><rect x="457.0" y="707.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="460.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/MemTable.lambda$iterator$0 (4 samples, 0.05%)</title><rect x="457.0" y="691.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="460.0" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.art241111.Cell (4 samples, 0.05%)</title><rect x="457.0" y="675.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="460.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable$1.next (279 samples, 3.17%)</title><rect x="457.5" y="739.0" width="37.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="460.5" y="750.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable$1.next (279 samples, 3.17%)</title><rect x="457.5" y="723.0" width="37.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="460.5" y="734.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getCell (279 samples, 3.17%)</title><rect x="457.5" y="707.0" width="37.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="460.5" y="718.0">ru/..</text>
</g>
<g>
<title>ru.mail.polis.dao.art241111.Cell (11 samples, 0.13%)</title><rect x="457.5" y="691.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="460.5" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.art241111.Value (14 samples, 0.16%)</title><rect x="459.0" y="691.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="462.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getOffset (84 samples, 0.96%)</title><rect x="460.9" y="691.0" width="11.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="463.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.readOffset (84 samples, 0.96%)</title><rect x="460.9" y="675.0" width="11.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="463.9" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (84 samples, 0.96%)</title><rect x="460.9" y="659.0" width="11.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="463.9" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (56 samples, 0.64%)</title><rect x="460.9" y="643.0" width="7.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="463.9" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (28 samples, 0.32%)</title><rect x="468.4" y="643.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="471.4" y="654.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.32%)</title><rect x="468.4" y="627.0" width="3.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="471.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.readOffset (170 samples, 1.93%)</title><rect x="472.1" y="691.0" width="22.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="475.1" y="702.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (170 samples, 1.93%)</title><rect x="472.1" y="675.0" width="22.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="475.1" y="686.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (115 samples, 1.31%)</title><rect x="472.1" y="659.0" width="15.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="475.1" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (55 samples, 0.63%)</title><rect x="487.6" y="659.0" width="7.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="490.6" y="670.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.63%)</title><rect x="487.6" y="643.0" width="7.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="490.6" y="654.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (58 samples, 0.66%)</title><rect x="495.0" y="755.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="498.0" y="766.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (58 samples, 0.66%)</title><rect x="495.0" y="739.0" width="7.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="498.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/Cell.compareTo (58 samples, 0.66%)</title><rect x="495.0" y="723.0" width="7.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="498.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/Cell.compareTo (58 samples, 0.66%)</title><rect x="495.0" y="707.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="498.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/Cell.getKey (58 samples, 0.66%)</title><rect x="495.0" y="691.0" width="7.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="498.0" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (58 samples, 0.66%)</title><rect x="495.0" y="675.0" width="7.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="498.0" y="686.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (58 samples, 0.66%)</title><rect x="495.0" y="659.0" width="7.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="498.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/TurboDAO$$Lambda$105/641314004.apply (62 samples, 0.71%)</title><rect x="502.8" y="867.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="505.8" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/Cell.getKey (62 samples, 0.71%)</title><rect x="502.8" y="851.0" width="8.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="505.8" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (62 samples, 0.71%)</title><rect x="502.8" y="835.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="505.8" y="846.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (62 samples, 0.71%)</title><rect x="502.8" y="819.0" width="8.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="505.8" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (23 samples, 0.26%)</title><rect x="511.1" y="947.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="514.1" y="958.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (23 samples, 0.26%)</title><rect x="511.1" y="931.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="514.1" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/TurboDAO$$Lambda$107/664890708.apply (23 samples, 0.26%)</title><rect x="511.1" y="915.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="514.1" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/TurboDAO.lambda$iterator$4 (23 samples, 0.26%)</title><rect x="511.1" y="899.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="514.1" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (7 samples, 0.08%)</title><rect x="511.1" y="883.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="514.1" y="894.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (7 samples, 0.08%)</title><rect x="511.1" y="867.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="514.1" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/Cell.getKey (16 samples, 0.18%)</title><rect x="512.0" y="883.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="515.0" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (16 samples, 0.18%)</title><rect x="512.0" y="867.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.0" y="878.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (16 samples, 0.18%)</title><rect x="512.0" y="851.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="515.0" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (19 samples, 0.22%)</title><rect x="514.2" y="947.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="517.2" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (19 samples, 0.22%)</title><rect x="514.2" y="931.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="517.2" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (19 samples, 0.22%)</title><rect x="514.2" y="915.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="517.2" y="926.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (19 samples, 0.22%)</title><rect x="514.2" y="899.0" width="2.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="517.2" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (15 samples, 0.17%)</title><rect x="516.7" y="947.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="519.7" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (15 samples, 0.17%)</title><rect x="516.7" y="931.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="519.7" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (15 samples, 0.17%)</title><rect x="516.7" y="915.0" width="2.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="519.7" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/TurboDAO.iterator (4,867 samples, 55.36%)</title><rect x="518.7" y="947.0" width="653.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="521.7" y="958.0">ru/mail/polis/dao/art241111/TurboDAO.iterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (11 samples, 0.13%)</title><rect x="518.7" y="931.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="521.7" y="942.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (11 samples, 0.13%)</title><rect x="518.7" y="915.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="521.7" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (7 samples, 0.08%)</title><rect x="520.2" y="931.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="523.2" y="942.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (7 samples, 0.08%)</title><rect x="520.2" y="915.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="523.2" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/TurboDAO.cellIterator (4,849 samples, 55.16%)</title><rect x="521.1" y="931.0" width="650.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="524.1" y="942.0">ru/mail/polis/dao/art241111/TurboDAO.cellIterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (650 samples, 7.39%)</title><rect x="521.1" y="915.0" width="87.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="524.1" y="926.0">com/google..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (9 samples, 0.10%)</title><rect x="521.1" y="899.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="524.1" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (641 samples, 7.29%)</title><rect x="522.3" y="899.0" width="86.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="525.3" y="910.0">com/google..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (9 samples, 0.10%)</title><rect x="522.3" y="883.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="525.3" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (32 samples, 0.36%)</title><rect x="523.6" y="883.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="526.6" y="894.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (32 samples, 0.36%)</title><rect x="523.6" y="867.0" width="4.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="526.6" y="878.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (12 samples, 0.14%)</title><rect x="527.9" y="883.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="530.9" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (7 samples, 0.08%)</title><rect x="529.5" y="883.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="532.5" y="894.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (7 samples, 0.08%)</title><rect x="529.5" y="867.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="532.5" y="878.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (12 samples, 0.14%)</title><rect x="530.4" y="883.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="533.4" y="894.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.14%)</title><rect x="530.4" y="867.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="533.4" y="878.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (569 samples, 6.47%)</title><rect x="532.0" y="883.0" width="76.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="535.0" y="894.0">java/uti..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (569 samples, 6.47%)</title><rect x="532.0" y="867.0" width="76.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="535.0" y="878.0">java/uti..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (18 samples, 0.20%)</title><rect x="532.0" y="851.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="535.0" y="862.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (18 samples, 0.20%)</title><rect x="532.0" y="835.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="535.0" y="846.0"></text>
</g>
<g>
<title>java.lang.Object[] (18 samples, 0.20%)</title><rect x="532.0" y="819.0" width="2.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="535.0" y="830.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (551 samples, 6.27%)</title><rect x="534.4" y="851.0" width="74.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="537.4" y="862.0">java/uti..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (551 samples, 6.27%)</title><rect x="534.4" y="835.0" width="74.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="537.4" y="846.0">java/uti..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (551 samples, 6.27%)</title><rect x="534.4" y="819.0" width="74.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="537.4" y="830.0">com/goog..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (551 samples, 6.27%)</title><rect x="534.4" y="803.0" width="74.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="537.4" y="814.0">com/goog..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (493 samples, 5.61%)</title><rect x="534.4" y="787.0" width="66.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="537.4" y="798.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (2 samples, 0.02%)</title><rect x="534.4" y="771.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="537.4" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (2 samples, 0.02%)</title><rect x="534.4" y="755.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="537.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/MemTable$$Lambda$103/1183565729.apply (2 samples, 0.02%)</title><rect x="534.4" y="739.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="537.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/MemTable.lambda$iterator$0 (2 samples, 0.02%)</title><rect x="534.4" y="723.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="537.4" y="734.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.art241111.Cell (2 samples, 0.02%)</title><rect x="534.4" y="707.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="537.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable$1.next (491 samples, 5.59%)</title><rect x="534.7" y="771.0" width="65.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="537.7" y="782.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable$1.next (491 samples, 5.59%)</title><rect x="534.7" y="755.0" width="65.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="537.7" y="766.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getCell (491 samples, 5.59%)</title><rect x="534.7" y="739.0" width="65.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="537.7" y="750.0">ru/mail..</text>
</g>
<g>
<title>ru.mail.polis.dao.art241111.Cell (23 samples, 0.26%)</title><rect x="534.7" y="723.0" width="3.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="537.7" y="734.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.art241111.Value (22 samples, 0.25%)</title><rect x="537.8" y="723.0" width="2.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="540.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getOffset (168 samples, 1.91%)</title><rect x="540.7" y="723.0" width="22.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="543.7" y="734.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.readOffset (168 samples, 1.91%)</title><rect x="540.7" y="707.0" width="22.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="543.7" y="718.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (168 samples, 1.91%)</title><rect x="540.7" y="691.0" width="22.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="543.7" y="702.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (109 samples, 1.24%)</title><rect x="540.7" y="675.0" width="14.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="543.7" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (59 samples, 0.67%)</title><rect x="555.4" y="675.0" width="7.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="558.4" y="686.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.67%)</title><rect x="555.4" y="659.0" width="7.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="558.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.readOffset (278 samples, 3.16%)</title><rect x="563.3" y="723.0" width="37.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="566.3" y="734.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (278 samples, 3.16%)</title><rect x="563.3" y="707.0" width="37.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="566.3" y="718.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (170 samples, 1.93%)</title><rect x="563.3" y="691.0" width="22.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="566.3" y="702.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (108 samples, 1.23%)</title><rect x="586.1" y="691.0" width="14.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="589.1" y="702.0"></text>
</g>
<g>
<title>byte[] (108 samples, 1.23%)</title><rect x="586.1" y="675.0" width="14.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="589.1" y="686.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (58 samples, 0.66%)</title><rect x="600.6" y="787.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="603.6" y="798.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (58 samples, 0.66%)</title><rect x="600.6" y="771.0" width="7.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="603.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/Cell.compareTo (58 samples, 0.66%)</title><rect x="600.6" y="755.0" width="7.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="603.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/Cell.compareTo (58 samples, 0.66%)</title><rect x="600.6" y="739.0" width="7.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="603.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/Cell.getKey (58 samples, 0.66%)</title><rect x="600.6" y="723.0" width="7.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="603.6" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (58 samples, 0.66%)</title><rect x="600.6" y="707.0" width="7.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="603.6" y="718.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (58 samples, 0.66%)</title><rect x="600.6" y="691.0" width="7.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="603.6" y="702.0"></text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.07%)</title><rect x="608.4" y="915.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="611.4" y="926.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (3,914 samples, 44.52%)</title><rect x="609.2" y="915.0" width="525.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="612.2" y="926.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (11 samples, 0.13%)</title><rect x="609.2" y="899.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="612.2" y="910.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (11 samples, 0.13%)</title><rect x="609.2" y="883.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="612.2" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (11 samples, 0.13%)</title><rect x="609.2" y="867.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="612.2" y="878.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (11 samples, 0.13%)</title><rect x="609.2" y="851.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="612.2" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/TurboDAO$$Lambda$104/1752900166.accept (3,903 samples, 44.40%)</title><rect x="610.7" y="899.0" width="523.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="613.7" y="910.0">ru/mail/polis/dao/art241111/TurboDAO$$Lambda$104/1752900166.accept</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/TurboDAO.lambda$cellIterator$5 (3,903 samples, 44.40%)</title><rect x="610.7" y="883.0" width="523.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="613.7" y="894.0">ru/mail/polis/dao/art241111/TurboDAO.lambda$cellIterator$5</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.iterator (3,903 samples, 44.40%)</title><rect x="610.7" y="867.0" width="523.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="613.7" y="878.0">ru/mail/polis/dao/art241111/SSTable.iterator</text>
</g>
<g>
<title>ru.mail.polis.dao.art241111.SSTable$1 (32 samples, 0.36%)</title><rect x="610.7" y="851.0" width="4.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="613.7" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable$1.&lt;init&gt; (3,871 samples, 44.03%)</title><rect x="615.0" y="851.0" width="519.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="618.0" y="862.0">ru/mail/polis/dao/art241111/SSTable$1.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getKeyPosition (3,871 samples, 44.03%)</title><rect x="615.0" y="835.0" width="519.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="618.0" y="846.0">ru/mail/polis/dao/art241111/SSTable.getKeyPosition</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getKey (3,871 samples, 44.03%)</title><rect x="615.0" y="819.0" width="519.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="618.0" y="830.0">ru/mail/polis/dao/art241111/SSTable.getKey</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getOffset (1,278 samples, 14.54%)</title><rect x="615.0" y="803.0" width="171.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="618.0" y="814.0">ru/mail/polis/dao/art2..</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.readOffset (1,278 samples, 14.54%)</title><rect x="615.0" y="787.0" width="171.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="618.0" y="798.0">ru/mail/polis/dao/art2..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,278 samples, 14.54%)</title><rect x="615.0" y="771.0" width="171.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="618.0" y="782.0">java/nio/ByteBuffer.al..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (880 samples, 10.01%)</title><rect x="615.0" y="755.0" width="118.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="618.0" y="766.0">java.nio.HeapB..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (398 samples, 4.53%)</title><rect x="733.1" y="755.0" width="53.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="736.1" y="766.0">java/..</text>
</g>
<g>
<title>byte[] (398 samples, 4.53%)</title><rect x="733.1" y="739.0" width="53.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="736.1" y="750.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.readOffset (2,593 samples, 29.50%)</title><rect x="786.5" y="803.0" width="348.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="789.5" y="814.0">ru/mail/polis/dao/art241111/SSTable.readOffset</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,593 samples, 29.50%)</title><rect x="786.5" y="787.0" width="348.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="789.5" y="798.0">java/nio/ByteBuffer.allocate</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,751 samples, 19.92%)</title><rect x="786.5" y="771.0" width="235.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="789.5" y="782.0">java.nio.HeapByteBuffer</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (842 samples, 9.58%)</title><rect x="1021.5" y="771.0" width="113.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1024.5" y="782.0">java/nio/HeapB..</text>
</g>
<g>
<title>byte[] (842 samples, 9.58%)</title><rect x="1021.5" y="755.0" width="113.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1024.5" y="766.0">byte[]</text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (10 samples, 0.11%)</title><rect x="1134.6" y="915.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1137.6" y="926.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.11%)</title><rect x="1134.6" y="899.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1137.6" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (241 samples, 2.74%)</title><rect x="1135.9" y="915.0" width="32.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1138.9" y="926.0">ru..</text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (7 samples, 0.08%)</title><rect x="1135.9" y="899.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1138.9" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (234 samples, 2.66%)</title><rect x="1136.8" y="899.0" width="31.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1139.8" y="910.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (234 samples, 2.66%)</title><rect x="1136.8" y="883.0" width="31.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1139.8" y="894.0">co..</text>
</g>
<g>
<title>java/util/AbstractQueue.remove (39 samples, 0.44%)</title><rect x="1136.8" y="867.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1139.8" y="878.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (39 samples, 0.44%)</title><rect x="1136.8" y="851.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1139.8" y="862.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (39 samples, 0.44%)</title><rect x="1136.8" y="835.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1139.8" y="846.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (39 samples, 0.44%)</title><rect x="1136.8" y="819.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1139.8" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (39 samples, 0.44%)</title><rect x="1136.8" y="803.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1139.8" y="814.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (39 samples, 0.44%)</title><rect x="1136.8" y="787.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1139.8" y="798.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (39 samples, 0.44%)</title><rect x="1136.8" y="771.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1139.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/Cell.compareTo (39 samples, 0.44%)</title><rect x="1136.8" y="755.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1139.8" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/Cell.compareTo (39 samples, 0.44%)</title><rect x="1136.8" y="739.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1139.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/Cell.getKey (39 samples, 0.44%)</title><rect x="1136.8" y="723.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1139.8" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (39 samples, 0.44%)</title><rect x="1136.8" y="707.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1139.8" y="718.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (39 samples, 0.44%)</title><rect x="1136.8" y="691.0" width="5.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1139.8" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (195 samples, 2.22%)</title><rect x="1142.1" y="867.0" width="26.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1145.1" y="878.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (195 samples, 2.22%)</title><rect x="1142.1" y="851.0" width="26.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1145.1" y="862.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (195 samples, 2.22%)</title><rect x="1142.1" y="835.0" width="26.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1145.1" y="846.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (195 samples, 2.22%)</title><rect x="1142.1" y="819.0" width="26.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1145.1" y="830.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (195 samples, 2.22%)</title><rect x="1142.1" y="803.0" width="26.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1145.1" y="814.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (195 samples, 2.22%)</title><rect x="1142.1" y="787.0" width="26.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1145.1" y="798.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (173 samples, 1.97%)</title><rect x="1142.1" y="771.0" width="23.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1145.1" y="782.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable$1.next (173 samples, 1.97%)</title><rect x="1142.1" y="755.0" width="23.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1145.1" y="766.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable$1.next (173 samples, 1.97%)</title><rect x="1142.1" y="739.0" width="23.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1145.1" y="750.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getCell (173 samples, 1.97%)</title><rect x="1142.1" y="723.0" width="23.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1145.1" y="734.0">r..</text>
</g>
<g>
<title>ru.mail.polis.dao.art241111.Cell (7 samples, 0.08%)</title><rect x="1142.1" y="707.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1145.1" y="718.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.art241111.Value (5 samples, 0.06%)</title><rect x="1143.0" y="707.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1146.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.getOffset (57 samples, 0.65%)</title><rect x="1143.7" y="707.0" width="7.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1146.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.readOffset (57 samples, 0.65%)</title><rect x="1143.7" y="691.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1146.7" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (57 samples, 0.65%)</title><rect x="1143.7" y="675.0" width="7.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1146.7" y="686.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (33 samples, 0.38%)</title><rect x="1143.7" y="659.0" width="4.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1146.7" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (24 samples, 0.27%)</title><rect x="1148.1" y="659.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1151.1" y="670.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.27%)</title><rect x="1148.1" y="643.0" width="3.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1151.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/SSTable.readOffset (104 samples, 1.18%)</title><rect x="1151.3" y="707.0" width="14.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1154.3" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (104 samples, 1.18%)</title><rect x="1151.3" y="691.0" width="14.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1154.3" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (64 samples, 0.73%)</title><rect x="1151.3" y="675.0" width="8.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1154.3" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (40 samples, 0.46%)</title><rect x="1159.9" y="675.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1162.9" y="686.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.46%)</title><rect x="1159.9" y="659.0" width="5.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1162.9" y="670.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (22 samples, 0.25%)</title><rect x="1165.3" y="771.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1168.3" y="782.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (22 samples, 0.25%)</title><rect x="1165.3" y="755.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1168.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/Cell.compareTo (22 samples, 0.25%)</title><rect x="1165.3" y="739.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1168.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/Cell.compareTo (22 samples, 0.25%)</title><rect x="1165.3" y="723.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1168.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/Cell.getKey (22 samples, 0.25%)</title><rect x="1165.3" y="707.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1168.3" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (22 samples, 0.25%)</title><rect x="1165.3" y="691.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1168.3" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (22 samples, 0.25%)</title><rect x="1165.3" y="675.0" width="3.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1168.3" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/art241111/MemTable.iterator (28 samples, 0.32%)</title><rect x="1168.3" y="915.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1171.3" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (4 samples, 0.05%)</title><rect x="1168.3" y="899.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1171.3" y="910.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (4 samples, 0.05%)</title><rect x="1168.3" y="883.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1171.3" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (8 samples, 0.09%)</title><rect x="1168.8" y="899.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1171.8" y="910.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (8 samples, 0.09%)</title><rect x="1168.8" y="883.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1171.8" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (7 samples, 0.08%)</title><rect x="1169.9" y="899.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1172.9" y="910.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (7 samples, 0.08%)</title><rect x="1169.9" y="883.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1172.9" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (9 samples, 0.10%)</title><rect x="1170.8" y="899.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1173.8" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (9 samples, 0.10%)</title><rect x="1170.8" y="883.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1173.8" y="894.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (9 samples, 0.10%)</title><rect x="1170.8" y="867.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1173.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (7 samples, 0.08%)</title><rect x="1172.0" y="1011.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1175.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.08%)</title><rect x="1172.0" y="995.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1175.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.08%)</title><rect x="1172.0" y="979.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1175.0" y="990.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.06%)</title><rect x="1172.0" y="963.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1175.0" y="974.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.02%)</title><rect x="1172.7" y="963.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1175.7" y="974.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.02%)</title><rect x="1172.7" y="947.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1175.7" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (77 samples, 0.88%)</title><rect x="1173.0" y="1043.0" width="10.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1176.0" y="1054.0"></text>
</g>
<g>
<title>one.nio.http.Request (13 samples, 0.15%)</title><rect x="1173.0" y="1027.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1176.0" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (23 samples, 0.26%)</title><rect x="1174.7" y="1027.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1177.7" y="1038.0"></text>
</g>
<g>
<title>java.lang.String[] (23 samples, 0.26%)</title><rect x="1174.7" y="1011.0" width="3.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1177.7" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (41 samples, 0.47%)</title><rect x="1177.8" y="1027.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1180.8" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (41 samples, 0.47%)</title><rect x="1177.8" y="1011.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1180.8" y="1022.0"></text>
</g>
<g>
<title>char[] (20 samples, 0.23%)</title><rect x="1177.8" y="995.0" width="2.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1180.8" y="1006.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.06%)</title><rect x="1180.5" y="995.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1183.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.18%)</title><rect x="1181.1" y="995.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1184.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.18%)</title><rect x="1181.1" y="979.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1184.1" y="990.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (16 samples, 0.18%)</title><rect x="1181.1" y="963.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1184.1" y="974.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.18%)</title><rect x="1181.1" y="947.0" width="2.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1184.1" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (50 samples, 0.57%)</title><rect x="1183.3" y="1043.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1186.3" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (50 samples, 0.57%)</title><rect x="1183.3" y="1027.0" width="6.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1186.3" y="1038.0"></text>
</g>
<g>
<title>char[] (17 samples, 0.19%)</title><rect x="1183.3" y="1011.0" width="2.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1186.3" y="1022.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.07%)</title><rect x="1185.6" y="1011.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1188.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (27 samples, 0.31%)</title><rect x="1186.4" y="1011.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1189.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (27 samples, 0.31%)</title><rect x="1186.4" y="995.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1189.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (27 samples, 0.31%)</title><rect x="1186.4" y="979.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1189.4" y="990.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.31%)</title><rect x="1186.4" y="963.0" width="3.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1189.4" y="974.0"></text>
</g>
</g>
</svg>
